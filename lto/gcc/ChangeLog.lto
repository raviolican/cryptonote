2009-10-02  Diego Novillo  <dnovillo@google.com>

	* sourcebuild.texi: Document lto-plugin.
	* invoke.texi: Add documentation for -use-linker-plugin
	and complete documentation for -flto.
	* install.texi: Document --enable-gold.

2009-10-02  Richard Guenther  <rguenther@suse.de>

	PR lto/41547
	PR lto/41548
	* tree.h (is_lang_specific): Include LANG_TYPE.
	* tree.c (find_decls_types_r): Manually add interesting parts
	of TYPE_FIELDS.  Walk BINFO_VIRTUALS.  Do not walk TYPE_METHODS.

2009-10-01  Diego Novillo  <dnovillo@google.com>

	* tree.c (fld_worklist_push): Rename from PUSH.
	Convert to static inline function.
	Ignore language-specific nodes.
	Update all users.
	(find_decls_types_r): Do not traverse the subtrees of
	language-specific nodes.
	Do not traverse DECL_INITIAL for TYPE_DECLs.
	* tree.h (is_lang_specific): New.
	* langhooks.h (struct lang_hooks_for_decls): Remove
	may_need_assembler_name_p.  Update all users.

2009-10-01  Diego Novillo  <dnovillo@google.com>

	* lto-compress.c: Include diagnostic.h, errors.h.
	Replace some calls to gcc_assert with internal_error.
	* lto-cgraph.c: Tidy formatting.
	Replace some calls to gcc_unreachable with
	internal_error and an explanation.
	* lto-streamer-out.c: Likewise.
	* lto-wrapper.c: Fix copyright dates.
	Include coretypes.h, tm.h and intl.h.
	(fatal): Surround CMSGID with _().
	(fatal_perror): Likewise.
	(collect_wait): Make two calls to fatal().
	(main): Call gcc_init_libintl.
	* gcc/lto-streamer-in.c (lto_tag_check_set): New.
	(lto_tag_check_range): New.
	(lto_tag_check): New.
	(input_string_internal): Call internal_error instead of gcc_assert.
	(input_string): Likewise.
	(lto_input_tree_ref): Call lto_tag_check_range.
	(lto_input_eh_catch_list): Likewise.
	(input_eh_lp): Likewise.
	(input_eh_regions): Likewise.
	(input_bb): Likewise.
	(input_function): Likewise.
	(input_gimple_stmt): Call internal_error instead of
	gcc_unreachable.
	(lto_read_body): Call lto_check_version.
	(lto_materialize_tree): Call lto_tag_check.
	(lto_input_tree_pointers): Call sorry instead of
	gcc_unreachable.
	(lto_get_pickled_tree): Call internal_error instead of
	gcc_assert.
	* lto-section-in.c (lto_input_1_unsigned): Call
	internal_error instead of gcc_assert.
	(lto_record_renamed_decl): Call XNEW instead of xmalloc.
	* Makefile.in (lto-wrapper): Add intl.o and $(LIBS) to
	the link command.
	(lto-wrapper.o): Add dependency on intl.h.
	(lto-compress.o): Add dependency on errors.h
	(lto-streamer-out.o): Likewise.
	(lto-streamer.o): Add dependency on TOPLEV_H.
	(lto_get_section_name): Call internal_error instead of
	gcc_unreachable.
	* lto-opts.c (lto_read_file_options): Tidy formatting.
	Call lto_check_version.
	* lto-streamer.c: Include toplev.h
	(lto_check_version): New.
	* lto-streamer.h (lto_check_version): Declare.
	(lto_is_streamable): Call is_lang_specific.

2009-10-01  Rafael Avila de Espindola  <espindola@google.com>

	* gcc.c (LINK_COMMAND_SPEC): Use the -pass-through option to pass
	libgcc to the linker.

2009-10-01  Richard Guenther  <rguenther@suse.de>

	* gimple.c (type_pair_hash): Make symmetric.
	(type_pair_eq): Likewise.
	(lookup_type_pair): Increase initial hashtable size.
	(gimple_force_type_merge): Rely on type-pair symmetry.
	(visit): Remove excessive checking code.
	(iterative_hash_type_name): Do not hash TYPE_NAME of
	anonymous unions.
	(gimple_register_type): Remove getenv calls, shrink initial
	hashtable size.

2009-10-01  Rafael Avila de Espindola  <espindola@google.com>

	* lto-opts.c (lto_write_options): Update call to lto_begin_section.
	* lto-section-out.c (lto_begin_section): Add a compress argument.
	Update all callers.
	(produce_symtab): Don't compress.
	* lto-section-out.h (lto_begin_section): Add a compress argument.

2009-09-30  Richard Guenther  <rguenther@suse.de>

	PR middle-end/41502
	* lto-cgraph.c (lto_output_node): Mark node as not analyzed
	if it is a boundary node.
	(input_edge): Remove assertion on extern inlines.
	* cgraphunit.c (ipa_passes): Do not free extern inline bodies.

2009-09-30  Diego Novillo  <dnovillo@google.com>

	* tree.c (need_assembler_name_p): Cleanup.  Make sure
	that functions with cgraph nodes always get an assembler
	name.
	* Makefile.in (langhooks.o): Add dependency on output.h
	(varpool.o): Remove dependency on FLAGS_H.
	(ipa-reference.o): Add dependency on LTO_STREAMER_H.
	Remove duplicate entry.
	(ipa-pure-const.o): Remove dependency on LTO_SECTION_IN_H
	and LTO_SECTION_OUT_H.
	Add dependency on LTO_STREAMER_H.

2009-09-29  Diego Novillo  <dnovillo@google.com>

	Mainline merge @152279.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-09-29  Richard Guenther  <rguenther@suse.de>

	PR middle-end/41502
	* cgraphunit.c (ipa_passes): Do not remove bodies of extern
	inline functions if not generating lto output.

2009-09-29  Richard Guenther  <rguenther@suse.de>

	PR lto/41467
	* lto-symtab.c (lto_symtab_compatible): Fix typos.

	PR lto/40392
	* langhooks.c (lhd_begin_section): Do not align the section.

	* config/rs6000/rs6000.c (rs6000_output_function_epilogue):
	Handle LTO.

2009-09-28  Diego Novillo  <dnovillo@google.com>

	* Makefile.in (enable_lto): New.
	(site.exp): If @enable_lto@ is set to 'yes' define
	ENABLE_LTO.
	* cgraph.h (build_cgraph_edges): Remove.
	* cgraphbuild.c (build_cgraph_edges): Declare static.
	* collect2.c: Tidy comments and formatting everywhere.
	Remove #if 0 code.
	* configure.ac: If enable_languages includes lto, set enable_lto
	to 'yes'.
	* dwarf2out.c (add_pure_or_virtual_attribute): Do not test
	DECL_CONTEXT.
	* except.c (output_ttype): Tidy comment.
	* gimple-low.c (gimple_try_catch_may_fallthru): Remove test
	for gsi_end_p.
	* ipa-inline.c (pass_inline_parameters): Remove TODO_dump_func.
	* langhooks-def.h (LANG_HOOKS_MAY_NEED_ASSEMBLER_NAME_P): Define.
	(LANG_HOOKS_DECLS): Add LANG_HOOKS_MAY_NEED_ASSEMBLER_NAME_P.
	* langhooks.h (struct lang_hooks_for_decls): Add field
	may_need_assembler_name_p.
	* lto-cgraph.c (input_node): Remove FIXME lto marker.
	* lto-streamer-in.c (unpack_ts_function_decl_value_fields):
	Call DECL_STATIC_CHAIN instead of DECL_NO_STATIC_CHAIN.
	* lto-streamer-out.c (pack_ts_function_decl_value_fields):
	Likewise.
	* lto-wrapper.c (run_gcc): Tidy.

2009-09-28  Diego Novillo  <dnovillo@google.com>

	Mainline merge @152236.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-09-22  Diego Novillo  <dnovillo@google.com>

	Mainline merge @152039.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-09-22  Richard Guenther  <rguenther@suse.de>

	PR lto/41379
	* toplev.c (finalize): In WPA mode remove the asm file.

2009-09-22  Richard Guenther  <rguenther@suse.de>

	PR lto/39276
	* doc/invoke.texi (-fltrans-driver): Remove.

2009-09-21  Diego Novillo  <dnovillo@google.com>

	Mainline merge @151721.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-09-21  Diego Novillo  <dnovillo@google.com>

	* gimple.h (gimple_eh_must_not_throw_set_fndecl): New.
	* gimple.c (gimple_build_eh_must_not_throw): Call it.
	* lto-streamer-in.c (input_bitmap): Remove.
	(get_label_decl): Remove.
	(input_type_ref): Remove.
	(input_labels): Remove.
	(lto_input_tree_ref): Handle LTO_label_decl_ref like any
	other decl ref.
	(lto_input_eh_catch_list): New.
	(input_eh_region): Rewrite to handle new EH data structures.
	(input_eh_lp): New.
	(fixup_eh_region_pointers): Rewrite to handle new EH data structures.
	(FIXUP_EH_REGION): Rename from fixup_eh_region.
	(FIXUP_EH_LP): Define.
	(input_eh_regions): Rewrite to handle new EH data structures.
	(lto_input_location): Move earlier in the file.
	(input_gimple_stmt): Handle GIMPLE_EH_MUST_NOT_THROW and
	GIMPLE_EH_DISPATCH.
	(input_bb): Do not expect REGION to be a valid index into the
	EH region array.
	(unpack_ts_decl_common_value_fields): Decode EH_LANDING_PAD_NR.
	* lto-streamer-out.c (eq_label_slot_node): Remove.
	(hash_label_slot_node): Remove.
	(output_bitmap): Remove.
	(output_label_ref): Remove.
	(pack_ts_decl_common_value_fields): Encode EH_LANDING_PAD_NR.
	(lto_output_tree_ref): Handle LABEL_DECL like any other decl.
	(output_eh_try_list): New.
	(output_eh_region): Rewrite to handle new EH data structures.
	(output_eh_lp): New.
	(output_eh_regions): Rewrite to handle new EH data structures.
	(output_named_labels): Remove.
	(output_gimple_stmt): Handle GIMPLE_EH_MUST_NOT_THROW and
	GIMPLE_EH_DISPATCH.
	(output_bb): Call lookup_stmt_eh_lp_fn instead of
	lookup_stmt_eh_region_fn.  Do not expect its return value to
	be positive.
	* lto-streamer.h (enum LTO_tags): Remove values
	LTO_eh_table_cleanup0, LTO_eh_table_cleanup1,
	LTO_eh_table_try0, LTO_eh_table_try1, LTO_eh_table_catch0,
	LTO_eh_table_catch1, LTO_eh_table_allowed0,
	LTO_eh_table_allowed1, LTO_eh_table_must_not_throw0,
	LTO_eh_table_must_not_throw1, LTO_eh_table_throw0,
	LTO_eh_table_throw1 and LTO_eh_table_shared_region.
	Add values LTO_ert_cleanup, LTO_ert_try,
	LTO_ert_allowed_exceptions, LTO_ert_must_not_throw,
	LTO_eh_landing_pad, and LTO_eh_catch.
	Remove value LTO_local_label_decl and LTO_global_label_decl.
	Add value LTO_label_decl_ref.
	Update all users.
	(struct output_block): Remove fields named_label_stream,
	label_hash_table, next_named_label_index,
	next_unnamed_label_index and named_labels.
	Update all users.
	* lto-wpa-fixup.c (lto_fixup_nothrow_decls): Call
	lookup_stmt_eh_lp_fn instead of lookup_stmt_eh_region_fn.
	Call remove_stmt_from_eh_lp_fn instead of
	remove_stmt_from_eh_region_fn .

2009-09-15  Richard Guenther  <rguenther@suse.de>

	* tree.c (make_node_stat): Remove setting of DECL_FUNCTION_PERSONALITY.
	* tree.h (eh_personality_decl): Remove.
	* toplev.c (eh_personality_decl): Likewise.
	* dwarf2out.c (dwarf2out_do_cfi_asm): Remove obsolete check.
	(dwarf2out_begin_prologue): Remove write-only variable.
	* gimple.h (mark_addressable): Remove duplicate prototype.

2009-09-15  Richard Guenther  <rguenther@suse.de>

	PR lto/41230
	* lto-streamer-in.c (input_bb): Drop debug stmts on-the-fly if
	we can't deal with them.

2009-09-14  Richard Guenther  <rguenther@suse.de>

	Mainline merge @151681.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

	* lto-streamer-in.c (lto_eh_runtime_type): Remove.
	(lto_init_eh): Do not set lang_eh_runtime_type.

2009-09-11  Diego Novillo  <dnovillo@google.com>

	Mainline merge @151592.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-09-11  Diego Novillo  <dnovillo@google.com>

	* cgraph.c (cgraph_clone_input_node): Remove.  Update all users to
	call cgraph_clone_node instead.
	(cgraph_is_clone_node): Remove unused function.
	* ipa.c (cgraph_remove_unreachable_nodes): Do not set
	disregard_inline_limits to false.
	(gate_ipa_fun_and_var_visibility): Remove.  Update
	pass_ipa_function_and_variable_visibility.
	* lto-cgraph.c (lto_output_node): Output field count.
	Reorganize packing of node bitflags to follow the same
	order that they're declared.
	Add fields address_taken, abstract_and_needed, reachable,
	process, alias and finalized_by_frontend.
	(input_overwrite_node): Corresponding changes.

2009-09-08  Richard Guenther  <rguenther@suse.de>

	* tree.c (free_lang_data_in_type): Restore not freeing the main variant
	chains.
	(free_lang_data): Restore re-setting char_type_node.
	(gate_free_lang_data): Do not re-run free-lang-data from lto1.

2009-09-07  Diego Novillo  <dnovillo@google.com>

	Mainline merge @151374.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-09-07  Richard Guenther  <rguenther@google.com>

	* lto-streamer-in.c (lto_register_deferred_decls_in_symtab): New.
	(deferred_global_decls): New file local.
	(lto_register_var_decl_in_symtab): Remove arguments DATA_IN
	and IX.  Update all callers.
	If DECL is TREE_PUBLIC, add it to deferred_global_decls.
	(lto_register_function_decl_in_symtab): Remove argument IX.
	If DECL is TREE_PUBLIC, add it to deferred_global_decls.
	Update all callers.
	* lto-streamer.h (lto_register_deferred_decls_in_symtab): Declare.
	* lto.c (lto_read_decls): Call it after reading all decls.

2009-09-07  Diego Novillo  <dnovillo@google.com>

	* builtins.c (is_builtin_fn): New.
	(is_builtin_name): Add comment.
	* c-opts.c (c_common_post_options): Disable var tracking when
	LTO is enabled.
	* gimple.c (gimple_force_type_merge): Move below
	lookup_type_pair and call it.
	(gimple_decl_printable_name): Do not use DMGL_TYPES in call
	to cplus_demangle_v3.
	* lto-streamer-in.c (lto_materialize_tree): Do not read
	expected tree node size.
	(lto_input_ts_binfo_tree_pointers): Read BINFO_BASE_BINFOS as
	a zero-terminated list.
	* lto-streamer-out.c (lto_output_tree_ref): Do not expect
	DECL_CONTEXT for CONST_DECLs to be NULL.
	(lto_output_ts_binfo_tree_pointers): Output BINFO_BASE_BINFOS
	as a zero-terminated list.
	(lto_output_tree_header): Do not emit size of EXPR.
	(write_symbol_vec): Call is_builtin_fn.
	* lto-streamer.c (lto_orig_address_map, lto_orig_address_get,
	lto_orig_address_remove): Enable only with LTO_STREAMER_DEBUG.
	* lto-streamer.h (LTO_STREAMER_DEBUG): Add with comment and
	undefined by default.
	(lto_orig_address_map, lto_orig_address_get,
	lto_orig_address_remove): Declare only with LTO_STREAMER_DEBUG.
	* lto-symtab.c (lto_symtab_prevailing_decl): Call is_builtin_fn.
	(lto_symtab_get_resolution): Likewise.
	* tree-parloops.c (try_create_reduction_list): Fix for 32bit
	hosts.
	* tree.c (free_lang_data_in_binfo): Factor out of ...
	(free_lang_data_in_type): ... here.
	(need_assembler_name_p): Return false for non-public functions.
	(free_lang_data_in_decl): Do not remove DECL_CONTEXT from
	CONST_DECLs.
	(find_decls_types_r): Walk TYPE_BINFO for records and unions.
	* tree.h (RECORD_OR_UNION_TYPE_P): Declare.  Update all users
	of the predicate.
	(AGGREGATE_TYPE_P): Call it.
	(is_builtin_fn): Declare.

2009-09-02  Richard Guenther  <rguenther@suse.de>

	Mainline merge @151318.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-09-01  Richard Guenther  <rguenther@suse.de>

	* tree.c (free_lang_data): Reset fold_obj_type_ref langhook.

2009-08-28  Richard Guenther  <rguenther@suse.de>

	Mainline merge @151178.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-08-27  Richard Guenther  <rguenther@suse.de>

	PR lto/41092
	* lto-streamer-out.c (output_eh_regions): Always output a
	eh region if exceptions are enabled.

2009-08-26  Richard Guenther  <rguenther@suse.de>

	* tree-data-ref.h: Revert changes.
	* gimplify.c: Likewise.
	* tree-ssa-coalesce.c (coalesce_ssa_name): Likewise.
	* tree-ssa-pre.c (create_expression_by_pieces): Likewise.
	* tree-cfg.c (gimple_dump_cfg): Likewise.
	* tree-flow.h (mark_addressable): Remove duplicate prototype.

2009-08-26  Richard Guenther  <rguenther@suse.de>

	* tree-into-ssa.c (dump_tree_ssa): Revert change to use
	get_name instead of the decl_printable_name langhook.
	* tree-stdarg.c (execute_optimize_stdarg): Likewise.
	* tree-dfa.c (dump_dfa_stats): Likewise.
	* tree-cfg.c (gimple_dump_cfg): Likewise.
	(dump_cfg_stats): Likewise.
	(gimple_cfg2vcg): Likewise.
	(dump_function_to_file): Likewise.
	* passes.c (pass_init_dump_file): Likewise.

2009-08-25  Richard Guenther  <rguenther@suse.de>

	* tree-eh.c (inlinable_call_p): Assume calls might be inlined
	when building with -flto or -fwhopr.

2009-08-24  Richard Guenther  <rguenther@suse.de>

	PR lto/41079
	* lto-streamer-out.c (output_gimple_stmt): Only stream needed
	fields.  Do not stream pointer garbage.
	* lto-streamer-in.c (output_gimple_stmt): Adjust accordingly.
	Structure like output_gimple_stmt.  Do not needlessly zero
	fields.

2009-08-24  Richard Guenther  <rguenther@suse.de>

	Mainline merge @151053.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-08-20  Richard Guenther  <rguenther@suse.de>

	* lto-streamer-out.c (lto_output_tree_header): Wrap streamer
	debugging code inside LTO_STREAMER_DEBUG.
	* lto-streamer-in.c (lto_materialize_tree): Likewise.

2009-08-19  Richard Guenther  <rguenther@suse.de>

	* lto-streamer.c (lto_get_common_nodes): Skip itk_char.
	* tree.c (free_lang_data): Merge char_type_node with the
	appropriately signed variant.

2009-08-19  Richard Guenther  <rguenther@suse.de>

	PR lto/41071
	* gimple.c (gimple_get_alias_set): Pointers to CV qualified variants
	have the same alias-set as unqualified variants.

2009-08-19  Richard Guenther  <rguenther@suse.de>

	PR lto/41071
	* gimple.c (gimple_register_type): Unlink a pointer from its
	pointer chain if we will use a different type for it.
	* lto-streamer-out.c (lto_output_ts_type_tree_pointers):
	Do not output TYPE_POINTER_TO, TYPE_REFERENCE_TO and
	TYPE_NEXT_PTR/REF_TO.
	* lto-streamer-in.c (lto_input_ts_type_tree_pointers):
	Do not input TYPE_POINTER_TO, TYPE_REFERENCE_TO and
	TYPE_NEXT_PTR/REF_TO.

2009-08-19  Richard Guenther  <rguenther@suse.de>

	PR lto/41071
	* gimple.c (gimple_register_type): Unlink a non-main-variant from its
	variant chain if we will use a different type for it.
	* tree.c (free_lang_data_in_type): Do not free the variant chains.
	* lto-streamer-out.c (lto_output_ts_type_tree_pointers): Do
	not output TYPE_NEXT_VARIANT.
	* lto-streamer-in.c (lto_input_ts_type_tree_pointers): Do not
	input TYPE_NEXT_VARIANT.

2009-08-19  Richard Guenther  <rguenther@suse.de>

	PR lto/41071
	* gimple.c (compare_type_names_p): Do not look at the
	types main variant.
	* lto-streamer-out.c (output_type_ref): Remove hack for char_type_node.
	* lto-streamer.c (lto_streamer_cache_insert_1):
	Remove hack for char_type_node.
	(lto_record_common_node): Canonicalize types of nodes we record.
	(lto_get_common_nodes): Record integer and size types first.
	Defer to lto_record_common_node for registering and canonicalizing
	types.

2009-08-17  Richard Guenther  <rguenther@suse.de>

	Mainline merge @150842.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-08-15  Richard Guenther  <rguenther@suse.de>

	PR lto/41069
	* gimple.c (gimple_types_compatible_p): Handle vector and complex
	types.
	* lto-streamer-out.c (lto_output_ts_decl_minimal_tree_pointers):
	Do not give names to unnamed things.

2009-08-15  Richard Guenther  <rguenther@suse.de>

	* lto-symtab.c (merge_incomplete_and_complete_type): Use
	gimple_force_type_merge.
	* gimple.c (gimple_force_type_merge): New function.
	(gimple_types_compatible_p): Use it.
	* gimple.h (gimple_force_type_merge): Declare.

2009-08-14  Richard Guenther  <rguenther@suse.de>

	* lto-symtab.c (lto_symtab_merge_decl): Exchange TREE_CHAIN use
	for DECL_LANG_SPECIFIC.
	(lto_symtab_prevailing_decl): Likewise.

2009-08-14  Diego Novillo  <dnovillo@google.com>

	* tree.c (free_lang_data): Reset lang_hooks.expr_size.

2009-08-14  Richard Guenther  <rguenther@suse.de>

	* lto-streamer.c (lto_get_common_nodes): Register the common
	types.

2009-08-13  Richard Guenther  <rguenther@suse.de>

	PR lto/41032
	* tree.c (free_lang_data): NULL the types_compatible_p langhook.
	* gimple.c (gtc_visited): Global type compatibility hashtable.
	(compare_field_offset): New helper function.
	(gimple_compare_types): Fold into ...
	(gimple_types_compatible_p): ... here.  Types with differing
	hash values are not compatible.  Adjust function now that it
	is no longer used as types_compatible_p langhook.  Complete
	incomplete pointer targets.
	(iterative_hash_type_name): New helper function.
	(iterative_hash_gimple_type): Do not hash type sizes.  Do not
	recurse into aggregate pointer targets.  Properly hash
	complex and vector types.  Hash the name of record types.
	(print_gimple_types_stats): Print stats of gtc_visited.
	* lto-symtab.c (lto_merge_qualifiers): Remove.
	(lto_merge_types): Likewise.
	(merge_incomplete_and_complete_type): New helper function.
	(maybe_merge_incomplete_and_complete_type): Likewise.
	(lto_symtab_compatible): Remove do_warn arg.  Complete types
	during decl merging.  Forcefully merge more types than
	elsewhere.  Do not compare DECL_MODE.
	(lto_symtab_prevailing_decl): Use gimple_types_compatible_p, not
	lto_symtab_compatible for finding the decl we merged with.

2009-08-12  Richard Guenther  <rguenther@suse.de>

	Mainline merge @150705.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-08-07  Richard Guenther  <rguenther@suse.de>

	Mainline merge @150572.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-08-07  Richard Guenther  <rguenther@suse.de>

	* lto-streamer-out.c (pack_ts_type_value_fields): Stream out
	the alias-set if it is zero, else stream out -1.
	* lto-streamer-in.c (unpack_ts_type_value_fields): Stream in
	the alias-set.
	* tree.c (free_lang_data_in_type): Ask the frontend about the
	alias-set of the type and record it if it is zero.

2009-08-03  Richard Guenther  <rguenther@suse.de>

	* lto-streamer-out.c (output_phi): Output phi argument locations.
	* lto-streamer-in.c (lto_input_location): Move before first use.
	(input_phi): Input phi argument locations.

2009-08-02  Richard Guenther  <rguenther@suse.de>

	Mainline merge @150345.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-07-30  Richard Guenther  <rguenther@suse.de>

	PR lto/40903
	* lto-symtab.c (lto_symtab_compatible): Only warn for mismatched
	types.
	(lto_symtab_merge_decl): For decls we cannot merge chain them
	appropriately in the symtab entry.
	(lto_symtab_prevailing_decl): Return a matching entry from the
	symtab chain.

2009-07-30  Richard Guenther  <rguenther@suse.de>

	* lto-symtab.c (lto_symtab_compatible): Use inform for printing
	the previous declaration location.
	(lto_symtab_merge_decl): Move error on incompatible symbol types
	first.  Use inform for printing the previous declaration location.

2009-07-29  Richard Guenther  <rguenther@suse.de>

	* lto-symtab.c (lto_symtab_merge_decl): Merge decl state in
	both directions.

2009-07-29  Richard Guenther  <rguenther@suse.de>

	* tree.c (free_lang_data_in_decl): Do not clear DECL_CONTEXT
	of variables with abstract function context.
	* lto-streamer-out.c (lto_output_ts_decl_minimal_tree_pointers):
	Do not assign names to FIELD_DECLs.

2009-07-24  Diego Novillo  <dnovillo@google.com>

	Mainline merge @149863.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-07-24  Diego Novillo  <dnovillo@google.com>

	* cgraph.h (cgraph_optimize): Declare.
	* cgraphunit.c (cgraph_optimize): Make extern.
	* lto-streamer-in.c (lto_input_ts_decl_non_common_tree_pointers):
	Do not read DECL_SAVED_TREE.
	* lto-streamer.h (lto_is_streamable): New.
	* lto-streamer-out.c (lto_output_tree_header): Call it.
	(lto_output_ts_decl_non_common_tree_pointers): Assert that
	* tree.c (free_lang_data_in_decl): Clear out DECL_INITIAL if
	DECL has an abstract context.
	Clear out DECL_SAVED_TREE.

2009-06-13  Ryan Mansfield  <rmansfield@qnx.com>

	PR lto/40429
	* lto-wrapper.c (run_gcc): Handle no space between -o and filename
	argument.

2009-07-22  Diego Novillo  <dnovillo@google.com>

	* lto-streamer-out.c (last_eh_region_seen): Remove.
	Update all users.
	(output_bb): Fix emission of EH region numbers.
	* lto-streamer-in.c (input_bb): Corresponding changes.
	* lto-streamer.h (enum LTO_tags): Remove LTO_set_eh0.
	Rename LTO_set_eh1 to LTO_eh_region.
	Update all users.

2009-07-22  Diego Novillo  <dnovillo@google.com>

	* tree-pass.h (TDF_EH): Define.
	* gimple-pretty-print.c (dump_gimple_stmt): If FLAGS
	contains TDF_EH, print the EH region number holding GS.
	* tree-dump.c (dump_options): Add "eh".
	* doc/invoke.texi: Document it.

2009-07-19  Richard Guenther  <rguenther@suse.de>

	PR lto/40724
	PR lto/40725
	* lto-streamer.c (lto_get_common_nodes): Initialize
	main_identifier_node if it is not initialized already.

2009-07-17  Richard Guenther  <rguenther@suse.de>

	PR lto/40765
	* lto-symtab.c (lto_symtab_merge_decl): Merge TREE_ADDRESSABLE
	state.

2009-07-17  Richard Guenther  <rguenther@suse.de>

	* gimple.c (struct sccs): New structure for the SCC finding state.
	(next_dfs_num): New static global.
	(visit): New helper function for iterative_hash_gimple_type.
	(iterative_hash_gimple_type): Rewrite to do a DFS walk to properly
	hash SCCs.
	(gimple_type_hash): Adjust accordingly.

2009-07-14  Diego Novillo  <dnovillo@google.com>

	* lto-streamer-out.c (lto_output_ts_block_tree_pointers):
	Do not expect to be inside current_function_decl.

2009-07-14  Diego Novillo  <dnovillo@google.com>

	* lto-cgraph.c (lto_output_edge): Do not stream
	EDGE->COUNT inside a bitpack.
	(input_edge): Corresponding changes.

2009-07-14  Diego Novillo  <dnovillo@google.com>

	Mainline merge @149625.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-07-14  Diego Novillo  <dnovillo@google.com>

	* lto-symtab.c (lto_symtab_compatible): Replace uses of
	%J in calls to error with calls to error_at and a
	specific location.

2009-07-13  Diego Novillo  <dnovillo@google.com>

	* tree.c (free_lang_data_in_block): New.
	(free_lang_data_in_decl): Call it.
	* lto-streamer-out.c (lto_output_tree_ref): Handle
	IMPORTED_DECL.
	(lto_output_ts_decl_common_tree_pointers): Do not output
	DECL_INITIAL for FUNCTION_DECLs.
	(lto_output_ts_block_tree_pointers): Assert that REF_P is
	true and current_function_decl is set.
	Remove FIXME note.
	Call lto_output_chain to emit BLOCK_SUBBLOCKS.
	(output_function): Call lto_output_tree_ref to emit
	FN->LOCAL_DECLS.
	* lto-streamer-in.c (lto_input_tree_ref): Handle
	LTO_imported_decl_ref.
	(input_bb): Do not call gimple_set_block.
	(input_function): Assert that FN_DECL has DECL_INITIAL
	set.
	(lto_input_ts_decl_common_tree_pointers): Do not read
	DECL_INITIAL for FUNCTION_DECLs.
	(lto_input_ts_block_tree_pointers): Call lto_input_chain
	to read BLOCK_SUBBLOCKS.
	(lto_read_tree): Move call to lto_orig_address_remove
	later in the function.
	* lto-streamer.c (lto_streamer_cache_add_to_node_array):
	Factor out of ...
	(lto_streamer_cache_insert_1): ... here.
	Call it.
	Handle builtin functions that are stored in different
	cache slots when reading.
	(lto_streamer_cache_lookup): Tidy.
	(lto_get_common_nodes): Tidy.
	(preload_common_node): Tidy.
	(lto_streamer_cache_create): Tidy.
	* lto-streamer.h (enum LTO_tags): Add LTO_imported_decl_ref.

2009-07-13  Diego Novillo  <dnovillo@google.com>

	* tree-ssa-live.c (debug_scope_block): New.
	* tree-flow.h (debug_scope_block): Declare it.

2009-07-13  Diego Novillo  <dnovillo@google.com>

	* lto-cgraph.c (lto_output_edge): Use BP to pack all
	fields in EDGE.
	(input_edge): Corresponding changes.

2009-07-13  Ben Elliston  <bje@au.ibm.com>

	* Makefile.in (BACKENDLIBS): Change LIBELFLIB to LIBELFLIBS.

2009-07-13  Ben Elliston  <bje@au.ibm.com>

	* dwarf2out.c (dwarf2out_begin_prologue): Fix "dirrective" typo.

2009-07-13  Richard Guenther  <rguenther@suse.de>

	PR lto/40721
	* lto-opts.c (register_user_option_p): Handle OPT_fcommon.
	(handle_common_option): Likewise.
	* lto-symtab.c (lto_symtab_merge_decl): Merge re-definitions
	if flag_no_common is not set.

2009-07-10  Richard Guenther  <rguenther@suse.de>

	* tree.c (free_lang_data): Re-set boolean_type_node to what
	it will be for lto1.

2009-07-10  Richard Guenther  <rguenther@suse.de>

	* c.opt (flto, fwhopr): Move ...
	* common.opt (flto, fwhopr): ... here.

2009-07-10  Richard Guenther  <rguenther@suse.de>

	* lto-streamer.h (enum LTO_tags): Add LTO_const_decl_ref.
	* lto-streamer-out.c (lto_output_tree_ref): Deal with CONST_DECLs.
	* lto-streamer-in.c (lto_input_tree_ref): Handle LTO_const_decl_ref.
	(input_function): Set DECL_SAVED_TREE to NULL_TREE.

2009-07-06  Diego Novillo  <dnovillo@google.com>

	* tree.c (free_lang_data_in_type): Do not reset
	TYPE_SIZE, TYPE_SIZE_UNIT, TYPE_MIN_VALUE and
	TYPE_MAX_VALUE.
	* gimple.c (gimple_compare_types): Do not assume that
	TYPE_MIN_VALUE and TYPE_MAX_VALUE are constants.
	(iterative_hash_gimple_type): Do not assume that
	TYPE_SIZE and TYPE_SIZE_UNIT are constants.

2009-07-06  Diego Novillo  <dnovillo@google.com>

	Mainline merge @149291.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-07-06  Diego Novillo  <dnovillo@google.com>

	* lto-streamer-out.c (pack_ts_decl_common_value_fields):
	Document lack of handling for LABEL_DECL_UID.
	(pack_ts_decl_with_vis_value_fields): Remove handling of
	DECL_BASED_ON_RESTRICT_P.
	* lto-streamer-in.c (unpack_ts_decl_common_value_fields):
	Always set LABEL_DECL_UID to -1.
	(unpack_ts_decl_with_vis_value_fields): Corresponding changes.

2009-07-06  Janis Johnson  <janis187@us.ibm.com>

	* doc/sourcebuild.texi (LTO Testing): New.

2009-07-06  Diego Novillo  <dnovillo@google.com>

	* lto-streamer.c (bp_get_next_word): Fix off by one in
	accounting of used bits.

2009-07-06  Diego Novillo  <dnovillo@google.com>

	* lto-tree-flags.def: Remove.  Update all users.
	* lto-cgraph.c (lto_output_edge): Use a bitpack to encode
	all the edge flags.
	(lto_output_node): Use a bitpack to encode all the node
	flags.
	(input_overwrite_node): Likewise.
	(input_node): Likewise.
	(input_edge): Likewise.
	* ipa-pure-const.c (pure_const_write_summary): Use a
	bitpack to encode function state flags.
	(pure_const_read_summary): Likewise.
	* lto-streamer-out.c: Include lto-symtab.h.
	(lto_flags_needed_for): Remove.
	(lto_types_needed_for): Remove.
	(output_record_start): Remove.
	(output_expr_operand): Remove.
	(expr_to_tag): Remove.
	(stmt_to_tag): Remove.
	(eq_label_slot_node, string_slot, eq_string_slot_node,
	string_slot_free): Tidy.
	(create_output_block): Call lto_streamer_cache_create.
	(destroy_output_block): Call lto_streamer_cache_delete.
	(lto_output_bitpack): New.
	(output_real): Remove.
	(output_widest_uint_uleb128): Remove.
	(output_integer): Remove.
	(output_tree_flags): Remove.
	(output_record_start): Remove arguments EXPR and VALUE.
	Update all users.
	(output_type_ref_1): Move into output_type_ref.
	(output_local_decl_ref): Remove.
	(output_label_ref): Tidy.
	(pack_ts_base_value_fields): New.
	(pack_ts_real_cst_value_fields): New.
	(pack_ts_fixed_cst_value_fields): New.
	(pack_ts_decl_common_value_fields): New.
	(pack_ts_decl_wrtl_value_fields): New.
	(pack_ts_decl_with_vis_value_fields): New.
	(output_constructor): Remove.
	(pack_ts_function_decl_value_fields): New.
	(pack_ts_type_value_fields): New.
	(output_block_or_decl): Remove.
	(pack_ts_block_value_fields): New.
	(output_tree_block): Remove.
	(pack_value_fields): New.
	(output_expr_operand): Remove.
	(lto_output_location): New.
	(tree_is_indexable): New.
	(lto_output_tree_ref): New.
	(lto_output_tree_or_ref): New.
	(lto_output_chain): New.
	(lto_output_ts_common_tree_pointers): New.
	(lto_output_ts_vector_tree_pointers): New.
	(output_local_var_decl): Remove.
	(lto_output_ts_complex_tree_pointers): New.
	(lto_output_ts_decl_minimal_tree_pointers): New.
	(lto_output_ts_decl_common_tree_pointers): New.
	(lto_output_ts_decl_non_common_tree_pointers): New.
	(lto_output_ts_decl_with_vis_tree_pointers): New.
	(lto_output_ts_field_decl_tree_pointers): New.
	(lto_output_ts_function_decl_tree_pointers): New.
	(lto_output_ts_type_tree_pointers): New.
	(lto_output_ts_list_tree_pointers): New.
	(lto_output_ts_vec_tree_pointers): New.
	(lto_output_ts_exp_tree_pointers): New.
	(lto_output_ts_block_tree_pointers): New.
	(output_local_vars): Remove.
	(lto_output_ts_binfo_tree_pointers): Remove.
	(lto_output_ts_constructor_tree_pointers): Remove.
	(lto_output_tree_pointers): New.
	(lto_output_tree_header): New.
	(lto_output_builtin_tree): New.
	(lto_write_tree): New.
	(lto_output_integer_cst): New.
	(lto_output_tree): New.
	(output_local_vars_index): Remove.
	(output_stmt_location): Remove.
	(initialized): Remove.
	(initialized_local): Remove.
	(lto_static_init): Remove.
	(lto_init_writer): Remove.
	(output_function): Use a bitpack to encode the function
	flags.
	(output_var_init): Remove.
	(output_inits_in_decl_state): Remove.
	(output_used_constructors_and_inits): Remove.
	(output_remaining_constructors_and_inits): Remove.
	(output_all_constructors_and_inits): Remove.
	(output_unreferenced_globals): Rename from
	output_constructors_and_inits.
	Traverse varpool nodes, emit references to all public
	VAR_DECLs.
	(lto_writer_init): New.
	(lto_output): Call it.
	(output_global_record_start): Remove.
	(output_const_decl): Remove.
	(output_field_decl): Remove.
	(output_function_decl): Remove.
	(write_global_stream): In WPA mode, do not write the same
	symbol more than once.  Mark subsequent symbols as weak.
	(output_var_decl): Remove.
	(output_parm_decl): Remove.
	(output_result_decl): Remove.
	(output_type_decl): Remove.
	(output_label_decl): Remove.
	(output_imported_decl): Remove.
	(output_binfo): Remove.
	(output_type): Remove.
	(output_global_record_start_1): Remove.
	(output_global_constructor): Remove.
	(output_tree_with_context): Remove.
	(output_tree): Remove.
	(output_type_tree): Remove.
	* lto-tree-tags.def: Remove.
	* lto-streamer-in.c (input_tree_operand): Remove.
	(input_local_decl): Remove.
	(input_expr_operand): Remove.
	(tag_to_expr): Remove.
	(flags_length_for_code): Remove.
	(input_real): Remove.
	(input_record_start): Read tag calling lto_input_uleb128.
	(get_label_decl): Remove IB argument.  Add argument IX.
	(input_tree_flags): Remove.
	(process_tree_flags): Remove.
	(input_line_info): Remove.
	(set_line_info): Remove.
	(input_expr_operand): Remove.
	(input_local_vars_index): Remove.
	(input_local_var_decl): Remove.
	(lto_input_tree_ref): New.
	(input_local_decl): Remove.
	(input_local_vars): Remove.
	(input_stmt_location): Remove.
	(lto_input_location): New.
	(input_gimple_stmt): Call lto_tag_to_gimple_code.
	(input_function_tree): Use a bitpack to read function
	flags.
	Call input_ssa_names.
	(input_alias_pairs): Rename from input_constructors_or_inits.
	(lto_init_reader): Remove.
	(lto_read_body): Remove ib_ssa_names, ib_local_decls_index
	and ib_local_decls.
	(global_vector_enter): Remove.
	(input_tree_with_context): Remove.
	(input_field_decl): Remove.
	(input_const_decl): Remove.
	(input_function_decl): Remove.
	(unpack_ts_base_value_fields): New.
	(unpack_ts_real_cst_value_fields): New.
	(unpack_ts_fixed_cst_value_fields): New.
	(unpack_ts_decl_common_value_fields): New.
	(unpack_ts_decl_wrtl_value_fields): New.
	(unpack_ts_decl_with_vis_value_fields): New.
	(unpack_ts_function_decl_value_fields): New.
	(input_var_decl): Remove.
	(unpack_ts_type_value_fields): New.
	(unpack_ts_block_value_fields): New.
	(unpack_value_fields): New.
	(input_parm_decl): Remove.
	(lto_input_bitpack): New.
	(input_result_decl): Remove.
	(input_type_decl): Remove.
	(lto_input_chain): New.
	(lto_input_ts_common_tree_pointers): New.
	(input_label_decl): Remove.
	(lto_input_ts_vector_tree_pointers): New.
	(lto_input_ts_complex_tree_pointers): New.
	(lto_input_ts_decl_minimal_tree_pointers): New.
	(input_imported_decl): Remove.
	(lto_input_ts_decl_common_tree_pointers): New.
	(lto_input_ts_decl_non_common_tree_pointers): New.
	(lto_input_ts_decl_with_vis_tree_pointers): New.
	(input_binfo): Remove.
	(lto_input_ts_field_decl_tree_pointers): New.
	(lto_input_ts_function_decl_tree_pointers): New.
	(lto_input_ts_type_tree_pointers): New.
	(lto_input_ts_list_tree_pointers): New.
	(input_type): Remove.
	(lto_input_ts_vec_tree_pointers): New.
	(lto_input_ts_exp_tree_pointers): New.
	(input_type_tree): Remove.
	(lto_input_ts_block_tree_pointers): New.
	(input_block_or_decl): Remove.
	(lto_input_ts_binfo_tree_pointers): New.
	(input_tree_block): Remove.
	(lto_input_ts_constructor_tree_pointers): New.
	(lto_input_tree_pointers): New.
	(lto_register_var_decl_in_symtab): New.
	(input_tree_operand): Remove.
	(lto_register_function_decl_in_symtab): New.
	(lto_get_pickled_tree): New.
	(lto_get_builtin_tree): New.
	(lto_read_tree): New.
	(lto_input_integer_cst): New.
	(lto_input_tree): New.
	(input_tree): Remove.
	(lto_init_reader): New.
	(lto_data_in_create): New.
	(lto_data_in_delete): New.
	* lto-section-in.c (lto_get_flag): Remove.
	(lto_get_flags): Remove.
	(lto_input_integer): Remove.
	* lto-tags.h: Remove.
	* lto-streamer.c: Include flags.h, tree-flow.h and
	diagnostic.h
	(lto_decl_flags): Remove.
	(lto_tag_name): New.
	(lto_get_decl_flags): Remove.
	(lto_set_decl_flags): Remove.
	(bitpack_create): New.
	(bitpack_delete): New.
	(bp_get_next_word): New.
	(bp_pack_value): New.
	(bp_unpack_value): New.
	(check_handled_ts_structures): New.
	(lto_streamer_cache_insert_1): New.
	(lto_streamer_cache_insert): New.
	(lto_streamer_cache_insert_at): New.
	(lto_streamer_cache_lookup): New.
	(lto_streamer_cache_get): New.
	(lto_record_common_node): New.
	(lto_get_common_nodes): New.
	(preload_common_node): New.
	(lto_streamer_cache_create): New.
	(lto_streamer_cache_delete): New.
	(lto_streamer_init): New.
	(gate_lto_out): New.
	(lto_orig_address_map): New.
	(lto_orig_address_get): New.
	(lto_orig_address_remove): New.
	* lto-streamer.h: Include tree.h and gimple.h.  Update
	main comment on data structures.
	(REDUNDANT_TYPE_SYSTEM): Remove.
	(LTO_DECL_FLAG_DEFINED): Remove.
	(LTO_DECL_FLAG_SUPPRESS_OUTPUT): Remove.
	(BITS_PER_BITPACK_WORD): New.
	(bitpack_word_t): New type.
	(struct bitpack_d): Define.
	(enum LTO_tags): Move from lto-tags.h.  Add values
	LTO_builtin_decl, LTO_field_decl_ref,
	LTO_function_decl_ref, LTO_local_label_decl,
	LTO_global_label_decl, LTO_result_decl_ref,
	LTO_ssa_name_ref, LTO_type_decl_ref, LTO_type_ref and
	LTO_global_decl_ref.
	(struct lto_streamer_cache_d): New.
	(struct lto_function_header): Remove fields
	num_local_decls, ssa_name_size, local_decls_index_size,
	local_decls_size, local_decl_index_stream,
	local_decl_stream, ssa_names_stream.
	(struct output_block): Remove fields local_decl_encoder,
	local_decls_index, unexpanded_local_decls_index and
	main_hash_table.
	(struct output_block): Remove fields local_decl_encoder,
	local_decls_index, unexpanded_local_decls_index and
	main_hash_table.
	Add field writer_cache.
	(struct data_in): Remove fields local_decls_index,
	local_decl_indexes, local_decls and globals_index.
	Add field reader_cache.
	(lto_tag_is_tree_code_p): New.
	(lto_tag_is_gimple_code_p): New.
	(lto_gimple_code_to_tag): New.
	(lto_tag_to_gimple_code): New.
	(lto_tree_code_to_tag): New.
	(lto_tag_to_tree_code): New.
	(lto_stream_as_builtin_p): New.
	* varasm.c (default_binds_local_p_1): Ignore DECL_WEAK in
	LTRANS mode.
	* passes.c (init_optimization_passes): Tidy.
	* lto-section-out.c: Do not include diagnostic.h nor
	lto-symtab.h.
	(lto_set_flag): Remove.
	(lto_set_flags): Remove.
	(lto_hash_global_slot_node): Remove.
	(lto_eq_global_slot_node): Remove.
	(lto_output_integer_stream): Remove.
	(get_ref_idx_for): Remove.
	(lto_record_common_node): Remove.
	(lto_get_common_nodes): Move to lto-streamer.c.
	(preload_common_node): Move to lto-streamer.c.
	(preload_common_nodes): Remove.
	(write_global_stream): Move to lto-streamer-out.c.
	(write_global_references): Likewise.
	(lto_output_decl_state_streams): Likewise.
	(lto_output_decl_state_refs): Likewise.
	(lto_out_decl_state_written_size): Likewise.
	(write_symbol_vec): Likewise.
	(write_symbols_of_kind): Likewise.
	(produce_symtab): Likewise.
	(produce_asm_for_decls): Likewise.
	(gate_lto_out): Likewise.
	(pass_ipa_lto_finish_out): Likewise.

2009-07-06  Diego Novillo  <dnovillo@google.com>

	* tree-dfa.c (dump_variable): Write DECL_INITIAL for VAR
	if it has one.  Handle cases where VAR does not have an
	annotation or cfun is NULL.

2009-07-06  Diego Novillo  <dnovillo@google.com>

	* tree.c: Include debug.h.
	(initialize_tree_contains_struct): New.
	(init_ttree): Call it.
	(tree_node_structure_for_code): Factor out of ...
	(tree_node_structure): ... here.
	(free_lang_data_in_type): Clear out TYPE_STUB_DECL.
	(free_lang_data_in_decl): Clear out the type of
	DECL_NAME.
	(free_lang_data): Prevent debug information from being
	generated.
	* treestruct.def (TS_PHI_NODE): Remove.
	(TS_GIMPLE_STATEMENT): Remove.

2009-07-06  Diego Novillo  <dnovillo@google.com>

	* tree-pretty-print.c (debug_tree_chain): Handle cycles.

2009-07-06  Diego Novillo  <dnovillo@google.com>

	* lto-symtab.c (lto_symtab_maybe_init_hash_tables): Do
	not use ggc_free for lto_symtab_identifiers and
	lto_symtab_decls.

2009-06-27  Diego Novillo  <dnovillo@google.com>

	Mainline merge @148985.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-06-19  Diego Novillo  <dnovillo@google.com>

	* lto-cgraph.c: Remove code guarded by #ifdef LTO_STREAM_DEBUGGING.
	Remove code guarded by #ifdef GLOBAL_STREAMER_TRACE.
	Remove code guarded by #ifdef LOCAL_TRACE.
	* lto-streamer-out.c: Likewise.
	* lto-streamer-in.c: Likewise.
	* lto-section-in.c: Likewise.
	* lto-tags.h: Likewise.
	* lto-opts.c: Likewise.
	* lto-section-out.c: Likewise.
	* lto-tree-tags.def: Likewise.
	* lto-streamer.h: Likewise.
	(struct lto_function_header): Remove fields
	debug_decl_index_size, debug_decl_size, debug_label_size,
	debug_ssa_names_size, debug_cfg_size, debug_main_size.
	Update all users.
	(struct lto_decl_header): Remove field debug_main_size.
	Update all users.
	(struct lto_simple_header): Likewise.
	* lto-stream-debug.c: Remove.
	Update all users.

2009-06-18  Diego Novillo  <dnovillo@google.com>

	* lto-tree-flags.def: Update license to GPLv3.
	* lto-wrapper.c: Likewise.
	* lto-tree-tags.def: Likewise.
	* lto-section-in.c: Likewise.
	* lto-tags.h: Likewise.
	* lto-stream-debug.c: Likewise.
	* lto-opts.c: Likewise.
	* lto-symtab.c: Likewise.
	Include plugin-api.h.
	(lto_function_header): Move to lto-streamer.h.
	* lto-streamer.c: Rename from lto-utils.c.  Update all users.
	* lto-streamer.h: Rename from lto-utils.h.  Update all users.
	* cgraph.h (struct cgraph_local_info): Update comment for
	field lto_file_data.
	* lto-streamer-out.c: Rename from lto-function-out.c.
	Update license to GPLv3.
	Update all users.
	* lto-streamer-in.c: Rename from lto-function-in.c.
	Update license to GPLv3.
	Update all users.
	(lto_init_reader): Rename from lto_static_init_local.
	Update all users.
	* lto-compress.h: Add multiple inclusion guards.
	* lto-streamer-in.c: Rename from lto-function-in.c.
	Update all users.
	* lto-cgraph.c: Update license to GPLv3.
	Do not include tree-pass.h, debug.h, dwarf2asm.h,
	dwarf2out.h.
	(lto_output_edge): Rename from output_edge.
	Update all users.
	(lto_output_node): Rename from output_node.
	Update all users.
	* lto-streamer.h: Rename from lto-util.h.
	Update all users.
	* lto-header.h: Remove.  Move contents to lto-streamer.h.
	Update all users.
	* lto-tree-in.h: Likewise.
	* lto-section.h: Likewise.
	* lto-section-in.h: Likewise.
	* lto-tree-out.h: Likewise.
	* lto-opts.h: Likewise.
	* lto-section-out.h: Likewise.
	* lto-wpa-fixup.c: Update license to GPLv3.
	(lto_output_wpa_fixup): Rename from output_wpa_fixup.
	Update all users.
	(lto_input_wpa_fixup_1): Rename from input_wpa_fixup_1.
	Update all users.
	(lto_input_wpa_fixup): Rename from input_wpa_fixup.
	Update all users.
	* gcc/Makefile.in (LINKER_PLUGIN_API_H): Rename from PLUGIN_API_H.
	(LTO_SYMTAB_H): Define.
	(LTO_TAGS_H): Remove.  Update all users.
	(LTO_HEADER_H): Likewise.
	(LTO_SECTION_H): Likewise.
	(LTO_SECTION_IN_H): Likewise.
	(LTO_SECTION_OUT_H): Likewise.
	(LTO_TREE_IN_H): Likewise.
	(LTO_OPTS_H): Likewise.
	(LTO_STREAMER_H): Define.
	(LTO_TAGS_H): Define.

2009-06-17  Diego Novillo  <dnovillo@google.com>

	* tree-pass.h (pass_ipa_lto_cgraph): Remove.
	* lto-function-out.c (lto_output): Call output_cgraph.
	* ipa-reference.c (ipa_init): Prevent multiple initializations.
	(ipa_reference_write_summary): Rename from write_summary.
	Update all users.
	Call lto_cgraph_encoder_encode to get a reference for NODE.
	(ipa_reference_read_summary): Rename from read_summary.
	Update all users.
	Call lto_cgraph_encoder_deref to retrieve NODE from INDEX.
	* cgraphunit.c (ipa_passes): Prevent lto1 from calling
	ipa_write_summaries.
	* lto-cgraph.c: Include lto-tree-out.h.
	(struct lto_cgraph_encoder_d): Move to lto-tree-out.h
	(lto_cgraph_encoder_t): Likewise.
	(lto_cgraph_encoder_new): Make extern.
	(lto_cgraph_encoder_delete): Likewise.
	(lto_cgraph_encoder_encode): Likewise.
	Return REF.
	(lto_cgraph_encoder_lookup): Make extern.
	(lto_cgraph_encoder_deref): Likewise.
	(output_node): Tidy.
	(output_cgraph): Make extern.
	Use the cgraph node encoder in OB->DECL_STATE.
	Do not call lto_cgraph_encoder_delete.
	(input_cgraph_1): Call lto_cgraph_encoder_encode.
	(input_cgraph): Call lto_cgraph_encoder_new.
	(pass_ipa_lto_cgraph): Remove.
	* lto-header.h: Include target.h and cgraph.h.
	(struct lto_cgraph_encoder_d): Move from lto-cgraph.c.
	(lto_cgraph_encoder_t): Likewise.
	* ipa-pure-const.c (register_hooks): Preven multiple
	initializations.
	(generate_summary): Tidy.
	(pure_const_write_summary): Rename from write_summary.
	Update all users.
	Call lto_cgraph_encoder_encode to get a reference for NODE.
	(pure_const_read_summary): Rename from read_summary.
	Update all users.
	Call lto_cgraph_encoder_deref to get NODE from INDEX.
	* lto-section-in.h: Do not include target.h, cgraph.h and
	lto-header.h.
	Include lto-section.h.
	(struct lto_file_decl_data): Add field cgraph_node_encoder.
	* Makefile.in (LTO_HEADER_H): New.  Update all references
	to lto-header.h.
	* passes.c (init_optimization_passes): Remove 'FIXME lto'
	marker.
	Remove reference to pass_ipa_lto_cgraph.
	* lto-section-out.c (lto_new_out_decl_state): Call
	lto_cgraph_encoder_new.
	(produce_asm_for_decls): Call lto_cgraph_encoder_delete.
	* lto-section-out.h (struct lto_out_decl_state): Add
	field cgraph_node_encoder.

2009-06-17  Rafael Espindola  <espindola@google.com>

	Partial revert of 145103.

2009-06-17  Rafael Espindola  <espindola@google.com>

	Mainline merge @148497.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-06-16  Rafael Espindola  <espindola@google.com>

	Mainline merge @148407.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-06-09  Jan Hubicka  <jh@suse.cz>

	* ipa-reference.c (add_new_function, remove_node_data,
	duplicate_node_data): Declare.
	(ipa_init): Initialize hooks here.
	(generate_summary): Do not initialize them here.
	* ipa-pure-const.c (register_hooks): New function.
	(generate_summary): Use it here instead of registering.
	(read_summary): Likewise.
	* passes.c (init_optimization_passes): Re-enable.

	Revert:
	2008-10-23 Rafael Espindola  <espindola@google.com>

	* ipa-pure-const.c (node_duplication_hook_holder,
	node_removal_hook_holder): Remove.
	(get_function_state, set_function_state): Use DECL_UID.
	(duplicate_node_data, remove_node_data): Remove.
	(generate_summary): Don't use the removed functions. Iterate over
	funct_state_vec and free the states.

2009-06-08  Diego Novillo  <dnovillo@google.com>

	* configure.ac: Check $enable_languages instead of
	$language when testing if LTO is enabled or not.
	* configure: Regenerate.

2009-06-05  Diego Novillo  <dnovillo@google.com>

	Mainline merge @148228.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-06-03  Diego Novillo  <dnovillo@google.com>

	* tree-ssa-copy.c (replace_exp_1): Only declare OP if
	ENABLE_CHECKING is defined.

2009-06-02  Jan Hubicka  <jh@suse.cz>
	    Diego Novillo  <dnovillo@google.com>

	Mainline merge @147915.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-06-02  Jan Hubicka  <jh@suse.cz>

	* lto-cgraph.c (output_node): Output new inline summaries;
	add FIXME about not output global info in LTO files.
	(output_cgraph): Update comments.
	(input_overwrite_node): Add new inline plan.
	(input_node): Likewise.
	(pass_ipa_lto_cgraph): Change to ipa_opt_pass_d.
	* lto-function-in.c (input_eh_region): Change to eh_region_d.
	(fixup_eh_region_pointers): Remove prev_try.
	(input_gimple_stmt): Remove GIMPLE_CHANGE_DYNAMIC_TYPE.
	(fixup_call_stmt_edges_1): New function.
	(fixup_call_stmt_edges): New function.
	(input_function): Update for new clones.
	* lto-function-out.c (output_eh_region): Fix C++ compatibility.
	(output_eh_region): Ignore ERT_CLEANUP.
	(output_gimple_stmt): Remove GIMPLE_CHANGE_DYNAMIC_TYPE.
	(pass_ipa_lto_gimple_out): Change to ipa_opt_pass_d.
	* lto-section-out.c: (pass_ipa_lto_finish_out): Change to
	ipa_opt_pass_d.
	* lto-tree-flags.def (CHANGE_DYNAMIC_TYPE_EXPR): Remove;
	Do not mention no_tbaa_flag.
	* lto-tree-tags.def (GIMPLE_CHANGE_DYNAMIC_TYPE): Remove.
	* lto-wpa-fixup.c (pass_ipa_lto_wpa_fixup): Change to ipa_opt_pass_d.
	* cgraph.c (cgraph_clone_input_node): Update for new clones.
	(cgraph_is_clone_node): Likewise.
	* cgraphunit.c (ipa_passes): Update cast to struct ipa_opt_pass_d.
	(cgraph_emit_thunks): Add FIXME comment.
	* dwarf2out.c (current_unit_personality): New static var.
	(output_call_frame_info): Use it.
	(dwarf2out_begin_prologue): Set it.
	* passes.c (init_optimization_passes): Temporarily disable
	ipa-cp.

2009-06-02  Diego Novillo  <dnovillo@google.com>

	* tree.c (free_lang_data_in_decl): Do not clear
	DECL_CONTEXT for FUNCTION_DECLs.
	* lto-function-out.c (output_function): Do not expect
	DECL_CONTEXT to be NULL.
	(output_function_decl): Emit DECL_CONTEXT.
	* lto-function-in.c (input_function): Do not clear
	DECL_CONTEXT.
	(input_function_decl): Read DECL_CONTEXT.
	* lto-cgraph.c (input_cgraph): Tolerate extra cgraph
	nodes created by cgraph_node while reading the call
	graph.

2009-06-01  Diego Novillo  <dnovillo@google.com>

	* c.opt (Wabi): Add LTO.
	(Wpsabi): Add LTO.

2009-06-01  Diego Novillo  <dnovillo@google.com>

	* lto-function-out.c (output_function_decl): Fix type of STR.

2009-05-31  Diego Novillo  <dnovillo@google.com>

	* lto-function-out.c (output_expr_operand): Handle
	NULL_TREE values for EXPR.
	<case COMPONENT_REF>: Write operand 2.
	<case ARRAY_REF>: Write operands 2 and 3.
	* lto-function-in.c (input_expr_operand): Corresponding
	changes.

2009-05-31  Diego Novillo  <dnovillo@google.com>

	* lto-section-out.c (preload_common_node): Call
	preload_common node on fields of structures.

2009-05-31  Diego Novillo  <dnovillo@google.com>

	* tree.h (set_builtin_user_assembler_name): Move from ...
	* c-common.h (set_builtin_user_assembler_name): ... here.
	* builtins.c (set_builtin_user_assembler_name): Move from ...
	* c-common.c (set_builtin_user_assembler_name): ... here.
	* lto-function-out.c (output_function_decl): Preserve
	user-set assembler names for builtins.
	* lto-function-in.c (input_function_decl): Call
	set_builtin_user_assembler_name if needed.

2009-05-31  Diego Novillo  <dnovillo@google.com>

	* tree-pretty-print.c (dump_generic_node): Protect
	against NULL op0.

2009-05-27  Diego Novillo  <dnovillo@google.com>

	* tree-ssa-live.c (dump_scope_block): Document arguments.
	(dump_scope_blocks): Document.
	(debug_scope_blocks): New.
	* tree-flow.h (debug_scope_blocks): Declare.

2009-05-27  H.J. Lu  <hongjiu.lu@intel.com>

	* lto-function-in.c (input_tree_block): Use HOST_WIDEST_INT
	on block_flags.
	* lto-function-out.c (output_tree_block): Likewise.

2009-05-27  Diego Novillo  <dnovillo@google.com>

	* tree-pretty-print.c (dump_block_node): Tidy white
	space in dump.
	* tree.c (dump_block_tree): Remove.
	(debug_block_tree): Remove.
	* tree.h (dump_block_tree): Remove.
	(debug_block_tree): Remove.

2009-05-27  Diego Novillo  <dnovillo@google.com>

	* lto-section-out.c (write_symbol_vec): Tidy test for
	symbols to keep out of the symbol table.

2009-05-26  Diego Novillo  <dnovillo@google.com>

	* lto-function-out.c (output_expr_operand): Move forward
	declaration earlier in the file.
	(output_tree_flags): Handle BLOCK nodes.
	(output_block_or_decl): New.
	(output_tree_block): New.
	(output_tree_with_context): Call it to handle BLOCK nodes.
	Handle BLOCK nodes when detecting nodes that have been
	written out already.
	(output_expr_operand): Handle every unhandled code with
	the default label.
	(output_local_var_decl): If DECL does not have a name,
	set DECL_NAME to D.<uid>.
	Write DECL_VALUE_EXPR, if it has one.
	(output_gimple_stmt): Write gimple_block (STMT).
	(lto_static_init): Remove BLOCK from set
	lto_types_needed_for.
	(output_function): Create a hash table for OB->MAIN_HASH_TABLE.
	Write DECL_INITIAL (FUNCTION).
	* lto-function-in.c (input_expr_operand): Forward declare.
	(input_local_var_decl): Read DECL_VALUE_EXPR, if needed.
	(input_gimple_stmt): Read gimple_block for STMT.
	(input_function): Read DECL_INITIAL for FN_DECL.
	(input_block_or_decl): New.
	(input_tree_block): New.
	(input_tree_operand): Call it.
	* lto-tags.h (enum LTO_tags): Add LTO_block.
	* lto-tree-tags.def: Call MAP_EXPR_TAG for LTO_block.
	Call SET_NAME for LTO_block.
	* lto-tree-flags.def: Remove asm_written_flag from BLOCK,
	QUAL_UNION_TYPE, RECORD_TYPE and UNION_TYPE.

2009-05-26  Diego Novillo  <dnovillo@google.com>

	* lto-function-out.c (output_local_var_decl): if DECL has
	no DECL_NAME, write the name D.<DECL_UID>.
	Remove argument FN.  Update all users.
	If DECL has a value expression, write it.
	* lto-function-in.c (input_local_var_decl): If DECL has a
	value expression, read it.

2009-05-26  Diego Novillo  <dnovillo@google.com>

	* tree-pretty-print.c (dump_location): New.
	(dump_generic_node): Call it.
	Factor code to handle BLOCK nodes ...
	(dump_block_node): ... here.

2009-05-26  Diego Novillo  <dnovillo@google.com>

	* tree.c (free_lang_data_in_decl): Set DECL_CONTEXT for
	every symbol in DECL_STRUCT_FUNCTION (DECL)->local_decls.

2009-05-26  Diego Novillo  <dnovillo@google.com>

	* tree.c (dump_block_tree): New.
	(debug_block_tree): New.
	* tree.h (dump_block_tree): Declare.
	(debug_block_tree): Declare.

2009-05-21  Simon Baldwin  <simonb@google.com>

	* Makefile.in: Added ZLIBINC to lto-compress.o compilation.

2009-05-21  Diego Novillo  <dnovillo@google.com>

	* doc/install.texi: Document libelf requirements,
	--with-libelf and --enable-lto.
	* configure: Regenerate.
	* aclocal.m4: Do not include ../config/libelf.m4.
	* config.in: Regenerate.
	* configure.ac: Remove calls to AC_CHECK_LIBELF and
	AC_CHECK_GELF.
	If LTO is enabled, define ENABLE_LTO.
	Call AC_ARG_VAR for LIBELFLIBS and LIBELFINC.
	* c-opts.c (c_common_post_options): Issue an error if
	ENABLE_LTO is false and -flto or -fwhopr are used.
	* Makefile.in (LIBELFLIBS): Define.
	(LIBELFINC): Define.
	(BACKENDLIBS): Add LIBELFLIB.
	(INCLUDES): Add LIBELFINC.
	* collect2.c (main): Issue an error if ENABLE_LTO is
	false and -flto or -fwhopr are used.

2009-05-19  Diego Novillo  <dnovillo@google.com>

	* opts.c (complain_wrong_lang): Remove workaround to
	quell warning message when LTO is not supported.

2009-05-15  Diego Novillo  <dnovillo@google.com>

	* lto-symtab.c (lto_symtab_merge_decl): Remove stale comment.
	* lto-utils.h (emit_label_in_global_context_p): New.
	Replace every reference to DECL_NONLOCAL to a reference
	to emit_label_in_global_context_p.

2009-05-15  Diego Novillo  <dnovillo@google.com>

	* lto-function-out.c (output_stmt_location): New.
	(output_gimple_stmt): Call it.
	* lto-function-in.c (input_stmt_location): New.
	(input_gimple_stmt): Call it.

2009-05-15  Diego Novillo  <dnovillo@google.com>

	* lto-tags.h (LTO_SOURCE_FILE): Add brackets around value.
	(LTO_SOURCE_LINE): Likewise.
	(LTO_SOURCE_COL): Likewise.
	(LTO_SOURCE_HAS_LOC): Likewise.

2009-05-15  Diego Novillo  <dnovillo@google.com>

	* lto-function-out.c (output_tree_flags): Always emit
	location information for expressions and symbols that
	have them.
	Make sure that FLAGS has enough space left to encode
	location information.
	* lto-function-in.c (input_line_info): Change return type
	to void.
	Update all callers.
	Assert that FLAGS has LTO_SOURCE_HAS_LOC set.
	* lto-tags.h: Update comment describing the LTO_SOURCE_*
	flags.

2009-05-15  Diego Novillo  <dnovillo@google.com>

	* lto-symtab.c (lto_symtab_prevailing_decl): If DECL is a
	builtin return it.
	* lto-function-out.c (output_expr_operand)<FUNCTION_DECL>:
	Set TAG to LTO_function_decl1 if EXPR is a builtin.
	Otherwise, set it to LTO_function_decl0.
	(output_function_decl): If DECL is a builtin, only write
	its class and function code.
	* lto-function-in.c (input_function_decl): Add argument TAG.
	Update all users.
	If TAG is LTO_function_decl1 retrieve the function symbol
	from the built_in_decls array.
	* lto-cgraph.c (input_node): Allow nodes of builtin
	functions to be overwritten.
	* lto-tree-tags.def: Add LTO_function_decl0 and
	LTO_function_decl1.
	Remove LTO_function_decl.  Update all users.
	* lto-tags.h (enum LTO_tags): Add LTO_function_decl0 and
	LTO_function_decl1.
	Remove LTO_function_decl.

2009-05-13  Diego Novillo  <dnovillo@google.com>

	* lto-compress.c (struct lto_compression_stream): Change
	size_t to unsigned.  Update all users.
	(lto_zalloc): Likewise.
	(lto_new_compression_stream): Likewise.
	(lto_start_compression): Likewise.
	(lto_start_uncompression): Likewise.
	* lto-section-in.c (lto_apend_data): Likewise.

2009-05-13  Diego Novillo  <dnovillo@google.com>

	* gimple.c: Include alias.h.
	(gimple_signed_or_unsigned_type): New.
	(gimple_unsigned_type): New.
	(gimple_signed_type): New.
	(gimple_get_alias_set): New.
	* gimple.h (gimple_unsigned_type): Declare.
	(gimple_signed_type): Declare.
	(gimple_get_alias_set): Declare.
	* Makefile.in (gimple.o): Add dependency on ALIAS_H.

2009-05-13  Simon Baldwin  <simonb@google.com>

	* lto-compress.h: New file.
	* lto-compress.c: New file.
	* Makefile.in: Added entries to build lto-compress module, added
	ZLIB to BACKENDLIBS.
	* lto-header.h (struct lto_stats_d): Add counters to monitor
	compression performance.
	* langhooks.c (lhd_append_data): Omit call to assemble_string if
	data to send is NULL.
	* lto-section-in.c: Include lto-compress.h.
	* (struct lto_buffer): New structure supporting data accumulation
	from compression.
	* (lto_append_data): New function, compression callback.
	* (struct lto_data_header): New structure added to uncompressed
	data streams to allow free to find the original compressed data.
	* (lto_get_section_data): Uncompress retrieved section data, and
	return instead the uncompressed text.
	* (lto_free_section_data): Retrieve the address and length of the
	original compressed data and free that, then free the uncompressed
	data.
	* lto-section-out.c: Include lto-compress.h.
	* (lto_append_data): New function, compression callback.
	* (compression_stream): Static pointer to current compression stream.
	* (lto_begin_section): Add call to lto_start_compression.
	* (lto_end_section): Add call to lto_end_compression.
	* (lto_write_stream): Add call to lto_compress_block, general tidy up
	of loop structure.
	* common.opt: Add new flag -flto-compression-level.
	* lto-utils.c (print_lto_report): Add report of (un-)compression
	statistics.
	* doc/invoke.texi: Documented -flto-compression-level.
	* doc/sourcebuild.texi: Added information on new use of zlib.

2009-05-13  Diego Novillo  <dnovillo@google.com>

	* lto-function-out.c (output_bb): Write basic block
	fields 'count', 'loop_depth', 'frequency' and 'flags'.
	* lto-function-in.c (input_bb): Corresponding changes.

2009-05-13  H.J. Lu  <hongjiu.lu@intel.com>

	* ipa-pure-const.c (write_summary): Replace
	lto_output_uleb128_stream with
	lto_output_widest_uint_uleb128_stream on HOST_WIDEST_INT.
	(read_summary): Replace lto_input_uleb128 with
	lto_input_widest_uint_uleb128 on HOST_WIDEST_INT.

	* lto-cgraph.c (output_edge): Replace lto_output_uleb128_stream
	with lto_output_widest_uint_uleb128_stream on HOST_WIDEST_INT.
	(output_node): Likewise.
	(input_edge): Replace lto_input_uleb128 with
	lto_input_widest_uint_uleb128 on HOST_WIDEST_INT.

	* lto-function-in.c (input_function): Use HOST_WIDEST_INT
	for flags.
	* lto-function-out.c (output_function): Likewise. 

2009-05-12  Diego Novillo  <dnovillo@google.com>

	* lto-tree-flags.def: Add public_flag for INTEGER_CSTs.
	* lto-function-in.c (input_expr_operand): If there are
	flags to be added on constants, create a copy of RESULT.

2009-05-12  Diego Novillo  <dnovillo@google.com>

	* lto-function-out.c (output_eh_regions): Only emit EH
	regions when there is a region array for FN.
	(output_cfg): Write profile status for the function.
	Write fields 'probability' and 'count' for every basic
	block.
	(output_function): Write all bitfield flags in struct
	function for FN.
	* lto-function-in.c (input_cfg): Corresponding changes
	for reading.
	(input_function): Likewise.
	* basic-block.h (enum profile_status_d): Rename from enum
	profile_status.

2009-05-12  Diego Novillo  <dnovillo@google.com>

	* passes.c (ipa_write_summaries): Call cgraph_postorder
	to sort the cgraph nodes before creating the cgraph set.

2009-05-11  Diego Novillo  <dnovillo@google.com>

	* tree.c (free_lang_data_in_decl): If a FIELD_DECL has a
	non-constant offset, set it to NULL.
	* lto-function-out.c (eq_label_slot_node): Use pointer
	equality.
	(hash_label_slot_node): Use pointer hashing.
	(output_label_ref): Handle DECL_NONLOCAL labels.
	(output_expr_operand) <CASE_LABEL_EXPR>: Assert that the
	label is local.
	<VAR_DECL>: Call decl_function_context to determine if
	the symbol is local or global.
	<LABEL_DECL>: Use LTO_label_decl1 for DECL_NONLOCAL
	labels and LTO_label_decl0 for local labels.
	(output_function): Write FN->STATIC_CHAIN_DECL and
	FN->NONLOCAL_GOTO_SAVE_AREA.
	(output_label_decl): Use LTO_label_decl1 for
	DECL_NONLOCAL labels and LTO_label_decl0 for local
	labels.
	Emit the label context.
	* lto-function-in.c (get_label_decl): Make sure that the
	index read falls inside the label array.
	Assert that the label is local.
	(input_expr_operand) <TYPE_DECL>: Call
	lto_file_decl_data_get_type_decl instead of
	lto_file_decl_data_get_field_decl.
	<LABEL_DECL>: Call lto_file_decl_data_get_label_decl for
	LTO_label_decl1.
	(input_labels): Set DATA_IN->NUM_NAMED_LABELS and
	DATA_IN->NUM_UNNAMED_LABELS.
	Set DECL_CONTEXT for every label built.
	(input_eh_region): Add new LABEL_TAG local.  Use it as
	argument to input_expr_operand when building the tree
	label for the region.
	(input_gimple_stmt): For GIMPLE_LABELs, assert that the
	label is either DECL_NONLOCAL or its context is the
	function being read.
	(input_bb): Assert that after the statement there should
	be an EH region or a null delimiter.
	(input_function): Read FN->STATIC_CHAIN_DECL and
	FN->NONLOCAL_GOTO_SAVE_AREA.
	(lto_read_body): Do not set DATA_IN.NUM_NAMED_LABELS.
	(input_label_decl): Read DECL_CONTEXT.
	* lto-header.h (lto_decl_stream_e_t): Add LTO_DECL_STREAM_LABEL_DECL.
	* lto-tree-in.h (struct data_in): Add field 'num_unnamed_labels'.
	* lto-tree-tags.def: Call MAP_EXPR_TAGS for
	LTO_label_decl0 and LTO_label_decl1.
	Remove call to MAP_EXPR_TAG for LTO_label_decl.
	Call SET_NAME for LTO_label_decl0 and LTO_label_decl1.
	* lto-section-in.h: Call DEFINE_DECL_STREAM_FUNCS for
	label_decl.
	* lto-tags.h (enum LTO_tags): Add LTO_label_decl0 and
	LTO_label_decl1.

2009-05-11  Diego Novillo  <dnovillo@google.com>

	* lto-cgraph.c: Update copyright year.

2009-05-08  Diego Novillo  <dnovillo@google.com>

	* lto-function-out.c (field_decl_is_local): Remove.
	Update all users.
	(type_decl_is_local): Remove.  Update all users.
	* lto-function-in.c: Include ipa-utils.h.
	Re-order static functions to avoid some forward references.
	Cleanup formatting and comments throughout.
	Add documentation for every function.
	(input_expr_operand): Call get_base_var when
	post-processing ADDR_EXPR nodes.
	(input_tree_operand): Likewise.
	* lto-cgraph.c: Cleanup formatting and comments throughout.
	* lto-tree-in.h (struct): Likewise.
	* lto-tree-tags.def: Call MAP_EXPR_TAG for FIELD_DECL and
	TYPE_DECL.
	* lto-tags.h (enum LTO_tags): Remove LTO_field_decl1.
	Rename LTO_field_decl0 to LTO_field_decl.
	Remove LTO_type_decl1.
	Rename LTO_type_decl0 to LTO_type_decl.
	Remove LTO_local_type_ref.
	Rename LTO_global_type_ref to LTO_type_ref.
	Update all users.
	* Makefile.in (lto-function-in.o): Add dependency on
	IPA_UTILS_H.

2009-05-07  Diego Novillo  <dnovillo@google.com>

	* lto-cgraph.c (input_edge): Add type casts for C++ warnings.
	(input_cgraph_1): Likewise.
	* lto-function-in.c (input_real): Likewise.
	(process_tree_flags): Define ADD_TLS_FLAG.
	(lto_static_init_local): Likewise.
	(input_field_decl): Add type casts for C++ warnings.
	(input_const_decl): Likewise.
	(input_function_decl): Likewise.
	(input_var_decl): Likewise.
	(input_parm_decl): Likewise.
	(input_result_decl): Likewise.
	(input_type_decl): Likewise.
	(input_label_decl): Likewise.
	(input_type): Likewise.
	* lto-function-out.c (expr_to_tag): Change type to enum LTO_tags.
	(output_tree_flags): Define ADD_TLS_FLAG.
	(lto_debug_tree_flags): Likewise.
	* lto-section-out.c (get_ref_idx_for): If -funsigned-char is
	given, replace T with unsigned_char_type_node.
	* lto-tree-flags.def: Call ADD_TLS_FLAG instead of
	ADD_VIS_FLAG_SIZE for field tls_model.

2009-05-07  Diego Novillo  <dnovillo@google.com>

	* ipa-pure-const.c (read_summary): Handle new fields
	state_previously_known and looping_previously_known.
	Handle field can_throw.
	(write_summary): Likewise.

2009-05-07  Diego Novillo  <dnovillo@google.com>

	Mainline merge @147098.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-04-25  Diego Novillo  <dnovillo@google.com>

	Mainline merge @146652.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-04-22  Diego Novillo  <dnovillo@google.com>

	* lto-function-out.c (output_ssa_names): Do not emit
	SSA names for memory symbols.
	(output_tree_with_context): Call decl_function_context to
	check if EXPR is a global symbol.
	* lto-function-in.c: Do not include cpplib.h
	(input_var_decl): Tidy.
	* lto-cgraph.c (input_node): Tidy.
	(input_cgraph_1): Tidy.
	(input_cgraph): Call lto_mark_file_for_ltrans.
	* lto-section-in.h: Include target.h and cgraph.h.
	(struct lto_file_decl_data): Tidy.
	Add field needs_ltrans_p.
	(lto_file_needs_ltrans_p): New.
	(lto_mark_file_for_ltrans): New.
	(cgraph_node_set_needs_ltrans_p): New.
	* Makefile.in (LTO_SECTION_IN_H): Add dependency on
	TARGET_H and CGRAPH_H.
	(LTO_SECTION_OUT_H): Fix incorrect dependencies.
	(lto-function-in.o): Remove dependency on dwarf2asm.h and
	dwarf2out.h.

2009-04-20  Diego Novillo  <dnovillo@google.com>

	Mainline merge @146424.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-04-16  Diego Novillo  <dnovillo@google.com>

	Mainline merge @146125.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-04-08  Diego Novillo  <dnovillo@google.com>

	Mainline merge @146001.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-04-08  Diego Novillo  <dnovillo@google.com>

	Mainline merge @145637.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-04-08  Diego Novillo  <dnovillo@google.com>

	* gimple.h (gimple_reset_mem_ops): Remove.  Update all users.
	* ipa-cp.c (ipcp_ltrans_cloning_candidate_p): Remove.  Update all
	users.
	(ipcp_cloning_candidate_p): Do not check for LTRANS.
	(ipcp_update_callgraph): Revert handling of cloned caller
	nodes.
	(graph_gate_cp): Add FIXME lto note.
	* lto-function-in.c (input_expr_operand): Do not call build7.
	Remove handling of NAME_MEMORY_TAG and SYMBOL_MEMORY_TAG.
	(input_eh_region): Return NULL for LTO_eh_table_shared_region.
	(fixup_eh_region_pointers): Setup region sharing using
	AKA bitmap sets.
	(input_gimple_stmt): Clear tuple fields with pointer values.
	Mark the statement modified.
	(input_function): Call update_ssa to update SSA on .MEM.
	(input_tree_operand): Remove handling of NAME_MEMORY_TAG
	and SYMBOL_MEMORY_TAG.
	* lto-function-out.c (output_eh_region): Do not output
	the region number for LTO_eh_table_shared_region.
	(output_expr_operand): Remove handling of NAME_MEMORY_TAG
	and SYMBOL_MEMORY_TAG.
	(output_bb): Do not write PHI nodes for .MEM.
	(output_tree_with_context): Remove handling of
	NAME_MEMORY_TAG and SYMBOL_MEMORY_TAG.
	* lto-tree-flags.def: Likewise.
	* tree-into-ssa.c: Call bitmap_obstack_initialize.

2009-04-06  Diego Novillo  <dnovillo@google.com>

	* Makefile.in (lto-cgraph.o): Add dependency on lto-utils.h.
	* cgraph.c (initialize_inline_failed): Check that E has a call
	* except.c (debug_eh_tree): New.
	* except.h (debug_eh_tree): Declare.
	* lto-function-in.c (input_bitmap): New.
	(input_eh_region): Handle LTO_eh_table_shared_region.  Return
	a previously created EH region corresponding to the number
	read.
	(fixup_eh_region_pointers): Remove argument LAST_REGION.
	Change type of ROOT_REGION to HOST_WIDE_INT.
	Update all users.
	Handle shared and NULL regions.
	(input_eh_regions): Read size of EH region table before
	reading the array.
	(input_bb): Assert that CFUN is properly set.
	(input_node): Rename WROTE_MASTER_P to CLONE_P.
	(input_function): Look for the first clone in NODE's list
	of clones.
	* lto-cgraph.c (output_node): Rename WROTE_MASTER to
	WRITTEN_DECLS.
	(output_cgraph_verify_node): Remove.
	(output_cgraph): Rename WROTE_MASTER to WRITTEN_DECLS.
	* lto-function-out.c (output_bitmap): New.
	(output_eh_region): For shared regions, output the marker
	LTO_eh_table_shared_region and the region number of the shared
	region.
	(output_eh_regions): Output the AKA bitmap.
	If there is no EH region tree, output -1 to mark its absence.
	Call output_eh_region for every region, even NULL ones.
	(output_parm_decl): Only check DECL_CONTEXT of DECL if FN has
	a gimple body.
	* lto-tags.h (enum LTO_tags): Add LTO_eh_table_shared_region.
	* tree.c (free_lang_data_in_type): After building a qualified
	type for an argument type, call free_lang_data_in_type on the
	new type.
	(free_lang_data_in_decl): Only reset DECL_CONTEXT on
	FUNCTION_DECL arguments when the function has a gimple body.

2009-04-06  Diego Novillo  <dnovillo@google.com>

	Mainline merge @145453.

	* configure.ac (ACX_PKGVERSION): update revision merge string.
	* configure: regenerate.

2009-04-03  Rafael Avila de Espindola  <espindola@google.com>

	* c-decl.c (match_builtin_function_types): Moved from tree.c
	(merge_decls): Initialize olddecl_arguments.
	* lto-symtab.c (lto_symtab_compatible): Remove special case for
	builtin functions.
	* tree.c (match_builtin_function_types): Move to c-decl.c.
	* tree.h (match_builtin_function_types): Remove.

2009-04-02  Rafael Avila de Espindola  <espindola@google.com>

	* cgraph.c (cgraph_is_master_clone): Remove check_overwrite.
	(cgraph_master_clone): Remove check_overwrite.
	* cgraph.h (cgraph_is_master_clone): Remove check_overwrite.
	(cgraph_master_clone): Remove check_overwrite.
	* ipa-pure-const.c(write_summary): Update calls to
	cgraph_is_master_clone.
	* ipa-reference.c (write_node_summary_p): Update call to
	cgraph_is_master_clone.
	* ipa-type-escape.c (type_escape_execute): Update call to
	cgraph_is_master_clone.
	* tree-ssa-structalias.c (ipa_pta_execute): Update calls
	cgraph_is_master_clone.

2009-04-01  Rafael Avila de Espindola  <espindola@google.com>

       Revert

	2007-11-16  Nathan Froyd  <froydnj@codesourcery.com>

        	* c-common.c (c_build_bitfield_integer_type): Rename this...
        	* stor-layout.c (make_bitfield_integer_type): ...to this.
        	* c-decl.c (finish_struct): Use new name.
        	* c-common.h (c_build_bitfield_integer_type): Move declaration...
        	* tree.h (make_bitfield_integer_type): ...here.

	2007-11-16  Nathan Froyd  <froydnj@codesourcery.com>

        	* class.c (layout_class_type): Use make_bitfield_integer_type.

	2007-11-16  Nathan Froyd  <froydnj@codesourcery.com>

        	* lto.c (lto_read_base_type_DIE): Use make_bitfield_integer_type to
        	construct the integer type for bitfields.

2009-04-01  Rafael Avila de Espindola  <espindola@google.com>

	* gcc.c (lto_single): Remove.
	(lto_single_spec_function): Remove. Update all uses.
	(The Specs Language): Remove support for calling functions.
	(invoke_lto_single): Remove. Update all uses.
	(process_command): Don't handle -flto-single.
	(handle_spec_predicate): Remove. Update all uses.
	(lto_single_spec_function): Remove.

2009-03-31  Rafael Avila de Espindola  <espindola@google.com>

	Mainline merge @145119.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-03-31  Rafael Avila de Espindola  <espindola@google.com>

	Mainline merge @145100.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-03-26  Diego Novillo  <dnovillo@google.com>

	* tree-pretty-print.c (dump_generic_node): Merge handler
	for METHOD_TYPE and FUNCTION_TYPE.  Dump type arguments.
	Handle unnamed COMPLEX_TYPE, REAL_TYPE and
	FIXED_POINT_TYPE.
	* tree.c (iterative_hash_host_wide_int): Make extern.
	(free_lang_data_in_type): Call build_qualified_type to
	replace 'const' and 'volatile' function argument types.
	* tree.h (iterative_hash_host_wide_int): Declare extern.
	* gimple.c (gimple_compare_types): Do not test
	TYPE_MAIN_VARIANT.
	if T1 and T2 have different addressability, consider them
	different.

2009-03-26  Diego Novillo  <dnovillo@google.com>
	    Simon Baldwin  <simonb@google.com>

	* gimple.c: Include gimple.h.
	(gimple_compare_types): Do not use TYPE_MAIN_VARIANT to
	check compatibility.
	Call targetm.comp_type_attributes.
	Handle METHOD_TYPE.
	(gimple_types): New.
	(type_hash_cache): New.
	(gimple_type_hash): New.
	(gimple_type_eq): New.
	(gimple_register_type): New.
	(print_gimple_types_stats): New.
	* gimple.h (gimple_register_type): Declare.
	(print_gimple_types_stats): Declare.
	* lto-utils.c: Include gimple.h.
	(print_lto_report): Call print_gimple_stats.
	* Makefile.in (lto-utils.o): Add dependency on GIMPLE_H.
	(gimple.o): Add dependency on TARGET_H.

2009-03-26  Rafael Avila de Espindola  <espindola@google.com>

	PR 39001
	* dwarf2out.c (dwarf2out_do_cfi_asm): Make the check for
	current_function_decl being null the first thing in the function.

2009-03-25  Rafael Avila de Espindola  <espindola@google.com>

	Mainline merge @144635.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-03-23  Rafael Avila de Espindola  <espindola@google.com>

	* gcc.c (LINK_COMMAND_SPEC): Pass the libgcc to the linker.
	(lto_libgcc_spec): New.
	(static_specs): Add lto_libgcc.
	(main): Set lto_libgcc_spec.

2009-03-24  Diego Novillo  <dnovillo@google.com>

	* toplev.c (announce_function): Call get_name.

2009-03-19  Rafael Avila de Espindola  <espindola@google.com>

	* builtins.c (is_builtin_name): New.
	(called_as_built_in): Use is_builtin_name. Make it static.
	* tree.h (is_builtin_name): New.
	(called_as_built_in): Remove.
	* varasm.c (incorporeal_function_p):
	Use is_builtin_name.

2009-03-18  Simon Baldwin  <simonb@google.com>

	Revert:

	2009-03-16  Simon Baldwin  <simonb@google.com>

		* lto-wrapper.c (close_unneeded_fds): New function, close as
		many file descriptors as possible.
		(main): Call it.

2009-03-16  Simon Baldwin  <simonb@google.com>

	* lto-wrapper.c (close_unneeded_fds): New function, close as many
	file descriptors as possible.
	(main): Call it.

2009-03-15  Diego Novillo  <dnovillo@google.com>

	* tree.c (need_assembler_name_p): Always set assembler
	name on builtins.

2009-03-14  Diego Novillo  <dnovillo@google.com>

	* tree.c (free_lang_data_in_type): Remove all variants
	except the main variant of TYPE.
	Remove toplevel CV-qualifiers const and volatile from
	function argument types.
	* gimple.c (struct type_pair_d): Define.
	(type_pair_t): Define.
	(type_pair_hash): New.
	(type_pair_eq): New.
	(lookup_type_pair): New.
	(gimple_compare_types): Factor out of gimple_types_compatible_p.
	Compare type sizes, alignment, precision, mode and sign.
	Compare values for enumeral types.
	Compare all fields of structures and unions.
	Fix comparison of TYPE_QUALS.
	Compare TYPE_IS_SIZETYPE for integer types.
	(gimple_types_compatible_p): Call gimple_compare_types.
	(gimple_same_type_p): Remove.  Update all callers.
	* gimple.h (gimple_same_type_p): Remove.

2009-03-14  Simon Baldwin  <simonb@google.com>

	* lto-symtab.c (lto_symtab_merge_decl): Added assertion to check
	assembler name is already set.
	* (lto_symtab_prevailing_decl): Ditto.

2009-03-13  Rafael Avila de Espindola  <espindola@google.com>

	* builtins.c (called_as_built_in): Make it non static.
	* tree.h (called_as_built_in): New.
	* varasm.c (incorporeal_function_p): Call called_as_built_in.

2009-03-12  Rafael Avila de Espindola  <espindola@google.com>

	* ipa-cp.c (cgraph_gate_cp): Disable ipcp if in ltrans.

2009-03-11  Rafael Avila de Espindola  <espindola@google.com>

	* tree.c (free_lang_data_in_decl): Free DECL_INITIAL of DECL_EXTERNAL
	VAR_DECLs.

2009-03-10  Diego Novillo  <dnovillo@google.com>

	Revert:

	2009-03-09  Diego Novillo  <dnovillo@google.com>

		* tree.c (free_lang_data_in_type): Remove all variants
		except the main variant of TYPE.
		* gimple.c (struct type_pair_d): Define.
		(type_pair_t): Define.
		(type_pair_hash): New.
		(type_pair_eq): New.
		(lookup_type_pair): New.
		(gimple_compare_types): Factor out of gimple_types_compatible_p.
		Compare type sizes, alignment, precision, mode and sign.
		Compare values for enumeral types.
		Compare all fields of structures and unions.
		Fix comparison of TYPE_QUALS.
		Compare TYPE_IS_SIZETYPE for integer types.
		(gimple_types_compatible_p): Call gimple_compare_types.
		(gimple_same_type_p): Remove.  Update all callers.
		* gimple.h (gimple_same_type_p): Remove.

2009-03-10  Simon Baldwin  <simonb@google.com>

	* lto-opts.c (lto_read_file_options): Corrected function comment.

2009-03-10  Rafael Avila de Espindola  <espindola@google.com>

	* tree-inline.c (expand_call_inline): Handle the case that DEST
	has just been created.

2009-03-09  Diego Novillo  <dnovillo@google.com>

	* tree.c (free_lang_data_in_type): Remove all variants
	except the main variant of TYPE.
	* gimple.c (struct type_pair_d): Define.
	(type_pair_t): Define.
	(type_pair_hash): New.
	(type_pair_eq): New.
	(lookup_type_pair): New.
	(gimple_compare_types): Factor out of gimple_types_compatible_p.
	Compare type sizes, alignment, precision, mode and sign.
	Compare values for enumeral types.
	Compare all fields of structures and unions.
	Fix comparison of TYPE_QUALS.
	Compare TYPE_IS_SIZETYPE for integer types.
	(gimple_types_compatible_p): Call gimple_compare_types.
	(gimple_same_type_p): Remove.  Update all callers.
	* gimple.h (gimple_same_type_p): Remove.

2009-03-04  Diego Novillo  <dnovillo@google.com>

	* lto/lto.c (lto_read_all_file_options): Factor out of ...
	(read_cgraph_and_symbols): ... here.
	* lto/lto.h (lto_read_all_file_options): Declare.
	* lto/lto-lang.c (lto_post_options): Call lto_read_all_file_options.
	* lto/Make-lang.in (lto-lang.o): Add dependency on
	LTO_OPTS_H and opts.h.
	* lto-opts.c (lto_reissue_options): Do not call target_reinit.
	* lto-opts.h: Add include guards.

2009-03-03  Diego Novillo  <dnovillo@google.com>

	* doc/invoke.texi: Fix typo.

2009-03-03  Diego Novillo  <dnovillo@google.com>

	* doc/invoke.texi: Fix documentation for -fwhopr.

2009-02-27  Diego Novillo  <dnovillo@google.com>

	* gimple.c (gimple_same_type_p): Move from lto-symtab.c.
	Rename from lto_same_type_p.  Update all users.
	Compare TYPE_QUALS and TYPE_ATTRIBUTES.
	* gimple.h (gimple_same_type_p): Declare.
	* lto-tree-in.h: Fix comment.
	* tree.c (free_lang_data_in_type): Remove variants that
	are the same gimple type as the main variant.
	* lto-symtab.c (lto_merge_qualifiers): Merge in both
	directions.
	(lto_merge_types): Always merge qualifiers for merged
	ARRAY_TYPEs.

2009-02-24  Rafael Avila de Espindola  <espindola@google.com>

	* ipa.c (cgraph_remove_unreachable_nodes): Search all clones.
	* lto-cgraph.c: Include lto-util.h
	(maybe_redirect_inlined_node): Remove.
	(output_edge): Don't worry about an edge poiting to a node not in know
	by the encoder.
	(output_node): Output the decl number instead of the master node
	number in the case of a clone.
	(output_cgraph_verify_node): Don't check that the master is in the set.
	(output_cgraph): Don't output the current master for each decl. The
	first node output will be the master in ltrans.
	(input_node): If a clone, read the decl number and use that decls'
	master node.
	(input_cgraph_1): Update call to input_node.
	* lto-function-out.c (lto_output): Proces each function once. Don't
	care if the node is the master.

2009-02-24  Diego Novillo  <dnovillo@google.com>

	* doc/invoke.texi: Document -flto, -fwhopr and -flto-report.
	* lto-function-in.c (global_vector_enter):
	* lto-header.h (enum lto_section_type): Add LTO_N_SECTION_TYPES.
	(lto_section_name): Declare.
	(struct lto_stats_d): Declare.
	(lto_stats): Declare.
	* lto-section-in.c (lto_section_name): Declare.
	(lto_get_section_data): Update lto_stats.section_size.
	* common.opt (flto-report): Define.
	* lto-stream-debug.c: Include tree.h before lto-header.h.
	* Makefile.in (LTO_OPTS_H): Add dependency on lto-section-in.h
	* lto-utils.c (lto_stats): New.
	(print_lto_report): New.
	* lto-utils.h (print_lto_report): Declare.

2009-02-23  Rafael Avila de Espindola  <espindola@google.com>

	* lto.c (lto_promote_cross_file_statics): Reset context.seen_node_decls
	for each file.

2009-02-22  Diego Novillo  <dnovillo@google.com>

	* tree.c (free_lang_data_in_type): Remove non-FIELD_DECLs
	from UNION_TYPE and QUAL_UNION_TYPE.

2009-02-22  Diego Novillo  <dnovillo@google.com>

	* gimple.c (gimple_types_compatible_p): Call itself
	recursively when comparing fields of aggregates.
	Handle unions.
	Honor TYPE_CANONICAL and pointer equality.

2009-02-20  Simon Baldwin  <simonb@google.com>

	* cgraph.h (cgraph_is_clone_node): New function declaration.
	* cgraph.c (cgraph_is_clone_node): Definition.
	* ipa-cp.c (ipcp_ltrans_cloning_candidate_p): New function,
	applies extra candidate check for ltrans.
	(ipcp_cloning_candidate_p): Call it.

2009-02-19  Diego Novillo  <dnovillo@google.com>

	Revert

	2009-02-19  Rafael Avila de Espindola  <espindola@google.com>

		* lto-cgraph.c: Include lto-util.h
		(maybe_redirect_inlined_node): Remove.
		(output_edge): Don't worry about an edge poiting
		to a node not in know by the encoder.
		(output_node): Output the decl number instead of the master node
		number in the case of a clone.
		(output_cgraph_verify_node): Don't check that the
		master is in the set.

		(output_cgraph): Don't output the current master
		for each decl. The

		first node output will be the master in ltrans.
		(input_node): If a clone, read the decl number
		and use that decls' master node.
		(input_cgraph_1): Update call to input_node.
		* lto-function-out.c (lto_output): Proces each
		function once. Don't care if the node is the
		master.

2009-02-18  Diego Novillo  <dnovillo@google.com>

	* timevar.def (TV_WHOPR_WPA_IO): New timer.

2009-02-18  Diego Novillo  <dnovillo@google.com>

	Mainline merge @144262.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-02-18  Rafael Avila de Espindola  <espindola@google.com>

	* lto-cgraph.c (output_node): Update calls to renamed functions.
	* lto-function-out.c (output_function_decl): Remove saved_static.
	Use lto_forced_extern_inline_p. Make forced functions "extern inline".
	* lto-section-out.c (forced_static_inline): Rename to
	forced_extern_inline.
	(lto_new_static_inline_states): Rename to lto_new_extern_inline_states.
	(lto_delete_static_inline_states): Rename to
	lto_delete_extern_inline_states.
	(lto_force_functions_static_inline): Rename to
	lto_force_functions_extern_inline.
	(lto_forced_static_inline_p): Rename to lto_forced_extern_inline_p.
	* lto-section-out.h (lto_new_static_inline_states): Rename to
	lto_new_extern_inline_states.
	(lto_delete_static_inline_states): Rename to
	lto_delete_extern_inline_states.
	(lto_force_functions_static_inline): Rename to
	lto_force_functions_extern_inline.
	(lto_forced_static_inline_p): Rename to lto_forced_extern_inline_p.
	* passes.c (ipa_write_summaries): Update calls to renamed functions.

2009-02-17  Diego Novillo  <dnovillo@google.com>

	PR 39203
	* c-opts.c (c_common_post_options): Disable -fwhole-program
	when generating IL.

2009-02-16  Rafael Avila de Espindola  <espindola@google.com>

	PR 39010
	* lto-function-in.c (input_string): Rename to input_string_cst.
	Read loc.
	(input_identifier): New.
	(input_string): New.
	(input_line_info): Use input_string.
	(input_expr_operand): Use input_string_cst, input_identifier.
	(input_labels): Use input_identifier.
	(input_local_var_decl): Use input_identifier.
	(input_gimple_stmt): Use input_string_cst.
	(input_tree_operand): Use input_string_cst, input_identifier.
	* lto-function-out.c (output_string): Rename to
	output_string_with_length. Add trailing '\0'.
	(output_string): New.
	(output_string_cst): New.
	(output_identifier): New.
	(output_real): Update call to output_string.
	(output_tree_flags): Update call to output_string.
	(output_expr_operand): Use output_string_cst, output_identifier.
	(output_local_var_decl): Use output_identifier.
	(output_named_labels): Use output_identifier.
	(output_gimple_stmt): Update call to output_string.
	(output_tree_with_context): Use output_string_cst, output_identifier.

2009-02-13  Diego Novillo  <dnovillo@google.com>

	* lto-tree-flags.def (VAR_DECL, FUNCTION_DECL): Remove
	asm_written_flag.
	* toplev.c (compile_file): Move call to coverage_finish ...
	* cgraphunit.c (ipa_passes): ... here.
	Include coverage.h.
	(cgraph_build_static_cdtor): Set DECL_CONTEXT for RESDECL.
	* ipa-utils.c (ipa_utils_reduced_inorder): Handle
	CONSTRUCTOR nodes.
	* ipa-inline.c (cgraph_decide_inlining): Do not expect
	profile_info to be set in LTO.
	* Makefile.in (cgraphunit.o): Add dependency on COVERAGE_H.

2009-02-13  Diego Novillo  <dnovillo@google.com>

	* lto-cgraph.c (output_node): Remove local variable
	NEEDED.  Do not alter the status of the needed marker in
	NODE.
	* lto-section-out.c (lto_force_function_static_inline):
	Remove unused function.
	(lto_forced_static_inline_p): Add comment.
	* lto-section-out.h (lot_force_function_static_inline):
	Remove.

2009-02-12  Diego Novillo  <dnovillo@google.com>

	* varpool.c (debug_varpool): New.
	* cgraph.h (debug_varpool): Declare.

2009-02-10  Simon Baldwin  <simonb@google.com>

	* lto-opts.h: New.
	* lto-opts.c: New.
	* lto-header.h (lto_section_type): Add LTO_section_opts.
	* opts.c: Include lto-opts.h.
	* (handle_option): Call lto_register_user_option for each
	valid option handled.
	* (decode_options): Clear registered options before the options
	handling loop.
	* lto-utils.c (lto_get_section_name): Add LTO_section_opts section.
	* lto-section-out.c: Include lto-opts.h.
	* (produce_asm_for_decls): Write saved options to the output
	object file.
	* Makefile.in (LTO_OPTS_H): New.
	* (OBJS-common): Add lto-opts.o.
	* (opts.o): Add dependency on LTO_OPTS_H.
	* (lto-section-out.o): Ditto.
	* (lto-opts.o): Dependencies for new modules.

2009-02-09  Simon Baldwin  <simonb@google.com>

	* collect2.c (maybe_run_lto_and_relink): Set environment variable
	WPA_SAVE_LTRANS=1 if debug.

2009-02-05  Rafael Avila de Espindola  <espindola@google.com>

	* gcc.c (use_linker_plugin): Remove. Update all uses.
	(use_linker_plugin_spec_function): Remove. Update all uses.

2009-02-05  Rafael Avila de Espindola  <espindola@google.com>

	* tree.c (free_lang_data_in_decl): For non aliases, set TREE_PUBLIC if
	DECL_EXTERNAL is set.

2009-02-04  Diego Novillo  <dnovillo@google.com>

	PR 39001
	* toplev.c (eh_personality_decl): Fix comment.
	* dwarf2out.c (dwarf2out_do_cfi_asm): Return true if
	current_function_decl is NULL.

2009-02-03  Diego Novillo  <dnovillo@google.com>

	* gcc.c (do_spec_1): Mark files added to @args as
	compiled.

2009-02-02  Rafael Avila de Espindola  <espindola@google.com>

	* lto-wrapper.c (fork_execute): Use writeargv.

2009-02-02  Diego Novillo  <dnovillo@google.com>

	* timevar.def (TV_WHOPR_WPA_LTRANS_EXEC): New timer.

2009-02-02  Rafael Avila de Espindola  <espindola@google.com>

	* gcc.c (create_at_file): New.
	(compile_input_file_p): New.
	(do_spec_1): Use @args files for %i. Use create_at_file for %o.
	* main.c (main): Update call to toplev_main.
	* toplev.c (toplev_main): Change signature. Call expandargv.
	* toplev.h (toplev_main): Change signature.

2009-01-31  Diego Novillo  <dnovillo@google.com>

	* cgraphunit.c (cgraph_emit_thunks): Add comment.
	* varasm.c (remove_unreachable_alias_pairs): New.
	* tree.h (remove_unreachable_alias_pairs): Declare.
	* ipa.c (cgraph_remove_unreachable_nodes): Call
	remove_unreachable_alias_pairs.
	* Makefile.in (LTO_SECTION_OUT_H): Add lto-header.h.

2009-01-31  Diego Novillo  <dnovillo@google.com>

	* lto-cgraph.c: Do not include ctype.h.

2009-01-31  Diego Novillo  <dnovillo@google.com>

	Revert

	2009-01-30  H.J. Lu  <hongjiu.lu@intel.com>

		PR lto/39010
		* lto-function-out.c (output_string): Properly handle the
		trailing '\0'.
		(output_tree_flags): Updated.

2009-01-31  Diego Novillo  <dnovillo@google.com>

	* lto-header.h (LTO_STREAM_DEBUGGING): Disable.

2009-01-30  H.J. Lu  <hongjiu.lu@intel.com>

	PR lto/39010
	* lto-function-out.c (output_string): Properly handle the
	trailing '\0'.
	(output_tree_flags): Updated.

2009-01-30  Ramana Radhakrishnan  <ramana.r@gmail.com>

	* doc/invoke.texi (Optimize Options): Fix typo in documentation 
	for -fltrans and -fwpa.

2009-01-30  H.J. Lu  <hongjiu.lu@intel.com>

	PR lto/38995
	* langhooks.c (lhd_begin_section): Call assemble_align to
	align LTO sections to POINTER_SIZE.

2009-01-29  Andreas Schwab  <schwab@suse.de>

	* lto-function-in.c (input_eh_region): Add intermediate cast to
	intptr_t when converting between pointer and HOST_WIDE_INT.
	(fixup_region): Likewise.

2009-01-29  Rafael Avila de Espindola  <espindola@google.com>

	* lto-wrapper.c (collect_execute): Remove unused vars.
	(fork_execute): Write argv to a file and pass that to the command.

2009-01-28  H.J. Lu  <hongjiu.lu@intel.com>

	PR bootstrap/38992
	* configure.ac: Add AC_CHECK_GELF.

	* config.in: Regenerated.
	* configure: Likewise.

2009-01-28  Diego Novillo  <dnovillo@google.com>

	PR middle-end/39004
	* lto-function-in.c (input_local_var_decl): Remove unused
	locals CONTEXT_TAG and CONTEXT.

2009-01-28  Rafael Avila de Espindola  <espindola@google.com>

	* lto-function-in.c (input_local_var_decl): Set DECL_CONTEXT to
	fn->decl.
	* lto-function-out.c (output_local_var_decl): Add the FN argument.
	Assert DECL_CONTEXT is fn.
	(output_local_decl): Add the FN argument. Pass it to
	output_local_var_decl.
	(output_local_vars): Pass fn->decl to output_local_decl.

2009-01-28  Rafael Avila de Espindola  <espindola@google.com>

	* tree.c (free_lang_data_in_cgraph): Call find_decls_types_r on the
	decls in alias_pairs.

2009-01-27  Diego Novillo  <dnovillo@google.com>

	Mainline merge @143693.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2009-01-27  Rafael Avila de Espindola  <espindola@google.com>

	* lto-function-in.c (input_label_decl): Set DECL_CONTEXT to NULL_TREE.
	* lto-function-out.c (output_label_decl) Don't write DECL_CONTEXT.

2009-01-27  Rafael Avila de Espindola  <espindola@google.com>

	* c-decl.c (merge_decls): Make sure newdecl and olddecl don't
	share the argument list.
	* lto-function-in.c (input_function_decl): Pass the context
	while reading the arguments.
	(input_parm_decl): Add the FN argument. Set the contetxt to it.
	(input_tree_operand): Update call to input_parm_decl.
	* lto-function-out.c (output_function_decl): Pass the context
	while writting the arguments.
	(output_parm_decl): Add the FN argument. Check that it is
	equal to the context.
	(output_tree_with_context): Update the call to ouput_parm_decl.
	* tree.c (free_lang_data_in_decl): Force every PARM_DECL to
	point the the correct FUNCTION_DECL.

2009-01-26  Simon Baldwin  <simonb@google.com>

	* ipa-reference.c (write_node_summary_p): Add get_reference_vars_info
	to items verified before writing.
	(read_summary): Avoid reading where no input block is available.
	* ipa-pure-const.c (write_summary): Confirm that function state is
	present before writing a summary.
	(read_summary): Avoid reading where no input block is available.

2009-01-26  Diego Novillo  <dnovillo@google.com>

	* tree.h (TYPE_MAXVAL): Define.
	(TYPE_MINVAL): Define.
	* tree.c: Include cgraph.h, timevar.h and except.h.
	(free_lang_data_in_type): Rename from reset_type_lang_specific.
	Change argument to be the type to process.
	Change return type to void.
	Update all users.
	(set_asm_name): Remove.  Update all users.
	(free_lang_data_in_decl): Rename from
	reset_decl_lang_specific.
	Change argument to be the decl to process.
	Change return type to void.
	Update all users.
	Also analyze DECL_SIZE in RESULT_DECLs.
	(struct free_lang_data_d): Declare.
	(find_decls_types_r): New.
	(get_eh_types_for_runtime): Move from lto-function-out.c.
	(find_decls_types_in_eh_region): New.
	(find_decls_types_in_node): New.
	(find_decls_types_in_var): New.
	(free_lang_data_in_cgraph): New.
	(free_lang_data): Rename from free_lang_specifics
	Call free_lang_data_in_cgraph.
	Set char_type_node to unsigned_char_type_node if -funsigned-char
	was given.
	(gate_free_lang_data): Rename from gate_free_lang_specifics.
	Update all users.
	(pass_ipa_free_lang_data): Rename from free_lang_specifics.
	Update all users.
	Add timer TV_IPA_FREE_LANG_DATA.
	* Makefile.in (tree.o): Add dependency on CGRAPH_H,
	TIMEVAR_H and except.h.
	* lto-function-out.c (get_eh_types_for_runtime): Move to tree.c.
	(output_eh_region): Do not call get_eh_types_for_runtime.
	* timevar.def (TV_IPA_FREE_LANG_DATA): Define.
	* langhooks.h (struct lang_hooks): Rename
	free_lang_specifics to free_lang_data.
	Update all users.
	* langhooks-def.h (LANG_HOOKS_FREE_LANG_DATA): Rename
	from LANG_HOOKS_RESET_LANG_SPECIFICS.  Update all users.
	* except.c (output_ttype): Only call lookup_type_for_runtime
	if TYPE is actually a type.

2009-01-26  Diego Novillo  <dnovillo@google.com>

	* tree.c (uid2type_map): Remove.  Update all users.
	(decl_for_uid_map): Remove.  Update all users.
	(insert_decl_to_uid_decl_map): Remove.  Update all users.
	(insert_type_to_uid_type_map): Remove.  Update all users.
	(uid_type_map_eq): Remove.  Update all users.
	(uid_type_map_hash): Remove.  Update all users.
	(insert_decl_to_uid_decl_map): Remove.  Update all users.
	(remove_decl_from_map): Remove.  Update all users.

2009-01-26  Diego Novillo  <dnovillo@google.com>

	* tree.c (free_lang_data): Set lang_hooks.types_compatible_p
	to gimple_types_compatible_p.
	* gimple.c (gimple_types_compatible_p): Moved from
	lto/lto-lang.c.  Renamed from lto_types_compatible_p.
	* gimple.h (gimple_types_compatible_p): Declare.

2009-01-24  Rafael Avila de Espindola  <espindola@google.com>

	* lto-function-in.c (input_var_decl): Don't read DECL_CONTEXT.
	* lto-function-out.c (output_var_decl): Don't write DECL_CONTEXT.
	Assert it is NULL_TREE.

2009-01-23  Rafael Avila de Espindola  <espindola@google.com>

	* lto-function-in.c (input_const_decl): Set context to NULL_TREE.
	* lto-function-out.c (output_const_decl): Assert that context is
	NULL_TREE.
	* tree.c (reset_decl_lang_specific): Set DECL_CONTEXT of CONST_DECL to
	NULL_TREE.

2009-01-22  Rafael Avila de Espindola  <espindola@google.com>

	* lto-function-in.c (input_translation_unit_decl): Remove.
	(input_tree_operand): Don't call input_translation_unit_decl.
	* lto-function-out.c (output_translation_unit_decl): Remove.
	(output_tree_with_context): Don't call output_translation_unit_decl.

2009-01-22  Rafael Avila de Espindola  <espindola@google.com>

	* lto-function-in.c (input_tree_with_context): New.
	(input_tree_operand): Change signature. Pass fn to input_result_decl.
	(input_function_decl): Use input_tree_with_context for the result.
	(input_result_decl): Change signature. Don't read the context.
	(input_tree): Implement with input_tree_with_context.
	* lto-function-out.c (output_tree_with_context): New.
	(output_function_decl): Use output_tree_with_context for the context.
	(output_result_decl): Change signature. Assert the the context is
	correct. Don't write it.
	(output_tree): Implement with output_tree_with_context.
	* omp-low.c (create_omp_child_function): Set DECL_CONTEXT of the
	RESULT_DECL.

2009-01-21  Rafael Avila de Espindola  <espindola@google.com>

	* lto-function-in.c (input_local_var_decl): Don't read
	DECL_ABSTRACT_ORIGIN.
	* lto-function-out.c (output_local_var_decl): Don't write
	DECL_ABSTRACT_ORIGIN.

2009-01-21  Diego Novillo  <dnovillo@google.com>

	* tree.c: Include diagnostic.h.
	(free_lang_specifics): Reset diagnostic hooks to the
	default hooks.
	* diagnostic.h (default_tree_printer): Declare.
	* toplev.c (default_tree_printer): Make extern.
	* Makefile.in (tree.o): Add dependency on $(DIAGNOSTIC_H)

2009-01-21  Diego Novillo  <dnovillo@google.com>

	* tree.c (reset_type_lang_specific): Do not overwrite
	char_type_node if -funsigned-char is used.

2009-01-21  Rafael Avila de Espindola  <espindola@google.com>

	* lto-function-in.c (input_namespace_decl): Remove.
	(input_tree_operand): Don't call input_namespace_decl.
	* lto-function-out.c (output_namespace_decl): Remove.
	(output_tree): Don't call output_namespace_decl.

2009-01-21  Rafael Avila de Espindola  <espindola@google.com>

	* lto-function-out.c (output_inits_in_decl_state,
	output_remaining_constructors_and_inits,
	output_all_constructors_and_inits): Assert that if there is a context
	it is a FUNCTION_DECL.
	(output_function_decl): Don't write decl->decl_minimal.context.
	* lto-function-in.c (input_function_decl): Don't read
	decl->decl_minimal.context.

2009-01-20  Diego Novillo  <dnovillo@google.com>

	* lto-function-out.c (output_tree): Do not handle char_type_node.
	(output_tree): Move check for flag_signed_char ... 
	(output_type_ref_1): ... here.

2009-01-20  Rafael Avila de Espindola  <espindola@google.com>

	* lto-function-in.c (input_local_vars): Set DECL_CONTEXT (var) to NULL.
	(input_function): Set DECL_CONTEXT (fn_decl) to NULL.
	* lto-function-out.c (output_local_vars): Assert that
	DECL_CONTEXT is NULL.
	(output_function): Assert DECL_CONTEXT is NULL.

2009-01-20  Simon Baldwin  <simonb@google.com>

	* tree-ssa-coalesce.c (coalesce_ssa_name): Skip an SSA name if
	it does not map to a partition.

2009-01-20  Rafael Avila de Espindola  <espindola@google.com>

	* lto-function-in.c (input_local_field_decl, input_local_type_decl,
	input_local_type, input_local_tree): Remove.
	* lto-function-out.c (field_decl_is_local, type_decl_is_local,
	output_type_ref_1): Remove STREAM_LOCAL_TYPES ifdef.
	(output_local_tree, type_function_context): Remove.

2009-01-20  Rafael Avila de Espindola  <espindola@google.com>

	* lto-function-in.c (input_local_field_decl, input_local_type_decl,
	input_local_type): Remove.
	(input_local_decl): Don't call the removed functions.
	* lto-function-out.c (output_local_field_decl,
	output_local_type_decl, output_local_type): Remove.
	(output_local_decl): Don't call the removed functions.

2009-01-15  Rafael Avila de Espindola  <espindola@google.com>

	* tree.c (reset_decl_lang_specific): Set DECL_CONTEXT (decl) to
	decl_function_context (decl) for all non FIELD_DECL DECLs.
	* dwarf2out.c (add_pure_or_virtual_attribute): Check the DECL_CONTEXT is
	not NULL.

2009-01-15  Rafael Avila de Espindola  <espindola@google.com>

	* tree.c (need_assembler_name_p): Ignore DECL_IGNORED_P.
	(reset_decl_lang_specific): Compute the assembler name for every
	cgraph node.
	(free_lang_specifics): Set lang_hooks.set_decl_assembler_name to
	lhd_set_decl_assembler_name.

2009-01-14  Rafael Avila de Espindola  <espindola@google.com>

	* tree.c (reset_decl_lang_specific): Remove the context variable.
	(free_lang_specifics): Set lang_hooks.decl_printable_name to
	lhd_decl_printable_name.

2009-01-13  Rafael Avila de Espindola  <espindola@google.com>

	* Makefile.in (tree.o): Add langhooks-def.h
	* tree.c: Include langhooks-def.h
	(free_lang_specifics): Set lang_hooks.dwarf_name to lhd_dwarf_name.

2009-01-12  Rafael Avila de Espindola  <espindola@google.com>

	* tree.c (reset_decl_lang_specific): Clear DECL_CONTEXT of TREE_STATIC
	VAR_DECLs.

2009-01-12  Rafael Avila de Espindola  <espindola@google.com>

	* c-lang.c (lang_hooks): Remove the const qualifier.
	* gcc/langhooks.h (lang_hooks): Remove the const qualifier.
	* gcc/tree.c (reset_type_lang_specific, reset_decl_lang_specific):
	Reset TREE_LANG_FLAG_[0-6].
	(free_lang_specifics): Set lang_hooks.callgraph.analyze_expr to NULL.

2009-01-09  Diego Novillo  <dnovillo@google.com>

	* ipa-cp.c (ipcp_update_callgraph): Handle cloned
	caller nodes.
	* ipa-reference.c (write_node_summary_p): Return false
	for inlined nodes.

2009-01-09  Rafael Avila de Espindola  <espindola@google.com>

	* cgraphunit.c (cgraph_function_versioning,save_inline_function_body):
	Use DECL_COMDAT_GROUP instead of DECL_ONE_ONLY.
	* config/i386/i386.c (ix86_file_end): Compute DECL_COMDAT_GROUP.
	* dwarf2asm.c(dw2_force_const_mem): Update call to make_decl_one_only.
	* langhooks-def.h (lhd_comdat_group): Change signature.
	(LANG_HOOKS_COMDAT_GROUP): Remove.
	(LANG_HOOKS_DECLS): Remove LANG_HOOKS_COMDAT_GROUP.
	* langhooks.c (lhd_comdat_group): Change signature.
	* langhooks.h (lang_hooks_for_decls): Remove comdat_group.
	* lto-function-in.c (input_function_decl,input_var_decl): Read
	comdat_group.
	* lto-function-out.c (output_function_decl, output_var_decl): Write
	comdat_group.
	* lto-section-out.c (write_symbol_vec): Use DECL_COMDAT_GROUP.
	* lto-tree-flags.def (FUNCTION_DECL): Remove one_only.
	* tree.h (DECL_COMDAT_GROUP): New.
	(DECL_ONE_ONLY): Use DECL_COMDAT_GROUP.
	(tree_decl_with_vis): Add comdat_group. Remove one_only.
	(make_decl_one_only): Change signature.
	* varasm.c (get_emutls_init_templ_addr, emutls_decl): Update call to
	make_decl_one_only.
	(make_decl_one_only): Change signature.
	(default_elf_asm_named_section): Use DECL_COMDAT_GROUP.

2009-01-08  Rafael Avila de Espindola  <espindola@google.com>

	* lto-section-out.c (write_symbol_vec): Use DECL_ONE_ONLY instead of
	DECL_COMDAT.

2009-01-07  Rafael Avila de Espindola  <espindola@google.com>

	* tree.c (reset_decl_lang_specific): Clear DECL_CONTEXT if it is a
	NAMESPACE_DECL.

2009-01-05  Diego Novillo  <dnovillo@google.com>

	* except.c (check_handled): Handle pointers to runtime types.

2009-01-05  Rafael Avila de Espindola  <espindola@google.com>

	* lto-section-out.c (write_symbol_vec): Correctly handle names that
	start with a '*'.

2009-01-05  Simon Baldwin  <simonb@google.com>

	* lto-symtab.c (lto_same_type_p): Compare TYPE_MAIN_VARIANTs for
	class types if the primary identifier string comparison fails.

2009-01-03  Diego Novillo  <dnovillo@google.com>

	Mainline merge @142987.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2008-12-31  Rafael Avila de Espindola  <espindola@google.com>

	* lto-section-out.c (write_symbol_vec): Use incorporeal_function_p.
	* tree.h (incorporeal_function_p): New.
	* varasm.c (incorporeal_function_p): Not static anymore.

2008-12-31  Diego Novillo  <dnovillo@google.com>

	* tree.c (need_assembler_name_p): Factor out of ...
	(set_asm_name): ... here.

2008-12-29  Diego Novillo  <dnovillo@google.com>

	* tree.c (set_asm_name): Do not try to set the assembler
	name for unused FUNCTION_DECLs.

2008-12-24  Rafael Avila de Espindola  <espindola@google.com>

	* lto-section-out.c (write_symbol_vec): Use DECL_BUILT_IN only for
	FUNCTION_DECLs.

2008-12-24  Rafael Avila de Espindola  <espindola@google.com>

	* lto-section-out.c (write_symbol_vec): Use DECL_BUILT_IN instead of
	DECL_IS_BUILTIN.

2008-12-24  Rafael Avila de Espindola  <espindola@google.com>

	* lto-section-out.c (write_symbol_vec): Skip builtins.

2008-12-23  Simon Baldwin  <simonb@google.com>

	* lto-section-out.c (write_symbol_vec): Avoid taking symbol size
	for symbols that don't have one.

2008-12-23  Simon Baldwin  <simonb@google.com>

	* collect2.c (maybe_run_lto_and_relink): Pass on any -debug flag
	to lto-wrapper.
	* lto-wrapper.c (maybe_unlink_file): New.
	* (run_gcc): Call maybe_unlink_file() for ltrans_output_file.

2008-12-22  Diego Novillo  <dnovillo@google.com>

	* lto-function-out.c (output_alias_pair_p): New.
	Retrieve the cgraph node for the target of the alias pair.
	(output_constructors_and_inits): Call it.

2008-12-21  Diego Novillo  <dnovillo@google.com>

	* toplev.c (compile_file): Emit gnu_lto_v1 in .comm.

2008-12-21  Diego Novillo  <dnovillo@google.com>

	* lto-function-in.c (input_constructors_or_inits): Remove
	#if 0s from previously botched commit.

2008-12-20  Diego Novillo  <dnovillo@google.com>

	* lto-function-in.c (input_constructors_or_inits): When
	reading alias pairs, rename the target of the alias if a
	new name had been registered for it.
	(input_function_decl): Also register the mapping
	NEW_ASSEMBLER_NAME -> OLD_ASSEMBLER_NAME.
	* lto-section-in.c (lto_record_renamed_decl): Fix documentation.
	(lto_get_decl_name_mapping): Rename from lto_original_decl_name. 
	Fix documentation.
	Update all users.

2008-12-19  Diego Novillo  <dnovillo@google.com>

	* lto-function-out.c (copy_function): Tidy.
	* lto-section-in.c (lto_original_decl_name): Likewise.

2008-12-19  Diego Novillo  <dnovillo@google.com>

	* lto-function-out.c (output_function): Tidy formatting.
	(output_constructors_and_inits): Only emit alias_pairs
	for FUNCTION_DECLs whose node is in SET.

2008-12-19  Diego Novillo  <dnovillo@google.com>

	* cgraph.c (dump_cgraph_node): Show memory address of NODE.
	* cgraph.h (csi_end_p): Tidy formatting.

2008-12-18  Diego Novillo  <dnovillo@google.com>

	* tree-into-ssa.c (dump_tree_ssa): Use get_name instead
	of lang_hooks.decl_printable_name.
	* tree-pretty-print.c (PRINT_FUNCTION_NAME): Likewise.
	* tree-stdarg.c (execute_optimize_stdarg): Likewise.
	* tree-ssa-alias.c (dump_mem_ref_stats): Likewise.
	(dump_alias_stats): Likewise.
	(dump_alias_info): Likewise.
	(dump_points_to_info): Likewise.
	* tree-dfa.c (dump_dfa_stats): Likewise.
	* tree-cfg.c (gimple_dump_cfg): Likewise.
	(dump_cfg_stats): Likewise.
	(gimple_cfg2vcg): Likewise.
	(dump_function_to_file): Likewise.
	* passes.c (pass_init_dump_file): Likewise.

2008-12-17  Diego Novillo  <dnovillo@google.com>

	* cgraphunit.c (cgraph_expand_function): Move call to
	lang_hooks.callgraph.emit_associated_thunks to
	cgraph_emit_thunks.
	(cgraph_emit_thunks): New.
	(cgraph_optimize): Call it.
	Only emit thunks on locally defined nodes.

2008-12-17  Rafael Avila de Espindola  <espindola@google.com>

	* c-decl.c (c_maybe_initialize_eh): Init eh_personality_decl
	instead of eh_personality_libfunc.
	(finish_decl): Don't call c_maybe_initialize_eh.
	* c-parser.c (c_parse_file): Call c_maybe_initialize_eh.
	* dwarf2out.c (dwarf2out_do_cfi_asm): Use eh_personality_decl. Add a
	FIXME.
	(output_call_frame_info, dwarf2out_begin_prologue): Use personality
	from current_function_decl.
	* except.c (sjlj_emit_function_enter, output_function_exception_table):
	Use personality from current_function_decl.
	* expr.h (build_personality_function, get_personality_function): New.
	* libfuncs.h (libfunc_index): Remove LTI_eh_personality.
	(eh_personality_libfunc): Remove.
	* lto-function-in.c (lto_init_eh): Don't set eh_personality_libfunc.
	(input_function_decl): Read decl->function_decl.personality.
	* lto-function-out.c (output_function_decl): Write
	decl->function_decl.personality.
	* optabs.c (init_one_libfunc): Call build_personality_function.
	* toplev.c (eh_personality_decl): New.
	* tree.c (make_node_stat):  Set DECL_FUNCTION_PERSONALITY.
	* tree.h (DECL_FUNCTION_PERSONALITY): New.
	(tree_function_decl): Add personality.
	(eh_personality_decl): New.

2008-12-10  Diego Novillo  <dnovillo@google.com>

	* lto-symtab.c (lto_symtab_compatible): Add locus
	information to error messages.
	(lto_symtab_merge_decl): Likewise.

2008-12-09  Diego Novillo  <dnovillo@google.com>

	Mainline merge @142607.
	
	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2008-12-09  Diego Novillo  <dnovillo@google.com>

	* lto-tree-tags.def: Move COND_EXPR to TREE_SINGLE_MECHANICAL_TRUE
	handler.
	* lto-function-in.c (input_expr_operand): Remove special
	handler for COND_EXPR.
	(input_tree_operand): Likewise.
	* lto-tree-flags.def: Do not stream out TREE_OVERFLOW for
	INTEGER_CST.

2008-12-09  Rafael Avila de Espindola  <espindola@google.com>

	* lto-function-in.c (get_resolution): Fix handling of weak decls.

2008-12-09  Rafael Avila de Espindola  <espindola@google.com>

	* lto-function-in.c (input_local_var_decl): Handle the case DECL_CONTEXT
	is NULL.
	* lto-section-out.c (write_symbol_vec): Assert that we don't see a
	DECL_ABSTRACT.
	* tree.c (reset_decl_lang_specific): Clean DECL_CONTEXT of VAR_DECLs
	and PARM_DECLs if the context is an abstract function.

2008-12-08  Rafael Avila de Espindola  <espindola@google.com>

	* gcc.c (LINK_COMMAND_SPEC): pass -O*, -w and -f* to the plugin.

2008-12-08  Rafael Avila de Espindola  <espindola@google.com>

	* gcc.c (use_linker_plugin): New.
	(use_linker_plugin_spec_function): New.
	(LINK_COMMAND_SPEC): Pass plugin options to the linker.
	(linker_plugin_file_spec): New.
	(lto_wrapper_spec): New.
	(lto_gcc_spec): New.
	(static_specs): Add linker_plugin_file, lto_wrapper and lto_gcc.
	(static_spec_functions): Add use-linker-plugin.
	(process_command): Handle -use-linker-plugin.
	(main): Use lto_wrapper_spec instead of lto_wrapper. Set
	linker_plugin_file_spec and lto_gcc_spec.
	(use_linker_plugin_spec_function): New.

2008-12-04  Doug Kwan  <dougkwan@google.com>

	* lto-function-out.c (output_remaining_constructors_and_inits):
	Only output externally visible vars.
	(output_function_decl): Remove code to output LTO DECL flags.
	(output_var_decl): Remove code to fixup up globalized statics.
	Also, no need to check for LTO_DECL_FLAG_FORCE_GLOBAL.
	* lto-function-in.c (input_function_decl): Remove code to read
	LTO DECL flags.
	(input_var_decl): Remove code to fix up globalized statics.
	* lto-utils.h (LTO_DECL_FLAG_FORCE_GLOBAL): Remove flag.

2008-12-04  Rafael Avila de Espindola  <espindola@google.com>

	* lto-plugin.c (all_symbols_read_handler): Do nothing if
	num_claimed_files is 0.

2008-12-04  Simon Baldwin  <simonb@google.com>

	* lto-symtab.c (lto_symtab_merge_decl): Remove assertion that
	tests for non-local register variables.

2008-12-04  Simon Baldwin  <simonb@google.com>

	* lto-symtab.c (lto_merge_qualifiers): New function, merges type
	qualifiers in a conservative manner.
	* (lto_same_type_p): Remove qualifier equality check.
	* (lto_merge_types): Remove qualifier equality check, call
	lto_merge_qualifiers() to merge qualifiers on the return type.

2008-12-03  Diego Novillo  <dnovillo@google.com>

	* lto-wrapper.c: Tidy comments/formatting.
	Include libiberty.h.
	(main): Call expandargv before processing arguments.

2008-12-02  Doug Kwan  <dougkwan@google.com>

	* lto-function-out.c (output_remaining_constructors_and_inits):
	Use lto_get_decl_flags and LTO_DECL_FLAG_DEFINED instead of
	lto_get_var_flags and LTO_VAR_FLAG_DEFINED respectively.
	(output_function_decl): Add code to write out LTO DECL flags.
	(output_var_decl): Use lto_get_decl_flags instead of
	lto_get_var_flags.  Use LTO_DECL_FLAG_* instead of LTO_VAR_FLAG_*.
	* lto-function-in.c (input_function_decl): Add code to read LTO
	DECL flags and force a static DECL to be global if necessary.
 	(input_var_decl): Use lto_get_decl_flags and LTO_DECL_FLAG_FORCE_GLOBAL
	instead of lto_get_var_flags and LTO_VAR_FLAG_FORCE_GLOBAL
	respectively.  Add code to force a static DECL to global if necessary.
	* varasm.c (assemble_variable): Use lto_get_decl_flags instead of
	lto_get_var_flags.
	* lto-utils.c (File): Replace all uses of lto_var_flags_t with
	lto_decl_flags_t.
	(lto_get_decl_flags): Renamed from lto_get_var_flags.
	(lto_set_decl_flags): Renamed from lto_set_var_flags.
	* lto-utils.h (File): Replace all lto_var_flags_* and LTO_VAR_FLAG_*
	with corresponding lto_decl_flags_* and LTO_DECL_FLAG_* respectively.

2008-12-02  Diego Novillo  <dnovillo@google.com>

	* Makefile.in (install-lto-wrapper): New.
	(install): Use it.

2008-12-02  Doug Kwan  <dougkwan@google.com>
	
	* lto-cgraph.c (maybe_redirect_inlined_node): New.
	(output_edge): Add new parameter SET.  Redirect an inlined callee
	which is outside of SET to its master clone.  Fix-up INLINE_FAILED
	if callee is redirected.
	(output_cgraph): Redirect an inlined callee which is outside of SET to
	its master clone.  Adjust call to output_edge for new parameter.

2008-12-02  Rafael Avila de Espindola  <espindola@google.com>

	* collect2 (main): Set lto_mode to LTO_MODE_NONE if -plugin is given.

2008-12-01  Rafael Avila de Espindola  <espindola@google.com>

	* Makefile.in (MOSTLYCLEANFILES, native): Add lto-wrapper$(exeext)
	(lto-wrapper$(exeext)): New.
	(lto-wrapper.o): New.
	* collect2.c (maybe_run_lto_and_relink): Execute lto-wrapper.
	(collect_execute): Add flags argument. Pass flags to pex_run. Update
	all callers.
	* collect2.h (collect_execute): Add flags argument.
	* gcc.c (main): Set the COLLECT_LTO_WRAPPER environment variable.
	* lto-wrapper.c: New.
	* tlink.c (tlink_execute): Update call to collect_execute.

2008-11-29  Diego Novillo  <dnovillo@google.com>

	* timevar.def (TV_IPA_LTO_GIMPLE_IO): Rename from
	TV_IPA_LTO_OUT.  Update all users.
	(TV_IPA_LTO_DECL_IO): New.
	(TV_IPA_LTO_CGRAPH_IO): New.
	(TV_LTO): New.
	(TV_WHOPR_WPA): New.
	(TV_WHOPR_LTRANS): New.
	(TV_WHOPR_WPA_FIXUP): New.
	* lto-cgraph.c (pass_ipa_lto_cgraph): Use TV_IPA_LTO_CGRAPH_IO.
	* lto-wpa-fixup.c (pass_ipa_lto_wpa_fixup): Use TV_WHOPR_WPA_FIXUP.
	* passes.c (execute_ipa_summary_passes): Start and stop
	pass timers, if they are defined.
	(ipa_write_summaries_2): Likewise.
	(ipa_write_summaries_1): Likewise.
	* lto-section-out.c (pass_ipa_lto_finish_out): Replace
	timer TV_IPA_LTO_OUT with TV_IPA_LTO_DECL_IO.

2008-11-26  Cary Coutant  <ccoutant@google.com>

	* collect2.c (is_elf): New function.
	(scan_prog_file): Require LTO object to be in ELF format.

2008-11-26  Diego Novillo  <dnovillo@google.com>

	* lto-wpa-fixup.c (output_wpa_fixup): Also check the
	callees of a node to see if they are nothrow functions.
	(gate_wpa_fixup): Return true if flag_ltrans is set.

2008-11-26  Simon Baldwin  <simonb@google.com>

	* lto-function-out.c (output_local_var_decl): If set, add assembler
	name to output stream.
	* lto-function-in.c (input_local_var_decl): Retrieve any assembler
	name from output stream, and if present set in result decl.

2008-11-25  Rafael Espindola  <espindola@google.com>

	* ipa-cp.c (ipcp_insert_stage): Skip inlined nodes.

2008-11-25  Simon Baldwin  <simonb@google.com>

	* toplev.c (default_tree_printer): Add handling for %E format.

2008-11-24  Doug Kwan  <dougkwan@google.com>

	* lto-function-out.c (output_var_init): Remove code to avoid
	multiple variable definitions in LTRANS files.
	(output_var_decl): Add code to avoid multiple variable definitions
	in LTRANS files.
	* lto-function-in.c (input_constructors_or_inits): Remove code to
	avoid multiple variable definitions in LTRANS files.
	(input_var_decl): Add code to avoid multiple variable definitions
	in LTRANS files.

2008-11-24  Rafael Espindola  <espindola@google.com>

	* ltrans-driver: Unset MAKEFLAGS, MAKEINFO and MAKELEVEL.

2008-11-20  Rafael Espindola  <espindola@google.com>
	    Diego Novillo  <dnovillo@google.com>

	* tree.c (reset_type_lang_specific): Set TYPE_BINFO to
	NULL.

2008-11-19  Doug Kwan  <dougkwan@google.com>

	* lto-symtab.c (external_aggregate_decl_p): New.
	(lto_symtab_compatible): Handle external aggregate declarations
	specially.

2008-11-19  Rafael Espindola  <espindola@google.com>

	* lto-cgraph.c (input_edge): Initialize callee->local.lto_file_data if
	we have a new node.
	* lto-symtab.c (lto_symtab_decl_def): Add file_data field.
	(lto_symtab_set_resolution_and_file_data): Renamed from
	lto_symtab_set_resolution. Record the file_data.
	(lto_symtab_merge_decl, lto_symtab_merge_fn): Add file_data argument.
	Update all uses.
	(lto_symtab_get_symtab_def): New.
	(lto_symtab_get_resolution): Use lto_symtab_get_symtab_def.
	(lto_symtab_get_file_data): New.
	* lto-tree-in.h (lto_symtab_merge_fn): Add file_data argument.
	Update all uses.
	(lto_symtab_get_file_data): New.

2008-11-18  Doug Kwan  <dougkwan@google.com>

	* lto.c (LTO_FIXUP_SUBTREE): New macro.
	(no_fixup_p, lto_fixup_common, lto_fixup_decl_minimal,
	lto_fixup_decl_common, lto_fixup_decl_with_vis,
	lto_fixup_decl_non_common, lto_fixup_field_decl, lto_fixup_type,
	lto_fixup_binfo): New functions.
 	(lto_fixup_tree): Handle missing cases in walk_tree.
	(lto_fixup_state): Go through all trees in all streams.

2008-11-18  Rafael Espindola  <espindola@google.com>
	    Diego Novillo  <dnovillo@google.com>

	* cgraphunit.c (ipa_passes): Move from... 
	(cgraph_optimize): ... here.
	* lto-cgraph.c (output_node): Write out node->lowered
	and node->analyzed.
	(input_overwrite_node): Read in node->lowered and
	node->analyzed.
	* ipa.c (cgraph_remove_unreachable_nodes): Clear
	node->local.disregard_inline_limits when removing a
	node.
	* passes.c (init_optimization_passes): Schedule
	pass_rebuild_cgraph_edges and pass_early_inline outside
	of pass_all_early_optimizations.  Document reason.

2008-11-17  Rafael Espindola  <espindola@google.com>

	* lto-cgraph.c (input_edge): Rename PREVAILING with
	PREVAILING_CALLEE.
	Add PREVAILING_CALLER.  Assert that caller->decl and its
	prevailing definition are the same.

2008-11-15  Diego Novillo  <dnovillo@google.com>

	* lto-symtab.c (lto_symtab_compatible): Tidy formatting.
	(lto_symtab_set_resolution): Likewise.
	(lto_symtab_get_resolution): Likewise.
	* lto-function-in.c (get_resolution): Likewise.
	* lto-cgraph.c (input_overwrite_node): Likewise.
	(input_node): Likewise.
	(input_cgraph): Likewise.

2008-11-12  Doug Kwan  <dougkwan@google.com>

	* cgraph.h (struct cgraph_node_set_element_def): Add AUX field.
	* lto-function-out.c (lto-utils.h): Include.
	(output_local_vars): New bitmap functions in lto-utils.c.
	(output_var_int, output_inits_in_decl_state,
	output_used_constructors_and_inits,
	output_remaining_constructors_and_inits,
	output_all_constructors_and_inits): New functions.
	(output_constructors_and_inits): Handle WPA mode specially.
	(lto_output): Do not output constructs and intis here.
	(output_var_decl): Promote file-scope static to global if necessary.
	* lto-function-in.c (lto-utils.h): Include.
	(input_constructors_or_inits): Read LTO var flags.
	* lto-header.h (lto_get_section_name): Remove prototype.
	* lto-section-in.c (lto-utils.h): Include.
	(bitmap.h): Remove include.
	(lto_section_out_obstack, function_body_in_file_p): Remove.
	(lto_mark_function_body_in_file, lto_function_body_in_file_p): Remove.
	* lto-section-in.h (lto_mark_function_body_in_file,
	lto_function_body_in_file_p): Remove prototype.
	* lto-wpa-fixup.c (lto-utils): Include.
	(wpa_fixup_obstack, wpa_fixup_obstack_initialized): Remove vars.
	(bitmap_alloc): Remove function.
	(lto_mark_nothrow_fndecl, output_wpa_fixup): Use bitmap functions
	in lto-utils.c instead.
	* lto-tree-out.h (output_constructor_and_inits): New prototype.
	* varasm.c (assemble_variable): Suppress output of variable in
	LTRANS mode if LTO_VAR_FLAG_SUPPRESS_OUTPUT is set for the var.
	* Makefile.in (OBJS-common): Add lto-utils.o
	(lto-function-in.o, lto-function-out.o, lto-section-in.o,
	lto-section-out.o, lto-wpa-fixup.o, varasm.o): Add lto-utils.h
	to dependencies.
	* lto-utils.c (File): New.
	* lto-utils.h (File): Same.
	* lto-section-out.c (lto-utils.h): Include.
	(function_decl_state): Renamed var to LTO_FUCNTION_DECL_STATES and
	make it global.
	(lto_section_out_obstack): Remove var.
	(lto_new_static_inline_states, lto_delete_static_inline_states,
	 produce_symtab):
	Use bitmap functions in lto-utils.c.
	(lto_get_section_name): Move to lto-utils.c.
	(record_function_out_decl_state, write_sysmbols_of_kind): Adjust for
	renaming of function_decl_states.
	(produce_asm_for_decls): Remove ATTRIBUTE_UNUSED annotation for SET.
	Call output_constructors_and_inits. Adjust for renaming of
	function_decl_states.
	* lto-section-out.h (lto_function_decl_states): New extern variable.
	declaration.

2008-11-10  Diego Novillo  <dnovillo@google.com>

	* lto-function-in.c (lto_init_eh): Call
	dwarf2out_frame_init, if needed.

2008-11-09  Diego Novillo  <dnovillo@google.com>

	* lto-function-in.c: Include libfuncs.h.
	(lto_eh_runtime_type): Move from lto/lto-lang.c
	(lto_init_eh): Likewise.
	Set flag_exceptions and call init_eh.
	(input_eh_regions): Call lto_init_eh once if an EH table
	is found.
	* Makefile.in (lto-function-in.o): Add dependency on
	libfuncs.h.

2008-11-06  Cary Coutant  <ccoutant@google.com>

	* tree-pretty-print.c (dump_generic_node): Guard against NULL
	TREE_TYPE and TYPE_METHOD_BASETYPE.

2008-11-06  Rafael Espindola  <espindola@google.com>

	* lto-cgraph.c (output_node): Make some code unconditional.
	(input_node): Make some code unconditional.
	(input_cgraph_1): Make some code unconditional.

2008-11-06  Rafael Espindola  <espindola@google.com>

	* cgraphunit.c (ipa_passes): Don't use execute_regular_ipa_pass_list.
	* ipa-pure-const.c (write_summary): Assert that fs is not NULL.
	* passes.c (all_lto_gen_passes): New.
	(init_optimization_passes): Initialize all_lto_gen_passes.
	(execute_ipa_summary_passes): Make non-static.
	(ipa_write_summaries_1): Update to use ipa_write_summaries_2. Remove PASS
	argument. Update all uses.
	(ipa_write_summaries_2): New.
	(execute_regular_ipa_pass_list): Remove.
	* tree-pass.h (all_lto_gen_passes): New.
	(execute_regular_ipa_pass_list): Remove.
	(execute_ipa_summary_passes): New.

2008-11-05  Rafael Espindola  <espindola@google.com>

	Mainline merge @141575.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2008-11-04 Rafael Espindola  <espindola@google.com>

	* tree.c (reset_type_lang_specific): Set TYPE_METHODS of RECORD_TYPE to
	NULL_TREE.

2008-10-31  Doug Kwan  <dougkwan@google.com>

	* lto-cgraph.c (input_nodE): Fix test so that output_node and
	input_node handle optional fields under the same condition.

2008-10-30  Doug Kwan  <dougkwan@google.com>

	* lto-symtab.c (lto_same_type_p): Handle the case in which both
	array types have NULL TYPE_DOMAIN.
	* lto-function-out.c (copy_function): Copy tree vectors in decl
	states verbatim.

2008-10-30  Diego Novillo  <dnovillo@google.com>

	* collect2.c (maybe_run_lto_and_relink): Fix call to
	putenv.

2008-10-30  Simon Baldwin  <simonb@google.com>

	* collect2.c (maybe_run_lto_and_relink): Set environment variable
	WPA_SAVE_LTRANS=1 if debug.

2008-10-29  Doug Kwan  <dougkwan@google.com>

	* lto-symtab.c (New file): Move from up from lto sub-directory.
	* lto-cgraph.c (lto-tree-in.h): New include
	(input_overwrite_node, input_node, input_edge, input_cgraph_1,
	input_cgraph): Move from back from lto/lto-lang.c to here.
	* lto-tree-in.h (lto_symtab_clear_resolution): New prototype.
	* langhooks.c (lhd_input_cgraph): Remove.
	* langhooks.h (struct lang_hooks_for_lto): Remove INPUT_CRAPH hooks.
	* Makefile.in (PLUGIN_API_H, LTO_TREE_IN_H): New vars.
	(OBJS-common): Include lto-symtab.o
	(lto-cgraph.o): Add LTO_TREE_IN_H in dependency.
	(lto-function-in.o): Ditto.
	(lto-symtab.o): New rule.
	(GTFILES): Add lto-symtab.c
	* langhooks-def.h (lhd_input_cgraph): Remove prototype.
	(LANG_HOOKS_INPUT_GRAPH): Remove macro.
	(LANG_HOOKS_LTO): Remove LANG_HOOKS_INPUT_CGRAPH from initializer.

2008-10-28  Doug Kwan  <dougkwan@google.com>

	* gcc.c (invoke_as): Do not invoke assembler if -fwpa is given
	in command line.

2008-10-24  Cary Coutant  <ccoutant@google.com>

	* lto-section-out.c (lto_record_common_node): For array types,
	record the underlying type.

2008-10-23 Rafael Espindola  <espindola@google.com>

	* ipa-pure-const.c (node_duplication_hook_holder,
	node_removal_hook_holder): Remove.
	(get_function_state, set_function_state): Use DECL_UID.
	(duplicate_node_data, remove_node_data): Remove.
	(generate_summary): Don't use the removed functions. Iterate over
	funct_state_vec and free the states.

2008-10-22  Diego Novillo  <dnovillo@google.com>
	    Rafael Espindola  <espindola@google.com>

	* lto-function-in.c (get_resolution): Handle weak
	definitions.
	(input_function_decl): Tidy.

2008-10-22 Rafael Espindola  <espindola@google.com>

	* passes.c (execute_all_ipa_transforms): New.
	(execute_one_pass): Don't call execute_one_ipa_transform_pass.
	* tree-optimize.c (tree_rest_of_compilation): Call
	execute_all_ipa_transforms.
	* tree-pass.h (execute_all_ipa_transforms): New.

2008-10-22 Rafael Espindola  <espindola@google.com>

	* tree.c (reset_decl_lang_specific): Clear DECL_CONTEXT of inline
	functions.

2008-10-22 Rafael Espindola  <espindola@google.com>

	* Make-lang.in (lto/lto-lang.o): Update dependencies.
	* lto-lang.c: Include lto/common.h and lto-tree-in.h.
	(input_overwrite_node): Don't call cgraph_mark_needed_node.
	(input_node): Just read the node. Don't update it to reflect that
	another node for the same decl might have been read.
	(input_edge): Don't create an edge if the caller has been preempted.
	Make sure the callee is the prevailing decl.
	(input_cgraph_1): Remove nodes corresponding to preempted decls.
	* lto.c (lto_main): Read the cgraph before calling lto_fixup_decls.

2008-10-22 Rafael Espindola  <espindola@google.com>

	* ipa-struct-reorg.c (create_new_alloc_sites): Properly insert the
	newly created statements.

2008-10-22 Rafael Espindola  <espindola@google.com>

	* ipa-pure-const.c (finish_state): Remove.

2008-10-21  Diego Novillo  <dnovillo@google.com>

	* lto-function-in.c (lto_input_function_body): Tidy some formatting.
	* lto-header.h: Likewise.
	* lto-section-in.c: Likewise.
	* lto-stream-debug.c: Likewise.
	* lto-section-out.c: Likewise.

2008-10-21  Diego Novillo  <dnovillo@google.com>

	* lto-section-in.c (lto_debug_in_fun): Guard against empty
	stream debug sections.

2008-10-21 Rafael Espindola  <espindola@google.com>

	* cgraphunit.c (ipa_passes): Use execute_regular_ipa_pass_list.
	* passes.c (execute_ipa_pass_list): Don't run
	execute_ipa_summary_passes.
	(execute_regular_ipa_pass_list): New.

2008-10-21 Rafael Espindola  <espindola@google.com>

	* cgraphunit.c (ipa_passes): call execute_ipa_pass_list on
	all_regular_ipa_passes.
	* passes.c (all_regular_ipa_passes): New.
	(all_ipa_passes): Rename to all_small_ipa_passes.
	(init_optimization_passes): Init all_regular_ipa_passes.
	(ipa_write_summaries,ipa_read_summaries,
	ipa_write_summaries_of_cgraph_node_set): Use all_regular_ipa_passes.
	* tree-pass.h (all_regular_ipa_passes): New.
	(all_ipa_passes): Rename to all_small_ipa_passes.

2008-10-17  Diego Novillo  <dnovillo@google.com>

	* lto-function-in.c (input_imported_decl): New.
	(input_tree_operand): Handle IMPORTED_DECL.
	* lto-function-out.c (output_function_decl): Remove handling
	of DECL_INLINE.
	(output_imported_decl): New.
	(output_tree): Handle IMPORTED_DECL.
	* lto-tags.h (enum LTO_tags): Add LTO_imported_decl.
	* lto-tree-flags.def: Handle IMPORTED_DECL.

2008-10-16  Diego Novillo  <dnovillo@google.com>

	Mainline merge @141167.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2008-10-16  Simon Baldwin  <simonb@google.com>

	* langhooks.c: (lhd_print_error_function): Avoid accessing
	TREE_CODE(block) where block is NULL.

2008-10-14  Diego Novillo  <dnovillo@google.com>

	* lto-function-out.c (output_bb): Fix generation of EH
	region numbers when transitioning outside a region.
	* lto-function-in.c (input_var_decl): Do not force
	TREE_STATIC on global symbols.
	Handle TREE_PUBLIC decls even if they have a context.

2008-10-13  Ollie Wild  <aaw@google.com>

	* c.opt (flto): Switch variable name to flag_lto.
	(fwhopr): New option.
	* collect2.c (enum lto_mode_d): Rename LTO_MODE_WPA to LTO_MODE_WHOPR.
	(lto_o_file): Remove.
	(lto_o_files): New variable.
	(collect_exit): Replace lto_o_file with lto_o_files.
	(handler): Replace lto_o_file with lto_o_files.
	(maybe_run_lto_and_relink): Add support for -fwhopr.
	(main): Replace -fwpa with -fwhopr.
	(maybe_unlink_list): New function.
	* gcc.c (gcc_lto_option_t): Remove.
	(lto_single): New variable.
	(LINK_COMMAND_SPEC): Add flto and fwhopr.  Remove link_lto_options.
	(cc1_non_lto_options): Rename as cc1_options.
	(cc1_options): Remove.
	(lto1_options): Remove.
	(link_lto_options): Remove.
	(invoke_lto_single): Replace lto-option with lto-single.  Add -flto.
	Replace lto1_options with cc1_options.
	(static_specs): Remove cc1_non_lto_options, lto1_options, and
	link_lto_options.
	(static_spec_functions): Replace lto-option with lto-single.
	(process_command): Set lto_single.  Remove cases for -flto, -fwpa, and
	-fltrans.
	(lto_option_spec_function): Remove.
	(lto_single_spec_function): New function.
	* c-opts.c (c_common_post_options): Add -flto/-fwhopr validation.
	* flags.h (flag_generate_lto): New variable declaration.
	* toplev.c (flag_generate_lto): New variable definition.

2008-10-10  Diego Novillo  <dnovillo@google.com>

	* opts.c (decode_options): Remove error message about -g
	-flto.

2008-10-10  Doug Kwan  <dougkwan@google.com>

	* toplev.c (announce_function): Use DECL_ASSEMBLER_NAME
	instead of DECL_NAME and lang_hooks.decl_printable_name.

2008-10-09  Diego Novillo  <dnovillo@google.com>

	* lto-function-out.c (output_tree): If EXPR is
	char_type_node and -funsigned-char is used, emit
	unsigned_char_type_node.

2008-10-09  Doug Kwan  <dougkwan@google.com>

	* gimple-low.c (gimple_try_catch_may_fallthru): Check for empty
	clean-up GIMPLE sequence.

2008-10-08 Rafael Espindola  <espindola@google.com>

	* lto-tree-in.h (lto_symtab_get_resolution): New.

2008-10-07 Rafael Espindola  <espindola@google.com>

	* cgraph.h (LTO_cgraph_tags, LCC_NOT_FOUND): Moved from lto-cgraph.c.
	(LTO_cgraph_tag_names): declare.
	* langhooks-def.h (lhd_input_cgraph, LANG_HOOKS_INPUT_CGRAPH): New.
	(LANG_HOOKS_LTO): Add LANG_HOOKS_INPUT_CGRAPH.
	* langhooks.c (lhd_input_cgraph): New.
	* langhooks.h (lang_hooks_for_lto): Add input_cgraph.
	* lto-cgraph.c (LTO_cgraph_tags, LCC_NOT_FOUND, input_overwrite_node,
	input_node, input_edge, input_cgraph_1): Remove.
	(LTO_cgraph_tag_names): Make in non-statitc.
	(input_cgraph): Just call lang_hooks.lto.input_cgraph.

2008-10-06  Diego Novillo  <dnovillo@google.com>

	* gcc.c (cc1_options, lto1_options): Remove -O2 from
	-flto.
	* passes.c (ipa_read_summaries_1): Use the gating
	function to decide if a pass should be executed.
	* lto-section-out.c (gate_lto_out): Return true if
	in_lto_p is set.
	* collect2.c (maybe_run_lto_and_relink): Do not force
	-O2.

2008-10-03 Rafael Espindola  <espindola@google.com>

	* lto-function-in.c (global_vector_fixup) Remove. Remove all calls.

2008-10-02  Ollie Wild  <aaw@google.com>

	* c.opt (flto): Moved from common.opt.  Remove RejectNegative.
	* common.opt (flto): Moved to c.opt.
	(fltrans): Moved to lto/lang.opt.
	(fwpa): Moved to lto/lang.opt.
	* opts.c (common_handle_option): Remove -fltrans and -fwpa validation.

2008-10-02 Rafael Espindola  <espindola@google.com>

	* lto-function-in.c (global_vector_fixup): Removed node argument.
	Use lto_symtab_prevailing_decl. Update all uses.
	* lto-tree-in.h (lto_symtab_merge_var, lto_symtab_merge_fn): Return
	void. Update all uses.
	(lto_symtab_prevailing_decl): New.

2008-09-30  Doug Kwan  <dougkwan@google.com>

	* lto-symtab.c (lto_symbol_overwrite_decl): Check for change in
	exception attribute and remember decl for fix-up.
	(lto_symtab_merge_decl): Remove incorrect code do to a previous
	merge error.  Check for change in exception attribute and
	remember decl for fix-up.

2008-09-30 Rafael Espindola  <espindola@google.com>

	* lto-function-in.c (input_tree): Remove slot argument. Return a tree.
	(input_field_decl, input_function_decl, input_var_decl, input_parm_decl,
	input_result_decl, input_type_decl, input_label_decl,
	input_namespace_decl, input_translation_unit_decl, input_binfo,
	input_type, input_tree_operand): Use new input_tree signature.
	* lto-tree-in.h (input_tree): Update signature.

2008-09-30 Rafael Espindola  <espindola@google.com>

	* lto-function-in.c (get_resolution): Assert the decl is not
	DECL_ABSTRACT.
	(input_function_decl): Don't merge DECL_ABSTRACT function decls.

2008-09-30 Rafael Espindola  <espindola@google.com>

	* lto-function-in.c (vec_tree_ptr, lto_fixups): Remove.
	(global_vector_enter): Remove the need_fixups argument.
	(global_vector_fixup): Just update globals_index and free the old node.
	Do nothing else.
	(input_field_decl, input_const_decl, input_function_decl,
	input_var_decl, input_parm_decl, input_result_decl,
	input_type_decl, input_label_decl, input_namespace_decl,
	input_translation_unit_decl, input_binfo, input_type): Update call to
	global_vector_enter.
	(input_tree_operand): Don't assert on TREE_VISITED.
	(input_tree): Don't assert on TREE_VISITED.

2008-09-29  Doug Kwan  <dougkwan@google.com>

	* lto-function-out.c (output_gimple_stmt): Remove special
	case code for GIMPLE_CHANGE_DYNAMIC_TYPE.  Use the general
	code to handle this gimple code.
	* lto-function-in.c (input_gimple_stmt): Ditto.

2008-09-28  Diego Novillo  <dnovillo@google.com>

	* lto-function-out.c (output_type_ref): Do not call
	LTO_DEBUG_TOKEN.
	(output_type_list): Remove.  Update all callers.
	(get_eh_types_for_runtime): New.
	(output_eh_region): Call it.
	(output_expr_operand): Call output_type_ref when EXPR is
	a type.
	* lto-function-in.c (input_type_ref): Do not call
	LTO_DEBUG_TOKEN.
	(input_eh_region): Call add_type_for_runtime after
	reading type lists.
	Call input_expr_operand to read type lists.
	* except.c (add_type_for_runtime): Declare extern.
	(lookup_type_for_runtime): Likewise.
	* lto/lto-lang.c (lto_eh_runtime_type): New.
	(lto_init_eh): Set lang_eh_runtime_type to lto_eh_runtime_type.

2008-09-26  Doug Kwan  <dougkwan@google.com>

	* lto-wpa-fixup.c (output_wpa_fixup): Check for NULL
	lto_nothrow_fndecls.

2008-09-26  Doug Kwan  <dougkwan@google.com>

	* tree-pass.h (pass_ipa_lto_wpa_fixup): New pass.
	* lto-header.h (enum lto_section_type): Add LTO_section_wpa_fixup.
	(lto_mark_nothrow_fndecl): New prototype.
	(lto_fixup_nothrow_decls): Ditto.
	* lto-wpa-fixup.c: New file.
	* Makefile.in (OBJS-common): Add lto-wpa-fixup.o
	(lto-wpa-fixup.o): New rule.
	* passes.c (init_optimization_passes): Add pass_ipa_lto_wpa_fixup.
	* lto-section-out.c (lto_get_section_name): Handle new enum
	LTO_section_wpa_fixup.

2008-09-26 Rafael Espindola  <espindola@google.com>

	* lto-function-in.c (vec_tree_ptr, lto_fixups): New.
	(global_vector_fixup, input_tree): Use lto_fixups instead of
	DECL_LANG_SPECIFIC.

2008-09-25  Ollie Wild  <aaw@google.com>

	* doc/invoke.texi (fltrans-output-list): Document new option.

2008-09-25  Doug Kwan  <dougkwan@google.com>
	    Ollie Wild  <aaw@google.com>

	* ipa-prop.c (ipa_propagate_indirect_call_infos): Skip if flag_wpa is
	set.

2008-09-24  Doug Kwan  <dougkwan@google.com>

	* lto-cgraph.c (output_edge): Output indirect_call flag.
	(input_overwrite_node): Correct a comment.
	(input_edge): Read indirect_call flag.

2008-09-24  Diego Novillo  <dnovillo@google.com>

	* lto-function-in.c (input_var_decl): Do not abort if
	DEBUG_EXPR is set.

2008-09-24  Diego Novillo  <dnovillo@google.com>

	* collect2.c (enum lto_mode_d): Remove final comma.
	(lto_mode): Change type to enum lto_mode_d.

2008-09-24  Diego Novillo  <dnovillo@google.com>

	* tree.c (reset_type_lang_specific): Clear cached values
	for types replaced with unsigned_char_type_node.

2008-09-24  Doug Kwan  <dougkwan@google.com>

	* lto-function-out.c (output_gimple_stmt): Handle gimple code
	GIMPLE_CHANGE_DYNAMIC_TYPE.
	* lto-function-in.c (input_gimple_stmt): Handle new tag
	LTO_gimple_change_dynamic_type.  Handle gimple code
	GIMPLE_CHANGE_DYNAMIC_TYPE specially.
	* lto-tree-tags.def (LTO_gimple_change_dynamic_type): New tag name.
	Map tag to GIMPLE_CHANGE_DYNAMIC_TYPE.
	* lto-tags.h (enum LTO_tags): New enum LTO_gimple_change_dynamic_type.

2008-09-24  Doug Kwan  <dougkwan@google.com>
	    Ollie Wild  <aaw@google.com>

	* collect2.c (LTO_MODE_NONE, LTO_MODE_LTO, LTO_MODE_WPA): New enums.
	(lto_mode): New variable.
	(maybe_run_lto_and_relink): Handle the -fwpa option.
	(main): Handle the -fwpa option.
	* gcc.c (link_lto_options): Replace -flto with -fwpa.
	* doc/invoke.texi (fwpa): Add reference to -fltrans-driver.
	(fltrans-driver): New option.

2008-09-24 Rafael Espindola  <espindola@google.com>

	* lto-function-in.c (get_resolution): New.
	(input_function_decl): Pass resolution to lto_symtab_merge_var and
	lto_symtab_merge_fn.
	* lto-tree-in.h: Include plugin-api.h.
	(data_in): Add globals_resolution and globals_resolution_size.
	(lto_symtab_merge_var, lto_symtab_merge_fn): Add a resolution argument.

2008-09-24  Diego Novillo  <dnovillo@google.com>

	* tree.c: Include tree-pass.h.
	(reset_type_lang_specific): If flag_signed_char is false,
	make char_type_node a clone of unsigned_char_type_node
	and fix TYPE_MAIN_VARIANTs of types that have
	char_type_node as their main variant.
	(reset_decl_lang_specific): Tidy.
	(free_lang_specifics): Make private.
	Change return type.  Update all users.
	(gate_free_lang_specifics): New.
	(pass_ipa_free_lang_specifics): New.
	* tree.h (free_lang_specifics): Remove.
	* tree-pass.h (pass_ipa_free_lang_specifics): Declare.
	* lto-function-out.c (output_function): Remove stale
	debugging code.
	(lto_output): Do not call free_lang_specifics.
	* opts.c (complain_wrong_lang): Do not complain if
	running lto1.
	* tree-ssa-pre.c (create_expression_by_pieces): Add
	asserts for NEW_SETS (block) and AVAIL_OUT (block).
	* Makefile.in (tree.o): Depend on tree-pass.h
	* passes.c (init_optimization_passes): Schedule
	pass_ipa_free_lang_specifics.
	* lto-section-out.c (lto_get_common_nodes): Tidy comment.

2008-09-24  Simon Baldwin  <simonb@google.com>

	* tree.c (reset_lang_specific): Rename to reset_decl_lang_specific,
	add call to reset_lang_specifics langhook.

2008-09-23  Diego Novillo  <dnovillo@google.com>

	* configure.ac: Add type check for intptr_t.
	* configure: Regenerate.

2008-09-23  Rafael Espindola  <espindola@google.com>

	* lto-section-out.c (write_symbol_vec): Don't write RESULT_DECL to the
	symbol table.

2008-09-23  Diego Novillo  <dnovillo@google.com>

	* lto-cgraph.c (lto_cgraph_encoder_encode): Change REF
	type to intptr_t.
	(lto_cgraph_encoder_lookup): Change return type to intptr_t.
	Update all users.

2008-09-23  Diego Novillo  <dnovillo@google.com>

	* lto-cgraph.c (lto_cgraph_encoder_encode): Change return
	type to void.
	Fix 64-bit issues with REF's type.
	(lto_cgraph_encoder_lookup): Change return type to
	HOST_WIDE_INT.  Update all users.

2008-09-23 Rafael Espindola  <espindola@google.com>

	* lto-section-out.c (write_symbol_vec): Skip non TREE_PUBLIC nodes.

2008-09-22  Doug Kwan  <dougkwan@google.com>

	* cgraphbuild.c (reset_inline_failed): New function.
	* cgraph.c (cgraph_clone_edge): Take an additional parameter STMT_UID.
	(cgraph_clone_node): Adjust call to cgraph_clone_edge.
	(cgraph_clone_input_node): New.
	(struct cgraph_node_set_hash_access_def, cgraph_node_set_hash_access):
	Remove types.
	(hash_cgraph_node_set_element): Adjust to use cgraph_node_set_element.
	type instead of cgraph_node_set_hash_access.
	(eq_cgraph_node_set_element): Ditto.
	(cgraph_node_set_add): Ditto.
	(cgraph_node_set_remove): Ditto.
	(cgraph_node_set_find): Ditto.
	* cgraph.h (struct cgraph_node_set_element_def): Add new field NODE.
	(cgraph_clone_edge): Add new parameter for STMT_UID in prototype.
	(cgraph_clone_input_node, reset_inline_failed): New prototypes.
	* lto-function-out.c (output_function_decl): Fake DECL attributes
	if it is foreced to be static inline.
	* lto-function-in.c (input_function): Go over all clones during
	call-stmt fix-up.
	* cgraphunit.c (verify_cgraph_node): Do not check for CFG if
	running in WPA mode.
	(cgraph_copy_node_for_versioning): Adjust call to cgraph_clone_edge.
	* lto-cgraph.c (struct lto_cgraph_encoder_def): New type.
	(struct lto_cgraph_node_ref): Ditto.
	(lto_cgraph_encoder_new, lto_cgraph_encoder_delete_ref,
	lto_cgraph_encoder_delete, lto_cgraph_encoder_encode,
	lto_cgraph_encoder_lookup, lto_cgraph_encoder_deref,
	lto_cgraph_encoder_size): New functions.
	(output_edge): Add new parameter ENCODER.  Output references to both
	caller and callee of an edge. Also output INLINE_FAILED.
	(output_node): Remove parameter BOUNDARY_P.  Add new parameters
	ENCODER and SET.  Handle boundary nodes and clones specially.
	Output global node states in WPA mode.  Do not output edges.
	(output_cgraph_verify_node):  Handle clones.
	(output_cgraph):  Changle algorithm.  Output all nodes first then
	followed by all edges.  Use an lto_cgraph_encoder to handle node
	pointers.  Remove code to compute set of boundary nodes.
	(input_node): New function.
	(input_edge): New function.
	(input_cgraph_1): Factor out node and edge code input code into
	seperate functions.
	* ipa-inline.c (cgraph_clone_inlined_nodes): Format to fit in 80
	columns.
	(cgraph_decide_recursive_inlining): Ditto.
	(cgraph_decide_inlining): Check for LTRANS mode.
	(inline_generate_summary): Ditto.
	* lto-section-in.c (bitmap.h): New include.
	(lto_section_out_obstack; function_body_in_file_p): New vars.
 	(lto_create_simple_input_block): Return NULL if successful instead of
	SEGV fault.
	(lto_mark_function_body_in_file): New.
	(lto_function_body_in_file_p): Ditto.
	* lto-section-in.h (lto_mark_function_body_in_file): New prototype.
	(lto_function_body_in_file_p): Ditto.
	* tree-inline.c (copy_bb): Adjust call to cgraph_clone_edge.
	* Makefile.in (lto-cgraph.o): Add pointer-set.h to dependencies.
	* passes.c (do_per_function): Do not free dominance information if
	running in WPA mode.
	(ipa_write_summaries): Provide valid static inline states.
	* lto-section-out.c (forced_static_inline, lto_section_out_obstack):
	New vars.
	(lto_new_static_inline_states, lto_delete_static_inline_states,
	lto_force_function_static_inline, lto_force_functions_static_inline,
	lto_forced_static_inline_p): New functions.
	(produce_symtab): Set up and tear down obstack.
	* lto-section-out.h (lto_new_static_inline_states,
	lto_delete_state_inline_states, lto_force_function_static_inline,
	lto_force_functions_static_inline, lto_forced_static_inline_p): New
	prototypes.

2008-09-19  Doug Kwan  <dougkwan@google.com>

	* gcc.c (gcc_lto_option_t): New type.
	(current_lto_option): New variable.
	(lto_single_spec_function): Remove and is replaced by ..
	(lto_option_spec_function): New function.
 	(LINK_COMMAND_SPEC): Use link_lto_option spec instead of just
	passing the -flto flag.
	(cc1_options): Separate non-LTO related parts into ..
	(cc1_non_lto_options): Non-LTO related options shared by all FEs.
	(lto1_options): New spec for lto FE.
	(link_lto_options): New spec for handling LTO flags in linker.
	(invoke_lto_single): Re-format to fit in 80 column.  Replace
	lto-single with lto-option.
	(static_specs): Add cc1_non_lto_options, lto1_options and
	link_lto_options.
	(static_spec_function): Replace lto-single with lto-option.
	(process_command): Handle -flto, -flto-single, -fwpa and -fltran
	by setting current_lto_option and not passing it to subprocess
	unconditionally..
	* ipa-inline.c (cgraph_decide_inlining): Do not remove hook if
	LTO is running in WPA mode.
	* opts.c (common_handle_option): Handle -flto, -fltrans and -fwpa.
	* common.opt: (flto): Reject negative.
	(fltrans): New option.
	(fwpa): Reject negative. Update description.
	* doc/invoke.text (fwpa): Update.
	(fltrans): New flag.

2008-09-18  Rafael Avila de Espindola  <espindola@google.com>

	* lto-function-in.c (flags_length_for_code): Change size to
	NUM_TREE_CODES.
	* lto-function-out.c (expr_to_tag): Change size to
	NUM_TREE_CODES.
	(lto_static_init): Change the size of lto_flags_needed_for and
	lto_types_needed_for to NUM_TREE_CODES.

2008-09-17  Ollie Wild  <aaw@google.com>

	* doc/invoke.text (fwpa): Fix obvious typos.

2008-09-17  Paolo Bonzini  <bonzini@gnu.org>
	    Rafael Avila de Espindola  <espindola@google.com>

	* Makefile.in (TREE_H, s-alltree, c-lang.o): Remove c-common.def
	* c-common.c (c_expand_expr, c_staticp): Remove.
	* c-common.def: Delete.
	* c-common.h (emit_local_var, c_staticp, COMPOUND_LITERAL_EXPR_DECL,
	COMPOUND_LITERAL_EXPR_DECL_EXPR, c_expand_expr): Remove.
	* c-gimplify.c (gimplify_compound_literal_expr,
	optimize_compound_literals_in_ctor): Remove.
	(c_gimplify_expr): Remove COMPOUND_LITERAL_EXPR handling.
	* c-objc-common.h (LANG_HOOKS_EXPAND_EXPR, LANG_HOOKS_STATICP): Remove.
	* c-semantics.c (emit_local_var): Remove.
	* langhooks-def.h (lhd_expand_expr, LANG_HOOKS_EXPAND_EXPR): Remove.
	* langhooks.c (lhd_expand_expr): Remove.
	* langhooks.h (LANG_HOOKS_DEF): Remove LANG_HOOKS_EXPAND_EXPR.
	* expr.c (expand_expr_real_1): Move COMPOUND_LITERAL_EXPR
	handling from c-semantics.c; don't call into langhook.
	(expand_expr_addr_expr_1): Check that we don't get non-GENERIC trees.
	* gimplify.c (gimplify_compound_literal_expr,
	optimize_compound_literals_in_ctor): Move from c-gimplify.c.
	(gimplify_init_constructor): Call optimize_compound_literals_in_ctor.
	(gimplify_modify_expr_rhs, gimplify_expr): Handle COMPOUND_LITERAL_EXPR
	as was done in c-gimplify.c.
	* tree.c (staticp): Move COMPOUND_LITERAL_EXPR handling from c_staticp.
	* tree.h (COMPOUND_LITERAL_EXPR_DECL, COMPOUND_LITERAL_EXPR_DECL_EXPR):
	Move from c-common.h.
	* tree.def (COMPOUND_LITERAL_EXPR): Move from c-common.def.
	* doc/c-tree.texi (Expression nodes): Refer to DECL_EXPRs
	instead of DECL_STMTs.

2008-09-16  Rafael Avila de Espindola  <espindola@google.com>

	Mainline merge @140208.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2008-09-16  Diego Novillo  <dnovillo@google.com>

	* tree.c (reset_type_lang_specific): Re-implement
	skipping of unwanted fields in TYPE_FIELDS and
	TYPE_METHODS to avoid corrupting tree chains in
	other types that share these lists.

2008-09-16  Rafael Avila de Espindola  <espindola@google.com>

	* lto-function-in.c (input_const_decl): Pass decl to
	global_vector_enter.

2008-09-12  Diego Novillo  <dnovillo@google.com>

	* lto-tags.h (enum LTO_tags): Add LTO_gimple_predict
	* lto-tree-tags.def: Handle it.
	(CONST_DECL): Add decl_flag2, addressable_flag,
	public_flag, readonly_flag and static_flag.
	(CONSTRUCTOR): Add readonly_flag and volatile_flag.
	* lto-function-in.c (input_gimple_stmt): Handle GIMPLE_PREDICT.
	(input_const_decl): New.
	(input_tree_operand): Call it.
	* lto-function-out.c (output_gimple_stmt): Handle GIMPLE_PREDICT.
	(output_expr_operand): Clarify why CONST_DECLs should not
	show up.
	(output_const_decl): New.
	(output_tree): Call it.

2008-09-12  Bill Maddox  <maddox@google.com>

	* lto-function-in.c (input_var_decl): Enter DECL in the
	global vector even if it's only partially read.

2008-09-11  Diego Novillo  <dnovillo@google.com>

	* lto-function-out.c (output_eh_cleanup): Remove.
	(output_eh_try): Remove.
	(output_eh_catch): Remove.
	(output_eh_allowed): Remove.
	(output_eh_must_not_throw): Remove.
	(output_eh_region): New.
	(output_eh_regions): Call it.
	(output_bb): Emit EH region information for statements.
	* lto-function-in.c: Do not include ctype.h.
	(input_tree, input_type_tree, input_tree_operand): Move
	forward declarations to the top of the file.
	(fixup_eh_region_pointers): New.
	(input_eh_region): New.
	(input_eh_regions): Call them.
	(input_bb): Read EH information for every statement.
	* lto-tree-tags.def (LTO_eh_table_cleanup2,
	LTO_eh_table_cleanup3, LTO_eh_table_try2,
	LTO_eh_table_try3, LTO_eh_table_catch2,
	LTO_eh_table_catch3, LTO_eh_table_allowed2,
	LTO_eh_table_allowed3, LTO_eh_table_must_not_throw2,
	LTO_eh_table_must_not_throw3): Remove.
	(LTO_eh_table_throw0, LTO_eh_table_throw1): Add.
	* lto-tags.h: Likewise.
	* except.c (struct eh_region, struct eh_status): Move ...
	* except.h: ... here.
	(output_eh_cleanup_t, output_eh_try_t, output_eh_catch_t,
	output_eh_allowed_t, output_eh_must_not_throw_t,
	output_eh_records): Remove.
	* Makefile.in (GTFILES): Include except.h before except.c

2008-09-11  Rafael Avila de Espindola  <espindola@google.com>

	* lto-function-out.c (lto_static_init):  Allocate enough space in
	lto_types_needed_for and lto_flags_needed_for.

2008-09-09  Bill Maddox  <maddox@google.com>

	* lto-tags.h (enum LTO_tags): Add new tags LTO_decl_expr and
	LTO_compound_literal_expr.
	* lto-tree-tags.h:  Add MAP_EXPR_TAG and SET_NAME calls for
	new LTO tags.  Cleanup comments.
	* lto-tree-flags.def: Add START_EXPR_CASE/END_EXPR_CASE calls
	for COMPOUND_LITERAL_EXPR.
	* lto-function-out.c (static expr_to_tag): Size array to
	include all tree codes, including front-end specific ones.
	* lto-function-in.c (static flags_length_for_code): Size array
	to include all tree codes, including front-end specific ones.

2008-09-08  Diego Novillo  <dnovillo@google.com>

	* tree-ssa-pre.c (gate_pre): Re-enable.

	Bring from mainline @140111

	2008-09-08  Richard Guenther  <rguenther@suse.de>

		PR tree-optimization/37421
		* tree-ssa-sccvn.c (visit_copy): Make sure to fully
		valueize the RHS.

2008-09-08  Diego Novillo  <dnovillo@google.com>

	* tree-ssa-pre.c (gate_pre): Disable.

2008-09-07  Diego Novillo  <dnovillo@google.com>

	* lto-function-out.c (output_expr_operand) <RESULT_DECL>: Call
	lto_output_var_decl_index.
	(output_result_decl): Do not output DECL_INITIAL.
	* lto-function-in.c (input_expr_operand) <SSA_NAME>: Do
	not call add_referenced_var.
	<VAR_DECL>: Also handle RESULT_DECL.
	<RESULT_DECL>: Remove.
	(input_bb): Call find_referenced_vars_in after reading
	statements and PHI nodes.
	(lto_read_body): Do not add every symbol to referenced
	variables.
	Tidy formatting.
	(input_result_decl): Do not read DECL_INITIAL.
	(input_tree): Tidy formatting.
	* lto-cgraph.c: Tidy formatting.
	* lto-section-in.h: Likewise.
	* tree-dfa.c (find_referenced_vars): Factor calls to
	find_vars_r ...
	(find_referenced_vars_in): ... here.
	* tree-flow.h (find_referenced_vars_in): Declare.
	* passes.c (init_optimization_passes): Move
	pass_ipa_lto_finish_out as the last IPA pass.
	* lto-section-out.c (write_symbol_vec): Handle
	RESULT_DECL.

2008-09-04  Bill Maddox  <maddox@google.com>

	* lto-function-in.c (input_var_decl): Use decl_function_context
	rather than DECL_FILE_SCOPE_P to determine whether a VAR_DECL
	is global.

2008-09-04  Doug Kwan  <dougkwan@google.com>

	* cgraph.c (cgraph_inlined_failed_string): Cast REASON from
	implementation-defined integer type to unsigned before comparison.

2008-09-04  Diego Novillo  <dnovillo@google.com>

	* cgraph.c (cgraph_inlined_failed_string): Fix always
	true comparison.

2008-09-03  Doug Kwan  <dougkwan@google.com>

	* cgraphbuild.c (initialize_inline_failed): Use cgraph_inline_failed_t
	enums instead of reason strings.
	* cgraph.c (cgraph_create_edge): Same.
	(cgraph_inline_failed_string): New function.
	* cgraph.h (cgraph_inline_failed_t): New enum type.
	(cgraph_inline_failed_string): New prototype.
	(struct cgraph_edge): Change type of INLINED_FAILED from constant
	char pointer to cgraph_inline_failed_t.
	(cgraph_inline_p): Adjust prototype to use cgraph_inline_failed_t.
	(cgraph_default_inline_p): Ditto.
	* gcc/cgraphunit.c (cgraph_inline_p): Change type of parameter REASON
	to cgraph_inline_failed_t pointer.
	* cif-code.def: New file.
	* ipa-inline.c (cgraph_mark_inline_edge): Use an enum instead of a
	reason string.
	(cgraph_check_inline_limits): Change type of REASON to pointer to
	cgraph_inline_failed_t.  Replace reason strings with enums.
	(cgraph_default_inline_p): Ditto.
	(cgraph_recursive_inlining_p): Ditto.
	(update_caller_keys): Change type of FAILED_REASON to
	cgraph_inline_failed_t.
	(cgraph_set_inline_failed): Change type of REASON to pointer to
	cgraph_inline_failed_t.  Call cgraph_inline_failed_string to
	convert enums to strings for text output.
	(cgraph_decide_inlining_of_small_function): Change FAILED_REASON
	to be of type cgraph_inline_failed_t.  Replace reason strings with
	enums.  Call cgraph_inline_failed_string to covert enums
	to strings for text output.
	(cgraph_decide_inlining): Replace reason strings with enums.
	(cgraph_decide_inlining_incrementally): Change type of FAILED_REASON
	to cgraph_inline_failed_t type.  Call cgraph_inline_failed_string
	for text output.
	* tree-inline.c (expand_call_inline): Change type of REASON
	to cgraph_inline_failed_t.  Replace reason strings with enums.
	Call cgraph_inline_failed_string for text output.
	* Makefile.in (CGRAPH_H): Add cif-code.def to dependencies.
	(cgraph.o): Ditto.

2008-09-03  Rafael Avila de Espindola  <espindola@google.com>

	* lto-section-out.c (produce_asm_for_decls): Free function_decl_states
	after calling produce_symtab.

2008-09-01  Bill Maddox  <maddox@google.com>

	* lto-cgraph.c (output_node): Stream out 'needed' flag.
	(input_overwrite_node): Stream in 'needed' flag.
	* lto-function-in.c (input_expr_operand, input_tree_operand):
	Remove call to cgraph_mark_needed_node.

2008-08-29  Diego Novillo  <dnovillo@google.com>

	* lto-tree-flags.def: Add readonly_flag for
	FUNCTION_DECLs.

2008-08-28  Diego Novillo  <dnovillo@google.com>

	* cgraph.c (hash_cgraph_node_set_element,
	eq_cgraph_node_set_element, cgraph_node_set_remove): Fix
	type casts for C++ warnings.

2008-08-28  Diego Novillo  <dnovillo@google.com>

	Mainline merge @139194.

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

	* lto-cgraph.c: Tuplify.
	* lto-function-in.c (set_line_info): Tuplify.
	(input_expr_operand): Remove handlers for LABEL_EXPR,
	CALL_EXPR, ASM_EXPR, RETURN_EXPR, GIMPLE_MODIFY_STMT,
	SWITCH_EXPR, OMP_CONTINUE and OMP_RETURN.
	Simplify handling of COND_EXPRs.
	(input_tree_operand): Likewise.
	(MAP_STMT_TAG): Define.
	(input_local_var_decl): Remove #if 0 code.
	(make_new_block): Tuplify.
	(input_phi): Tuplify.
	(input_ssa_names): Tuplify.
	(input_gimple_stmt): New.
	(input_bb): Call it.
	Tuplify.
	(input_function): Tuplify
	(lto_static_init_local):
	* lto-function-out.c (START_CLASS_CASE): Rename argument
	to prevent C++ warnings.
	(END_CLASS_CASE): Likewise.
	(END_EXPR_CASE): Likewise.
	(output_tree_flags): Tuplify.
	(output_record_start): Remove static declaration.
	(output_local_decl_ref): Rename local variable NEW to
	avoid C++ warnings.
	(output_eh_cleanup): Rename argument CATCH to avoid C++
	warnings.
	(output_expr_operand): Rename local variable CLASS to
	avoid C++ warnings.
	Remove handlers for LABEL_EXPR, COND_EXPR, CALL_EXPR,
	RESX_EXPR, RETURN_EXPR, GIMPLIFY_MODIFY_STMT,
	SWITCH_EXPR, OMP_CONTINUE and OMP_RETURN.
	(output_phi): Tuplify.
	(output_gimple_stmt): New.
	(output_bb): Call it.
	Tuplify
	(lto_static_init): Tuplify.
	(MAP_STMT_TAG): New.
	(GIMPLE_CODES): Define.
	(START_CLASS_CASE): Rename argument to avoid C++
	warnings.
	(END_CLASS_CASE): Likewise.
	(END_EXPR_CASE): Likewise.
	(output_tree): Rename local variable CLASS to avoid C++
	warnings.
	Remove handlers for CASE_LABEL_EXPR, COND_EXPR,
	CALL_EXPR, ASM_EXPR, RETURN_EXPR, GIMPLE_MODIFY_STMT,
	SWITCH_EXPR, OMP_CONTINUE and OMP_RETURN.
	* lto-section-in.c: Do not include ctype.h.
	* lto-section-out.c (lto_output_uleb128_stream): Remove
	#if 0 code.
	* lto-tags.h (enum LTO_tags): Add LTO_null,
	LTO_gimple_asm, LTO_gimple_assign, LTO_gimple_call,
	LTO_gimple_cond, LTO_gimple_goto, LTO_gimple_label,
	LTO_gimple_phi, LTO_gimple_return, LTO_gimple_resx and
	LTO_gimple_switch.
	Remove LTO_gimple_modify_stmt, LTO_phi_node, LTO_cond_expr0
	and LTO_cond_expr1.
	Add LTO_cond_expr.
	* gimple.c (gimple_size): Export.  Add handler for
	GIMPLE_PHI.
	(gimple_alloc_stat): Export.
	* gimple.h (gimple_size, gimple_alloc,
	gimple_alloc_stat): Declare.
	(mark_addressable): Declare.
	(gimple_reset_mem_ops): New.

2008-08-27  Doug Kwan  <dougkwan@google.com>

	* cgraph.c (hash_cgraph_node_set_element, eq_cgraph_node_set_element,
	cgraph_node_set_new, cgraph_node_set_add, cgraph_node_set_remove,
	cgraph_node_set_find, dump_cgraph_node_set, debug_cgraph_node_set):
	New functions.
	* cgraph.h (cgraph_node_ptr): New type for vector functions.
	(struct cgraph_node_set_def): New type.
	(cgraph_node_set) New type. Also declare vector functions.
	(struct cgraph_node_set_element_def): New type.
	(cgraph_node_set_element): Ditto.
	(cgraph_node_set_iterator): New iterator type.
	(cgraph_node_set_new, cgraph_node_set_find, cgraph_node_set_add,
	cgraph_node_set_remove, dump_cgraph_node_set,
	debug_cgraph_node_set): New prototypes.
	(csi_end_p, csi_next, csi_node, csi_start, cgraph_node_in_set_p,
	cgraph_node_set_size): New inlines.
	* tree-pass.h (struct cgraph_node_set_def): New decl to avoid
	including cgraph.h.
	(struct ipa_opt_pass): Add a struct cgraph_node_set_def pointer
	type parameter to WRITE_SUMMARY.
	(ipa_write_summaries_of_cgraph_node_set): New prototype.
	* lto-function-out.c (lto-section-in.h): New include.
	(copy_function): New function.
	(lto_output): Add new parameter for set of nodes written.
	* ipa-reference.c (write_node_summary_p): New function from
	refactoring.
	(write_summary): Add new parameter for set of nodes written. Also
	replace repeated code with calls to write_node_summary_p.
	* lto-cgraph.c (output_edge): Do not look at CALL_STMT of EDGE in
	WPA mode.
	(output_node): Add new parameter BOUNDARY_P. Fake availability and
	omit out-going edges for when BOUNDARY_P is set.
	(output_cgraph_verify_node): New function factored from...
	(output_cgraph): Use it.  Also add a new parameter SET.  Compute
	the boundary of SET and output boundary nodes specially.
	* ipa-pure-const.c (write_summary): Add parameter for set of nodes
	written.
	* ipa-inline.c (cgraph_default_inline_p): Do not check for CFG of
	functions in WPA mode.
	* common.opt (flag_wpa): New flag.
	* Makefile.in (lto-function-out.o): Add variable LTO_SECTION_IN_H
	to dependencies.
	* passes.c (ipa_write_summaries_1): Add new parameter SET and pass
	it to IPA passes.
	(ipa_write_summaries): Create a new set for the whole call-graph
	and pass it to ipa_write_summaries_1.
	(ipa_write_summaries_of_cgraph_node_set): New function.
	* lto-section-out.c (lto_get_out_decl_state): Add comments.
	(produce_asm_for_decls): Add new parameter SET.
	* doc/invoke.texi (fwpa): Document new option.

2008-08-26  Bill Maddox <maddox@google.com>

	* tree-gimple.h (mark_addressable): Declare extern.
	* lto-function-in.c (input_expr_operand,
	input_tree_operand): Read RESX_EXPR operand properly.
	* gimplify.c (make_addressable): Export.
	* stmt.c (expand_asm_operands): Add comments regarding
	dubious use of lang_hooks.mark_addressable.

2008-08-26  Doug Kwan  <dougkwan@google.com>

	* (lto_decl_stream_e_t): New type.
	* Makefile.in (lto-section-out.o): Add BITMAP_H.
	* lto-section-out.c (bitmap.h): New include.
	(write_symbol_vec): Renamed from produce_symtabl_1.  Also take a new
	parameter SEEN to avoid duplicate symbols.
	(write_symbols_of_kind): New.
	(produce_symtab): Remove FUNCTIONS and VARIABLES parameters.
	Now also look at out-decl states of functions for symbols.

2008-08-25  Bill Maddox <maddox@google.com>

	* tree.c (reset_type_lang_specific): Clear TYPE_CONTEXT of
	TYPE_DECL nodes.  Clear TYPE_LANG_SLOT_1 where applicable.
	(set_asm_name): New function.
	(reset_lang_specific): Clear DECL_CONTEXT.  Add/update comments.
	(free_lang_specifics): Apply set_asm_name to declarations.  Apply
	reset_type_lang_specific last, after asm names are set.
	* lto-function-out.c (output_local_var_decl): Allow for DECL_SIZE
	to be null
	(lto_output): Invoke free_lang_specifics before output of functions.
	(output_type_decl): Verify context is null and don't stream it out.
	(output_type): Assert that binfo only is present for record or union.
	Verify context is null and don't stream it out.	
	* lto-function-in.c (input_local_var_decl): Allow for null DECL_SIZE.
	(input_function_decl): Don't rely on set_decl_assembler_name langhook
	to make static function names unique.
	(input_var_decl): Don't rely on set_decl_assembler_name langhook
	to make static variable names unique.  Use DECL_FILE_SCOPE_P to test
	declaration for file scope.
	(input_type_decl):  Don't read DECL_CONTEXT.
	(input_type): Don't read TYPE_CONTEXT.
	* lto-section-out.c (produce_asm_for_decls): Remove call to
	free_lang_specifics, moved to lto_input.

2008-08-25  Rafael Avila de Espindola  <espindola@google.com>

	* lto-section-out.c (produce_symtab_1): Use DECL_ASSEMBLER_NAME
	instead of DECL_NAME.

2008-08-22  Doug Kwan  <dougkwan@google.com>

	* cgraphbuild.c	(initialize_inline_failed): Use cgraph_edge field
	CALL_STMT_CANNOT_INLINE_P instead of looking at the corresponding
	CALL_STMT of a cgraph_edge.
	* cgraph.c (cgraph_create_edge): Copy CALL_STMT_CANNOT_INLINE_P
	of cgraph_edge struct from CALL_STMT if CALL_STMT is not NULL.
	* cgraph.hraph.h (struct cgraph_edge) Reduce size of LOOP_NEST
	by one bit to make room for a new filed CALL_STMT_CANNOT_INLINE_P.
	* tree-gimple.h (CALL_CANNOT_INLINE_P): Remove macro.
	* lto-cgraph.c (output_edge): Write CALL_STMT_CANNOT_INLINE_P.
	(input_cgraph_1): Read CALL_STMT_CANNOT_INLINE_P.
	* ipa-inline.c (initialize_inline_failed): Use cgraph_edge field
	CALL_STMT_CANNOT_INLINE_P instead of looking at the corresponding
	CALL_STMT of a cgraph_edge.
	(cgraph_decide_inlining_of_small_function): Ditto.
	(cgraph_decide_inlining): Ditto.
	(cgraph_decide_inlining_incrementally): Ditto.

2008-07-22  Rafael Avila de Espindola  <espindola@google.com>

	* lto-section-out.c (produce_symtab_1): Write comdat.

2008-08-21  Doug Kwan  <dougkwan@google.com>

	* lto-function-out.c (create_output_block): Replace code to initialize
	LOCAL_DECL_HASH_TABLE with a call the lto_init_tree_ref_encoder.
	Re-format a comment to make it fit in 80 columns.
 	(destroy_output_block): Replace code to delete LOCAL_DECL_HASH_TABLE
	and LOCAL_DECLS with a call to lto_destroy_tree_ref_encoder.
	(output_local_decl_ref): Adjust for change in parameters of
	lto_output_decl_index.  Remove code for pushing NAME into
	LOCAL_DECLS.
 	(output_local_var_decl): Use inline lto_tree_ref_encoder_get_tree
	instead of manipulating the internals of a tree ref encoder.
 	(output_local_decl): Same.
	(output_local_vars): Use inline lto_tree_ref_encoder_size instead of
	accessing the internals of a tree ref encoder.
	(produce_asm): Same.
 	(lto_output): Use a separate out-decl state for the function being
	output.
	* ipa-reference.c (read_summary): Call lto_file_decl_data_get_fn_decl
	and lto_file_decl_data_get_var_decl instead of accessing internals of
	an lto_file_decl_data struct.
	* lto-function-in.c (input_type_ref_1): Use a lto_file_decl_data
	struct accessor instead of accessing the internals of
	an lto_file_decl_data_struct.
	(input_expr_operand): Use lto_file_decl_data accessors instead of
	accessing internals of an lto_file_decl_data struct.
	(lto_read_body): Use per-function decl state to decode tree
	references used in function body.  Use an lto_file_decl_data
	accessor instead of accessing internals of the struct.
	* lto-cgraph.c (input_cgraph_1): Use lto_file_decl_data_get_fn_decl
	instead of accessing internals of an lto_file_decl_data struct.
	* lto-header.h (LTO_DECL_STREAM_TYPE, LTO_DECL_STREAM_FIELD_DECL,
	LTO_DECL_STREAM_FN_DECL, LTO_DECL_STREAM_VAR_DECL,
	LTO_DECL_STREAM_TYPE_DECL, LTO_DECL_STREAM_NAMESPACE_DECL,
	LTO_N_DECL_STREAMS): New enums.
	* lto-section.h (lto_decl_header): Use DECL_STATE_SIZE to replace
	NUM_FIELD_DECLS, NUM_FN_DECLS, NUM_VAR_DECLS, NUM_TYPE_DECLS,
	NUM_NAMESPACE_DECLS and NUM_TYPES.
	* ipa-pure-const.c (read_summary): Use lto_fiel_decl_data_get_fn_decl
	instead of accessing internals of an lto_file_decl_data struct.
	* lto-section-in.c (lto_new_in_decl_statE): New function.
	(lto_delete_in_decl_state): Same.
	(lto_hash_in_decl_state): New hash table helper.
	(lto_eq_in_decl_state): Same.
	(lto_get_function_in_decl_state): New function.
	* lto-section-in.h (struct lto_tree_ref_table): New.
	(struct lto_in_decl_state) Same.
 	(struct lto_file_decl_data): Group decl and type streams into
	an lto_in_decl_state struct GLOBAL_DECL_STATE. Add new field
	CURRENT_DECL_STATE to point to the currently active in-decl state.
	Remove FIELD_DECLS, FN_DECLS, VAR_DECLS, TYPE_DECLS, NAMESPACE_DECLS,
	TYPES, NUM_FIELD_DECLS, NUM_FN_DECLS, NUM_VAR_DECLS, NUM_TYPE_DECLS,
	NUM_NAMESPACE_DECLS and NUM_TYPES.  Add new field FUNCTION_DECL_STATES
	to map functions to their in-decl states.
	(DEFINE_DECL_STREAM_FUNCS): New macro for definiting accessors for
	streams in an lto_in_decl_state struct.  Use it.
	(lto_new_in_decl_state): New prototype.
	(lto_delete_in_decl_state): Same.
	(lto_hash_in_decl_state): Same.
	(lto_eq_in_decl_state): Same.
	(lto_get_function_in_decl_state): Same.
	* lto-tree-out.h (struct output_block): Replace LOCAL_DECL_HASH_TABLE,
	NEXT_LOCAL_DECL_INDEX and LOCAL_DECLS with an lto_tree_ref_encoder
	LOCAL_DECL_ENCODER.
	* Makefile.in (LTO_SECTION_OUT_H): New.
	(lto-cgraph.o): Use LTO_SECITON_OUT_H instead of lto-section-out.h.
	(lto-function-out.o) : Same.
	(lto-section-out.o) : Same.
	(ipa-pure-const.o): Same.
	(ipa-reference.o): Same.
	(passes.o): Add lto-header.h and LTO_SECTION_OUT_H.
	* passes.c (lto-header.h, lto-section-out.h): New includes.
 	(ipa_write_summaries_1): Create and use an lto_out_decl_state
	for the current output file.  Delete the state after use.
	* lto-section-out.c (pointer-set.h): New include.
	(decl_state_stack): New var.
	(function_decl_states): Same.
	(lto_output_decl_index): Take an lto_tree_ref_encoder as parameter
	instead using separate parameters for a hash table and a pointer
	to the next index.  Also push NAME to tree vector in ENCODER if
	NAME is new.
	(lto_output_field_decl_index): Adjust for new interface and semantics
	of lto_output_decl_index.
	(lto_output_fn_decl_index): Same.
	(lto_output_namespace_decl_index): Same.
	(lto_output_var_decl_index): Same.
	(lto_output_type_decl_index): Same.
	(lto_output_type_ref_index): Same.
	(lto_new_out_decl_state): New.
	(lto_delete_out_decl_state): New.
 	(lto_get_out_decl_state): Return the currently active decl state.
	Remove code for creating a decl state.
	(lto_push_out_decl_state): New.
	(lto_pop_out_decl_state): New.
	(lto_record_function_out_decl_state): New.
	(lto_record_common_node): New.
	(lto_get_common_nodes): New.
	(preload_common_nodes): Adjust to work with lto_get_common_nodes.
	(preload_common_nodes): Call lto_get_common_nodes instead of computing
	(write_global_stream): Change to accept an lto_tree_ref_encoder
	instead of a tree vector as parameter.
	(write_global_references): Same.
	(lto_output_decl_state_streams): New.
	(lto_output_decl_state_refs): New.
	(lto_out_decl_state_written_size): New.
 	(produce_asm_for_decls): Change code for the update in
	lto_decl_header.  Also write out global and per-function
	out-decl states.  Remove code for deleting out-decl state.
	* lto-section-out.h (lto-section.h): New include.
	(struct lto_tree_ref_encoder): New.
 	(struct lto_out_decl_state): Consolidate separate fields for
	decl and type streams into an array of lto_tree_ref_encoders
	STREAMS.  Add new field FN_DECL.
	(lto_out_decl_state_ptr): New typer.  Use it to declare vector
	functions.
	(lto_init_tree_ref_encoder): New inline.
	(lto_destroy_tree_ref_encoder): Same.
	(lto_tree_ref_encoder_size): Same.
	(lto_tree_ref_encoder_get_tree): Same.
	(lto_output_decl_index): Change parameters.
	(lto_new_out_decl_state): New prototype.
	(lto_delete_out_decl_state): Same.
 	(lto_get_out_decl_state): Same.
	(lto_push_out_decl_state): Same.
	(lto_pop_out_decl_state): Same.
	(lto_record_function_out_decl_state): Same.
	(lto_get_common_nodes): Same.
 
2008-08-21  Doug Kwan  <dougkwan@google.com>

	* lto-function-out.c (create_output_block): Use XCNEW instead of
	xcalloc.
	(destroy_output_block): Delete MAIN_HASH_TABLE if present.
	* lto-section-out.c: Move call to destroy_output_block to be after
	all use of OB.  Remove call to htab_delete of MAIN_HASH_TABLE of OB.

2008-08-21  Rafael Espindola  <espindola@google.com>

	* aclocal.m4: Include ../config/libelf.m4.
	* configure.ac: Use AC_CHECK_LIBELF.
	* configure: Update.
	* lto-section-out.c: include lto-symtab.h
	(ld_plugin_symbol_kind): Remove.
	(ld_plugin_symbol_visibility): Remove.
	(produce_symtab_1): Update to use lto-symtab.h

2008-08-20  Bill Maddox <maddox@google.com>

	* lto-tree-flags.def: Stream private_flag for
	PARM_DECL and RESULT_DECL.
	* lto-function-out.c (output_type): Use debug token
	"fields" for unions as well as records.
	* lto-function-in.c (typedef tree_ptr): New.
	Also, declared vec.h-style vector of same.
	(global_vector_enter): Added need_fixups parameter,
	and code to mark vector entry for backpatching.
	(global_vector_fixup): Implement backpatching of
	references to the replaced vector entry.  Add comments.
	Call ggc_free on the replaced node.
	(input_field_decl, input_function_decl, input_var_decl,
	input_parm_decl, input_result_decl, input_type_decl,
	input_namespace_decl, input_translation_unit_decl,
	input_binfo, input_type): Use new API for reading
	backpatchable fields.
	(input_type): Use debug token "fields" for unions
	as well as records.
	(input_tree_operand): Assert if reference is resolved
	to a backpatchable node without providing a location
	to backpatch.  Add comment.  Allow for backpatching
	of operands of TREE_VEC, TREE_LIST, and various
	expression operators.
	(input_tree): Added slot parameter, providing location
	to backpatch.  Added code to register this location
	for backpatching if needed.
	(input_type_tree): Made static.
	* lto-tree-in.h (input_tree): Added slot parameter
	to function prototype.

2008-08-20  Doug Kwan  <dougkwan@google.com>

	* lto-section-out.c (produce_symtab_1): Fix a 32-bit bootstrap
	failure due to a missing cast.

2008-08-20  Rafael Avila de Espindola  <espindola@google.com>

	* lto-header.h (lto_section_type): Add LTO_section_symtab.
	* lto-section-out.c: Include stdint.h.
	(lto_get_section_name): Handle LTO_section_symtab.
	(ld_plugin_symbol_kind): New.
	(ld_plugin_symbol_visibility): New.
	(produce_symtab_1): New.
	(produce_symtab): New.
	(produce_asm_for_decls): Call produce_symtab.

2008-08-20  Rafael Avila de Espindola  <espindola@google.com>

	Backport revision 39233 from trunk.

2008-08-19  Rafael Avila de Espindola  <espindola@google.com>

	Backport revisions 138310, 138347 and 139100 from trunk.

2008-08-19  Rafael Avila de Espindola  <espindola@google.com>

	* lto-tree-flags.def (CONSTRUCTOR): Add constant_flag.

2008-08-14  Rafael Avila de Espindola  <espindola@google.com>

	* lto-function-in.c (input_constructors_or_inits): Input aliases.
	* lto-function-out.c (output_constructors_and_inits): Output aliases.
	* tree.h (alias_pair): Moved from varasm.c.
	(alias_pairs): Moved from varasm.c.
	* varasm.c (alias_pair): Move to tree.h.
	(alias_pairs): Move to tree.h.

2008-08-12  Simon Baldwin  <simonb@google.com>

	* lto-section-out.c (produce_asm_for_decls): Move htab_delete()
	call up.

2008-08-09  Bill Maddox <maddox@google.com>

	* tree-pretty-print.c (dump_generic_node): Add
	missing break after case.
	* tree.c (reset_type_lang_specific): Rename parameter
	decl to type.  Strip members other than FIELD_DECL
	from record field list.  Strip members other than
	FUNCTION_DECL from record method list.
	(free_lang_specifics): Force FE-independent definition
	of fileptr_type_node.
	* lto-function-out.c (output_expr_operand): Abort on
	unhandled CONST_DECL nodes.
	(output_local_type): Abort if this bit-rotted code is
	configured in and used.
	(output_function): Call output_type_ref_1 to handle
	either local or global type reference correctly.
	(global_vector_debug): New function.
	(output_field_decl, output_function_decl, output_var_decl,
	output_parm_decl, output_result_decl, output_type_decl,
	output_namespace_decl, output_label_decl,
	output_translation_unit_decl, output_binfo, output_type):
	Improved streamer debug tracing, including calls to
	global_vector_debug and LTO_DEBUG_TOKEN.
	(output_type_decl): Do not stream out DECL_INITIAL.
	(output_namespace_decl): Do not stream out DECL_ALIGN.
	(output_type): Do not stream out TYPE_UID.  Handle record
	fields separately from other overloaded uses of TYPE_VALUES.
	(output_global_record_start_1): New function.
	(output_global_constructor): Use output_global_record_start_1.
	Fix statement indentation.
	(output_tree): Check for unhandled types and decls.
	Abort on unhandled CONST_DECL.  Improve error diagnostic
	for language-specific tree codes.
	* lto-function-in.c: Removed extra space before array subscripts.
	(input_expr_operand): Handle type references.  Abort on
	unexpected CONST_DECL.
	(global_vector_enter): Cast pointer to void * for printing.
	Show symbolic name for tree code of the new node in debug trace.
	(global_vector_fixup): Cast pointer to void * for printing.
	(input_field_decl, input_function_decl, input_var_decl,
	input_parm_decl, input_result_decl, input_type_decl,
	input_label_decl, input_namespace_decl, input_translation_unit_decl,
	input_binfo, input_type): Add calls to LTO_DEBUG_TOKEN.
	(input_type_decl): Do not read DECL_INITIAL.
	(input_type): Do not read TYPE_UID.  Handle record fields
	separately from other uses of TYPE_VALUES.
	(input_tree_operand): Abort on unexpected CONST_DECL.
	(input_type_tree): Allow for NULL_TREE as type.
	* opts.c (common_handle_option): Do not force debug info
	generation when -flto is specified.
	* lto-section-out.c (preload_common_node): Do not return
	prematurely if the type has been seen before.  Check for
	expected values of fileptr_type_node and its main variant.

2008-07-30  Bill Maddox  <maddox@google.com>

	* lto-function-in.c (input_function_decl): Save the
	old assembler name before renaming static functions.
	* lto-tree-in.h (struct data_in): Removed field global.
	Tidy up comments.
	* lto-section-in.c (struct lto_renaming_slot): New type.
	(hash_name, eq_name, renaming_slot_free, lto_create_renaming_table,
	lto_record_renamed_decl, lto_original_decl_name): New functions.
	* lto-section-in.h (struct lto_file_decl_data): Add field
	renaming_hash_table.  Fix comments.
	(lto_create_renaming_table, lto_record_renamed_decl,
	lto_original_decl_name): Declare.
	* lto-section-out.c: Remove marker comments.
	
2008-07-28  Kenneth Zadeck <zadeck@naturalbridge.com>

	Mainline merge @138147

2008-07-25  Diego Novillo  <dnovillo@google.com>
	    Bill Maddox  <maddox@google.com>

	* tree-pretty-print.c (dump_generic_node): Always call
	print_struct_decl for structures.
	* tree.c (free_lang_specifics): Force ptrdiff_type_node
	to be integer_type_node.
	* lto-function-out.c (output_tree): Reformat debug output.
	Call get_ref_idx_for.
	* lto-function-in.c (input_tree_operand): Reformat debug
	output.
	* lto-tree-out.h (struct output_block): Remove field
	next_main_index.
	* tree-flow.h (tree_node_can_be_shared): Declare.
	* tree-cfg.c (tree_node_can_be_shared): Declare extern.
	* lto-section-out.c: Remove includes of ctype.h and
	strings.h
	(get_ref_idx_for): Factor out of ...
	(preload_common_node): ... here.
	Call it.
	(preload_common_nodes): Add debugging output.
	* lto-section-out.h (preload_common_node): Declare.
	(get_ref_idx_for): Declare.

2008-07-23  Rafael Espindola  <espindola@google.com>

	Mainline merge @138073

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2008-07-22  Rafael Espindola  <espindola@google.com>

	* lto-function-in.c (lto_read_body): Read labels.
	* lto-function-out.c (create_output_block): Always allocate named_label_stream.
	Always create label_hash_table and local_decl_hash_table.
	Use XCNEW.
	(destroy_output_block): Always delete label_hash_table and
	local_decl_hash_table.
	Always free named_label_stream.
	Always clean debug_label_stream.
	Always free named_labels.
	(produce_asm): Always set num_local_decls, num_named_labels,
	num_unnamed_labels, named_label_size and
	debug_label_size.
	Always write named_label_stream and debug_label_stream.
	(output_constructors_and_inits): Output labels.

2008-07-15  Kenneth Zadeck <zadeck@naturalbridge.com>

	* tree-pass.h (pass_ipa_reference): Make into ipa_opt_pass.
	* ipa-reference.c (lto-section-in.h, lto-section-out.h): New includes.
	(init_function_info, generate_summary, write_summary,
	read_summary, propagate): New functions.
	(analyze_function):  Call init_function_info.
	(static_execute): Stripped into generate_summary and propagate.
	(pass_ipa_reference): Made into ipa_opt_pass.
	* lto-header.h (lto_section_type): Added LTO_section_ipa_reference.
	* ipa-pure-const.c (read_summary): Move call to init_state out of loop.
	* Makefile.in (ipa-reference.o): Add rules.
	* passes.c (init_optimization_passes): Reorder pass_ipa_reference.
	* lto-section-out.c (lto_get_section_name): Add .reference section.

2008-07-10  Bill Maddox  <maddox@google.com>

	* gcc/collect2.c (prefix_from_string): Fix c++ compatibility warnings.
	(maybe_run_lto_and_relink): Fix c++ compatibility warnings.
	* gcc/lto-function-in.c (input_type_ref_1): Fix c++ compatibility
	warnings.
	(canon_file_name): Fix c++ compatibility warnings.
	(input_expr_operand): Fix c++ compatibility warnings.
	(input_labels): Fix c++ compatibility warnings.
	(input_local_vars_index): Fix c++ compatibility warnings.
	(input_local_tree): Fix c++ compatibility warnings.
	(input_local_vars): Fix c++ compatibility warnings.
	(input_function): Fix c++ compatibility warnings.
	* gcc/lto-function-out.c (string_slot_free): Fix c++ compatibility
	warnings.
	(create_output_block): Fix c++ compatibility warnings.
	(output_label_ref): Fix c++ compatibility warnings.
	(produce_asm): Fix c++ compatibility warnings.
	(output_tree): Fix c++ compatibility warnings.
	* gcc/lto-section-out.c (lto_output_data_stream): Fix c++ compatibility
	warnings.
	(lto_output_decl_index): Fix c++ compatibility warnings.
	(lto_output_type_ref_index): Fix c++ compatibility warnings.
	(lto_destroy_simple_output_block): Fix c++ compatibility warnings.
	(lto_get_out_decl_state): Fix c++ compatibility warnings.
	(preload_common_node): Fix c++ compatibility warnings.
	(write_global_references): Fix c++ compatibility warnings.
	(produce_asm_for_decls): Fix c++ compatibility warnings.
	* gcc/lto-section-out.h (LTO_SET_DEBUGGING_STREAM): Fix c++
	compatibility warnings.

2008-07-10  Bill Maddox  <maddox@google.com>

	* lto-function-out.c (lto_static_init):
	Back out reset of lto_types_needed_for bit for
	TREE_BINFO nodes.
	* lto-function-in.c (input_binfo): Restore reading
	of flags and check for presence of line info.
	(input_tree_operand): Add test for tree code TREE_BINFO
	where we check for special handling of type and decl nodes.

2008-07-09  Kenneth Zadeck <zadeck@naturalbridge.com>
	Mainline merge @137631

	* configure: Regenerate.

2008-07-09  Rafael Espindola  <espindola@google.com>

	* lto-function-in.c (input_binfo): Don't read flags. Don't read line
	info.
	* lto_static_init (lto_static_init): Reset TREE_BINFO in
	lto_types_needed_for.

2008-07-02  Rafael Espindola  <espindola@google.com>

	* tree.c (reset_lang_specific): Remove local VAR_DECLs from
	DECL_DEBUG_EXPR of other VAR_DECLs.

2008-06-27  Bill Maddox  <maddox@google.com>

	* lto-function-out.c (output_function_decl):
	Write function_code and built_in_class fields.
	* lto-function-in.c (input_function_decl):
	Read function_code and built_in_class fields.

2008-06-27  Ollie Wild  <aaw@google.com>

	* lto-section-out.h (lto_begin_section): New function declaration.
	(lto_end_section): New function declaration.
	(lto_output_data_stream): New function declaration.
	* lto-section-out.c (lto_begin_section): New function.
	(lto_end_section): New function.
	(lto_write_stream): Modify lang_hooks call.  Remove free.
	(append_block): New function.
	(lto_output_1_stream): Replace block allocation with call to
	append_block.
	(lto_output_data_stream): New function.
	(lto_destroy_simple_output_block): Add header_stream.  Replace
	lang_hook calls with lto-section functions.
	(write_global_references): Add ref_stream.  Replace lang_hooks call
	with lto-section calls.
	(produce_asm_for_decls): Add header_stream.  Replace lang_hook calls
	with lto-section calls.
	* lto-function-out.c (langhooks.h): Remove include.
	(produce_asm): Add header_stream.  Replace lang_hook calls with
	lto-section calls.
	* langhooks.h (struct lang_hooks_for_lto): Rename write_section_data
	to append_data.  Add a block parameter.
	* langhooks-def.h (lhd_append_data): Rename from
	lhd_write_section_data.  Add a new parameter.
	(lhd_write_section_data): Rename to lhd_append_data.
	(LANG_HOOKS_APPEND_DATA): Rename from LANG_HOOKS_WRITE_SECTION_DATA.
	Change lhd_write_section_data to lhd_append_data.
	(LANG_HOOKS_WRITE_SECTION_DATA): Rename to LANG_HOOKS_APPEND_DATA.
	(LANG_HOOKS_LTO): Change LANG_HOOKS_WRITE_SECTION-DATA to
	LANG_HOOKS_APPEND_DATA.
	* langhooks.c (lhd_append_data): Rename from lhd_write_section_data.
	Add a block parameter.
	(lhd_write_section_data): Rename to lhd_append_data.

2008-06-27  Rafael Espindola  <espindola@google.com>

	Based on http://gcc.gnu.org/ml/gcc-patches/2007-11/msg00523.html
	and http://gcc.gnu.org/ml/gcc-patches/2008-03/msg00349.html

	* tree.h (remove_decl_from_map): New.
	* tree.c (decl_for_uid_map): New.
	(init_ttree): Initialize decl_for_uid_map.
	(make_node_stat): call insert_decl_to_uid_decl_map.
	(insert_decl_to_uid_decl_map): New.
	(remove_decl_from_map): New.
	(reset_type_lang_specific): Handle RECORD_TYPE.
	(reset_lang_specific): New.
	(free_lang_specifics): Call reset_lang_specific.

2008-06-26  Rafael Espindola  <espindola@google.com>

	* tree-ssa-forwprop.c
	(forward_propagate_addr_into_variable_array_index): Check if
	the size of an array is NULL.

2008-06-25  Rafael Espindola  <espindola@google.com>

	* calls.c (must_pass_in_stack_var_size_or_pad): Don't check if
	TYPE_SIZE is NULL.
	* expr.c (store_field): Don't check if TYPE_SIZE is NULL.
	* tree.c (reset_type_lang_specific): Set both TYPE_SIZE_UNIT
	and TYPE_SIZE or none of them. Don't set TYPE_MAX_VALUE to
	NULL. call set_min_and_max_values_for_integral_type.

2008-06-24  Rafael Espindola  <espindola@google.com>

	* gcc.c (cc1_options): add -flto if -flto-single is given.
	(default_compilers): remove redundant parts that were moved to
	cc1_options.

2008-06-23  Ollie Wild  <aaw@google.com>

	* lto-section-out.c (dwarf2asm.h): Remove include.
	(write_global_references): Replace dw2_asm_output_data calls with a
	single call to lang_hooks.lto.write_section_data.

2008-06-23  Bill Maddox  <maddox@google.com>

	* gcc.c: (lto_single): New variable.  Flag to indicate
	lto-single mode.
	(LINK_COMMAND_SPEC,cc1_options): Add support for
	lto-single mode.
	(invoke_lto_single): New constant.
	Specs string to run hidden lto1 pass.
	(default_compilers): Add support for lto-single
	mode in specs for C compilations.
	(static_specs): Add entry for invoke_lto_single.
	(process_command): Recognize -flto-single option.
	(handle_spec_predicate): Parse and invoke spec predicate,
	similar to spec funtion.
	(handle_braces): Implement conditional on spec predicates.
	(lto_single_spec_predicate): New function. Spec predicate
	to test for lto-single mode.

2008-06-23  Rafael Espindola  <espindola@google.com>

	* calls.c (must_pass_in_stack_var_size): handle a NULL TYPE_SIZE.
	* expr.c (store_field): handle a NULL TYPE_SIZE.
	* tree.c (reset_type_lang_specific): set TYPE_SIZE_UNIT,
	TYPE_SIZE and TYPE_MAX_VALUE to NULL_TREE if they are not INTEGER_CST.

2008-06-18  Ollie Wild  <aaw@google.com>

	* langhooks-def.h (lhd_begin_section): New function declaration.
	(lhd_write_section): New function declaration.
	(lhd_end_section): New function declaration.
	(LANG_HOOKS_BEGIN_SECTION): New macro.
	(LANG_HOOKS_WRITE_SECTION_DATA): New macro.
	(LANG_HOOKS_END_SECTION): New macro.
	(LANG_HOOKS_LTO): New macro.
	(LANG_HOOKS_INITIALIZER): Add LANG_HOOKS_LTO.
	* langhooks.c (output.h): Add include.
	(saved_section): New static variable.
	(lhd_begin_section): New function.
	(lhd_write_section_data): New function.
	(lhd_end_section): New function.
	* langhooks.h (struct lang_hooks_for_lto): New structure.
	(struct lang_hooks): Add member lto.
	* lto-function-out.c (output.h): Remove include.
	(produce_asm): Call the lto.begin_section, lto.write_section_data, and
	lto.end_section language hooks.
	(lto_output): Remove saved_section and call to switch_to_section.
	* lto-section-out.c (output.h): Remove include.
	(lto_get_section): Remove function.
	(lto_write_stream): Call the lto.write_section_data language hook.
	(lto_destroy_simple_output_block): Call the lto.begin_section,
	lto.write_section_data, and lto.end_section language hooks.
	(produce_asm_for_decls): Call the lto.begin_section,
	lto.write_section_data, and lto.end_section language hooks.
	* lto-header.h (lto_get_section): Remove function declaration.

2008-06-17  Doug Kwan <dougkwan@google.com>
	* lto-section-in.c (lto_get_flags): Fix bug in mask computation.
	* lto-section-out.c (lto_set_flags): Same.

2008-06-14  Rafael Avila de Espindola  <espindola@google.com>

	* init.c (build_new_1): add nelts_for_type argument.
	(build_new): create nelts_for_type without a SAVE_EXPR.

2008-06-11  Diego Novillo  <dnovillo@google.com>

	Merge from lto-streamer sub-branch:

	2008-06-09  Bill Maddox  <maddox@google.com>

		* lto-tags.h: Add new tags LTO_local_type_ref
		and LTO_global_type_ref.  Split LTO_type_decl
		and LTO_field_decl into LTO_type_decl0, LTO_type_decl1,
		LTO_field_decl0, and LTO_field_decl1.
		* lto-tree-tags.h: Set names and tree code mappings for
		the new tags.
		* lto-function-out.c: Tidy comments and formatting.
		(output_record_start): Add forward declaration.
		(type_function_context): New function.
		(field_decl_is_local, type_decl_is_local): New functions.
		(output_type_ref_1): Write "local" (e.g., variably-modified)
		types to local_decls stream.
		(output_type_ref): Use "type_ref" as debug token to avoid
		confusing clash with use of "type" elsewhere.
		(output_local_decl_ref):  Update comment.
		(output_expr_operand): Cases for FIELD_DECL and TYPE_DECL
		now write "local" declarations to local_decls stream.
		(output_local_var):  Rename to output_local_var_decl.
		(output_local_var_decl): Remove code to set slot in
		local_decls_index, now handled by output_local_decl.
		(output_local_tree): New function.
		(output_local_field_decl, output_local_type_decl,
		output_local_type): New functions.
		(output_local_decl): New function.
		(output_field_decl): Use new tag LTO_field_decl1, to
		distinguish from "local" fields.
		(output_type_decl): Use new tag LTO_type_decl1, to
		distinguish from "local" fields.
		* lto-function-in.c: Tidy comments and formatting.
		(input_local_tree, input_local_var_decl, input_local_field_decl,
		input_local_type_decl, input_local_type):  Add
		forward declarations.
		(input_type_ref_1): Distinguish references to global or local
		declaration streams.
		(input_type_ref):  Use "type_ref" as debug token to avoid
		confusing clash with use of "type" elsewhere.
		(input_expr_operand):  Cases for FIELD_DECL and TYPE_DECL
		now read "local" declarations from local_decls stream.
		(input_local_tree): New function.
		(input_local_var): Rename to input_local_var_decl.
		(input_local_var_decl): Input record tag is now an argument.
		(input_local_field_decl, input_local_type_decl,
		input_local_type): New functions.
		(input_local_decl): New function.
		(input_local_vars): Call input_local_decl instead
		of input_local_var.
		(lto_static_init_local): Don't call
		add_referenced_var on non-vars.
		* lto-section-out.c (lto_hash_decl_slot_node,
		lto_eq_decl_slot_node): Use object pointer, not
		UID, as hash key.

	2008-06-04  Rafael Espindola  <espindola@google.com>

		* lto-function-out.c (output_tree): call error
		with the TREE_CODE name.

	2008-06-04  Ollie Wild  <aaw@google.com>

		* dwarf2out.c (dwarf2_called_from_lto_p): Remove.
		(current_fde): New function.
		(add_fde_cfi): Call current_fde.
		(lookup_cfa): Call curent_fde.
		(dwarf2out_end_epilogue): Call current_fde.
		(dwarf2out_switch_text_section: Call current_fde.
		(lto_void_type_die): Remove.
		(dwarf_attr_name): Declare static.  Remove
		flag_generate_lto check.

		(assign_symbol_name): Remove.
		(assign_symbol_names): Expand call to assign_symbol_name.
		(base_type_die): Replace
		DW_ATE_GNU_complex_unsigned and
		DW_ATE_GNU_complex_signed encodings with
		DW_ATE_lo_user.  Remove byte_size computation.
		Remove extra precision information.
		(may_reference_to_unused): Rename reference_to_unused.
		(rtl_for_decl_init): Rename calls to may_reference_to_unused.
		(convert_cfa_to_fb_loc_list): Call current_fde.
		(gen_subprogram_die): Remove flag_generate_lto and
		dwarf2_called_from_lto_p checks.
		(gen_variable_die): Remove context_die == comp_unit_die checks.
		(add_high_low_attributes): Remove
		dwarf2_called_from_lto_p check.
		(force_die_for_context): Remove.
		(containing_decl_for_block): Remove.
		(force_block_die): Remove.
		(force_decl_die): Expand call to force_die_for_context.  Remove
		context_die == comp_unit_die check.  Remove the removal of of
		DW_AT_DECLARATION.
		(force_type_die): Expand the force_die_for_context call.
		(force_field_die): Remove.
		(gen_decl_die): Remove the cgraph_global_info_ready check.
		(dwarf2out_init): Remove lto_void_type_die initialization.
		(dwarf2out_finish): Remove context assignment.
		(mark_die_used): Remove.
		(lto_init_ref): Remove.
		(lto_type_ref): Remove.
		(lto_var_ref): Remove.
		(lto_fn_ref): Remove.
		(lto_field_ref): Remove.
		(lto_typedecl_ref): Remove.
		(lto_namespacedecl_ref): Remove.
		* dwarf2out.h (dwarf2_called_from_lto_p): Remove.
		(dwarf_attr_name): Remove.
		(lto_out_ref): Remove.
		(lto_type_ref): Remove.
		(lto_var_ref): Remove.
		(lto_fn_ref): Remove.
		(lto_field_ref): Remove.
		(lto_typedecl_ref): Remove.
		(lto_namespacedecl_ref): Remove.
		* dwarf2.h (enum dwarf_type): Remove
		DW_ATE_GNU_complex_signed and
		DW_ATE_GNU_complex_unsigned.
		* lto-cgraph-in.c: Remove inclusion of
		dwarf2asm.h and dwarf2out.h.
		* lto-cgraph-out.c: Remove inclusion of
		dwarf2asm.h and dwarf2out.h.
		(lto_output_cgraph): Remove assignments to
		dwarf2_called_from_lto_p.
		* lto-function-in.c: Remove inclusion of
		dwarf2asm.h and dwarf2out.h.
		* lto-function-out.c: Remove inclusion of
		dwarf2asm.h and dwarf2out.h.
		(generate_early_dwarf_information): Remove.
		(output_function): Remove generate_early_dwarf_information call.
		(lto_output): Remove assignments to dwarf2_called_from_lto_p.
		* lto-section-in.c: Remove inclusion of
		dwarf2asm.h and dwarf2out.h.
		* lto-section-out.c: Remove inclusion of dwarf2out.h.

	2008-06-03  Bill Maddox  <maddox@google.com>
		
		* lto-tree-flags.def: Add flags for LABEL_DECL.
		* lto-function-out.c (output_label_decl): New function.
		(output_tree): Make sure that we do not stream out
		well-known nodes, even for node types for which we
		would not necessarily force sharing.  Reinstate handlers
		for SWITCH_EXPR	and CASE_LABEL. Add case for LABEL_DECL.
		* lto-function-in.c (input_label_decl): New function.
		(input_tree_operand): Reinstate handlers for 
		SWITCH_EXPR and CASE_LABEL. Add case for LABEL_DECL.
		* lto-section-out.c (preload_common_nodes): Verify
		that main_identifier_name is as expected by the reader.
		* lto.c (preload_common_nodes): Initialize
		main_identifier_node.

	2008-06-03  Diego Novillo  <dnovillo@google.com>

		* lto-header.h: Tidy formatting.
		* lto-section-in.c (lto_get_section_data): Fix type for
		SECTION_NAME.
		(lto_debug_in_fun): Tidy formatting.
		* lto-tags.h (enum): Tidy formatting.
		* lto-cgraph-out.c (output_fn_decl): Add comment.
		* lto-section-out.c (lto_output_decl_index):  Tidy formatting.

	2008-06-03  Diego Novillo  <dnovillo@google.com>

		* lto-function-out.c (output_tree_flags): Tidy
		formatting.
		(output_type_decl): Emit TYPE_MODE.
		(output_tree): Add comment.
		Ignore language codes.  Add pointer to proper fix.
		* lto-function-in.c (input_type_decl): Read TYPE_MODE.

	2008-06-02  Diego Novillo  <dnovillo@google.com>

		* lto-function-out.c: Do not include ctype.h.
		Tidy whitespace.
		(output_function_decl): Add comment.
		(output_type_tree): Reformat comment.
		* lto-header.h (lto_get_section_name): Fix return type.
		Tidy whitespace.
		* lto-tree-out.h: Tidy whitespace and comments.
		* lto-section-out.c (lto_get_section_name): Fix return
		type.
		(lto_get_section): Fix type of section_name.
		(lto_get_out_decl_state): Reformat comment.
		(out_state): Declare as local static to
		lto_get_out_decl_state.
		Fix wraparound problems.
		(preload_common_node): Reformat comment.
		Tidy whitespace.
		(produce_asm_for_decls): Remove extern declarations.
		Fix wraparound problems.
		(lto_debug_out_fun): Fix comment.
		* lto-section-out.h: Tidy whitesace and formatting.

	2008-05-30  Diego Novillo  <dnovillo@google.com>

		* lto-function-out.c (output_namespace_decl): Fix
		assertions for NAMESPACE_DECL.

	2008-05-30  Diego Novillo  <dnovillo@google.com>

		Backport from trunk:

		2008-05-27  Richard Guenther  <rguenther@suse.de>

			PR tree-optimization/36245
			* tree-ssa-address.c (add_to_parts): Deal
			with non-pointer bases.

	2008-05-29  Bill Maddox  <maddox@google.com>

		* lto-tree-in.h, lto-tree-out.h: New files,
		accidently omitted from previous commit.

	2008-05-28  Bill Maddox  <maddox@google.com>
		
		Replace the DWARF reader in the LTO front-end.

		* lto-tree-flags.def: Add flags for *_DECL
		and *_TYPE for use by g lobal streamer.
		* lto-function-out.c: Include lto-tree-out.h.
		(struct output_block): Moved to lto-tree-out.h.
		(create_output_block, destroy_output_block):
		Make non-static, now exported.
		(output_tree_flags, debug_tree_flags): Add ADD_CLASS_TYPE,
		ADD_TYPE_FLAG, ADD_FUN_FLAG macros.  Fix bug where stream
		debugging info was sometimes omitted.
		(lto_static_init): Adjust lto_flags_needed_for and
		lto_types_needed_for for node types now newly handled by
		the global streamer.
		(output_tree, output_type_tree, output_global_record_start,
		output_field_decl, output_function_decl, output_var_decl,
		output_parm_decl, output_result_decl, output_type_decl,
		output_namespace_decl, output_translation_unit_decl,
		output_binfo, output_type, output_global_constructor)
		New functions.
		* lto_function-in.c: Include lto-tree-in.h.
		(struct data_in): Moved to lto-tree-in.h.
		(input_string_internal): Initialize input_block before
		reading string table size from the stream.
		(process_tree_flags): Add ADD_CLASS_TYPE_FLAG, ADD_TYPE_FLAG,
		ADD_FUN_FLAG.
		(input_local_var): Handle stream debugging information
		that was previously omitted due to a bug in the writer.
		(lto_static_init_local): Make non-static, now exported.
		Add ADD_CLASS_TYPE_FLAG, ADD_TYPE_FLAG, ADD_FUN_FLAG.
		(input_tree, input_type_tree, input_tree_operand,
		global_vector_enter, global_vector_fixup, input_field_decl,
		input_function_decl, input_var_decl, input_parm_decl,
		input_result_decl, input_type_decl, input_namespace_decl,
		input_translation_unit_decl, input_binfo, input_type):
		New functions.
		* lto-section.h (struct lto_decl_header): Add fields for
		sizes of globals stream and its associated debug and string
		table streams.
		* lto-tree-tags.def: MAP_EXPR_TAG and SET_NAME macro calls
		for newly-handled tree codes for global decls and types.
		* lto-section-in.c (dump_debug_stream): Fix typo
		in error message.
		* lto-section-in.h (lto_input_function_body,
		lto_input_constructors_and_inits): Moved to lto-tree-in.h.
		* lto-tags.h (enum LTO_tags): Added literals LTO_tree_vec,
		LTO_translation_unit_decl, LTO_*_type, LTO_tree_binfo,
		LTO_pickle_reference.
	
2008-06-09 Rafael Espindola  <espindola@google.com>

	based on http://gcc.gnu.org/ml/gcc-patches/2008-03/msg00349.html

	* langhooks-def.h (LANG_HOOKS_RESET_LANG_SPECIFICS): New.
	(LANG_HOOKS_INITIALIZER): add LANG_HOOKS_RESET_LANG_SPECIFICS.
	* langhooks.h (reset_lang_specifics): New.
	* lto-section-out.c (produce_asm_for_decls): Call free_lang_specifics.
	* tree.c (uid2type_map): New.
	(insert_type_to_uid_type_map): New.
	(uid_type_map_eq): New.
	(uid_type_map_hash): New.
	(init_ttree): Initialize uid2type_map.
	(make_node_stat): Call insert_type_to_uid_type_map.
	(copy_node_stat): Call insert_type_to_uid_type_map.
	(reset_type_lang_specific): New.
	(free_lang_specifics): New.
	* tree.h (free_lang_specifics) New.

2008-06-09  Rafael Espindola  <espindola@google.com>

	* Make-lang.in (lto.all.cross): depend on $(LTO_EXE).

2008-05-05  Kenneth Zadeck <zadeck@naturalbridge.com>
	    Jan Hubicka  <jh@suse.cz>
	
	* tree-pass.h (ipa_opt_pass pass_ipa_lto_gimple_out,
	pass_ipa_pure_const, pass_ipa_lto_finish_out): Changed from being 
	simple_ipa_opt_pass to ipa_opt_pass. 
	(ipa_opt_pass pass_ipa_lto_cgraph): Renamed from
	ipa_opt_pass pass_ipa_lto_cgraph_out.
	(ipa_write_summaries, ipa_read_summaries): New functions.
	* lto-function-out.c (string_slot_free): New function.
	(next_string_index): Removed.
	(string_hash_table): Now use string_slot_free.
	(output_string): Copy string to malloced space and properly
	initialize slots.
	(output_type_ref_1): Renamed to lto_output_type_ref_index and
	moved to lto_section_out.c
	(output_type_ref, output_function): Now calls lto_output_type_ref_index.
	(output_expr_operand): Moved bodies of FIELD_DECL, FUNCTION_DECL,
	VAR_DECL, TYPE_DECL, NAMESPACE_DECL to new functions in
	lto_section_out.c.
	(lto_output): Now returns void.
	(pass_ipa_lto_gimple_out): Now a IPA_PASS with lto_output as
	write_summary method.
	* lto-function-in.c (input_string_internal): Moved initialization
	of len to proper place.
	* lto-cgraph.c: New file that is combination of lto-cgraph-out.c
	lto-cgraph-in.c and cgraph.h.
	(lto-section-in.h, lto-section-out.h): Added includes.
	(tree-vectorizer.h, tree-iterator.h): Removed includes.
	(LTO_cgraph_tag_names, LTO_cgraph_tags): Added from cgraph.h.
	(create_output_block, destroy_output_block, output_uleb128,
	output_sleb128, output_fun_decl, add_flag): Moved to
	lto-section-out.c, renamed with "lto_" prefix and generalized.
	(output_node, output_cgraph, input_overwrite_mode, input_cgraph):
	Changed to call moved and renamed functions.
	(input_overwrite_mode): Renamed from overwrite_mode.
	(input_cgraph): Renamed from lto_input_cgraph and made private and
	now loops over all file_datas.
	(pass_ipa_lto_cgraph): Renamed from pass_ipa_lto_cgraph_out and
	made into IPA_PASS.
	* lto-cgraph.h: File deleted and all infomation moved to
	lto-cgraph.c.
	* lto-header.h (LTO_section_ipa_pure_const): New section type.
	(lto_simple_header): New structure.
	* ipa-pure-const.c (lto-section-in.h, lto-section-out.h): New
	includes.
	(init_state, finish_state, set_function_state, generate_summary,
	write_summary, read_summary): New functions.
	(scan_stmt): Renamed from scan_function.  Changed to keep state in
	local static vars rather than cgraph aux field.
	(propagate): Renamed from static_execute. Changed to keep state in
	local static vars rather than cgraph aux field.
	(pass_ipa_pure_const): Changed from SIMPLE_IPA_PASS to IPA_PASS.
	* lto-cgraph-in.c: Content moved to lto-cgraph.c.
	* lto-section-in.c (lto_get_flag, lto_get_flags): Moved from
	lto-cgraph-in.c and renamed from add_flag and add_flags.
	(lto_read_section_data): Moved to lto/lto.c and modified to use
	mmap.
	(lto_set_in_hooks, lto_get_file_decl_data, lto_free_section_data, 
	lto_create_simple_input_block, lto_destroy_simple_input_block):
	New functions.
	(lto_get_section_data): Modified to call hook in lto front end.
	* lto-section-in.h (lto_section_slot): Moved to lto.h.
	(LTO_INIT_INPUT_BLOCK_PTR): New macro.
	(lto_file_decl_data.fd): New field.
	(lto_get_section_data_f, lto_free_section_data_f): New typedefs.
	(lto_create_simple_input_block, lto_destroy_simple_input_block,
	lto_get_flag, lto_get_flags, lto_set_in_hooks, lto_file_decl_data,
	lto_free_section_data): New functions.
	(lto_get_section_data): Added parms.
	* Makefile.in (lto-cgaph.o): Combined rules from lto-cgraph-in.o
	and lto-cgraph-out.o.
	(lto-function-in.o, lto-function-out.o): Added dependencies.
	* passes.c (init_optimization_passes): Reordered ipa passes.
	(execute_ipa_summary_passes): Added check to see that pass was
	there.
	(ipa_write_summaries_1, ipa_write_summaries,
	ipa_read_summaries_1): New function.
	(execute_ipa_pass_list): Added call to ipa_write_summaries and
	fixed bug.
	* lto-cgraph-out.c: Content moved to lto-cgraph.c.
	* lto-section-out.c (lto_set_flag, lto_set_flags): Functions moved
	and renamed (with lto_ prefix) from lto-cgraph-out.c.
	(lto_output_field_decl_index, lto_output_fn_decl_index,
	lto_output_namespace_decl_index, lto_output_var_decl_index,
	lto_output_type_decl_index, lto_output_type_ref_index): New
	functions.  The code for these functions was taken from
	lto-function-out.c
	(lto_create_simple_output_block, lto_destroy_simple_output_block):
	New functions.
	(produce_asm_for_decls): Now returns void.
	(pass_ipa_lto_finish_out): Now an IPA_PASS.
	* lto-section-out.h (lto_simple_output_block): New structure.
	(lto_set_flag, lto_set_flags, lto_output_field_decl_index,
	lto_output_fn_decl_index, lto_output_namespace_decl_index,
	lto_output_var_decl_index, lto_output_type_decl_index,
	lto_output_type_ref_index, lto_create_simple_output_block,
	lto_destroy_simple_output_block): New functions.
	(lto_get_out_decl_state): Removed function
	(lto_output_decl_index): Added parms.
	
2008-05-29  Rafael Espindola  <espindola@google.com>

	Mainline merge @136135

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2008-04-27  Kenneth Zadeck <zadeck@naturalbridge.com>

	* cgraph.h (lto_file_decl_data): Removed.
	* lto-function-in.c: Moved from lto directory.
	(lto-section-in.h): Added include.
	(lto.h): Deleted include.
	(input_string_internal): Initialized str_tab with
	LTO_INIT_INPUT_BLOCK.
	(canon_file_name): Reordered to remove stmt before decl.
	(input_expr_operand): Ditto.
	(input_bb): Removed assignment to TREE_BLOCK.
	(lto_static_init_local): Changed data to be char* rather than
	void*.
	(lto_read_body): Changed all vars of type struct lto_input_block
	to be initialized with LTO_INIT_INPUT_BLOCK.
	(lto_read_body, lto_input_constructors_and_inits): Changed data to
	be char* rather than void*.
	* lto-cgraph-in.c: Moved from lto directory.
	(lto.h): Removed include.
	(lto_input_cgraph): Changed data to be char* rather than
	void*. Changed ib_main and debug_main to be initialized with
	LTO_INIT_INPUT_BLOCK.
	* lto-section-in.c: Moved from lto directory.
	(lto.h): Removed include.
	(lto_read_decls): Moved to lto/lto.c.
	* lto-section-in.h: Moved from lto directory.
	(LTO_INIT_INPUT_BLOCK): New macro.
	(lto_input_function_body, lto_input_constructors_and_inits, 
	lto_input_cgraph): Declarations moved from lto.h.
	* Makefile.in (lto-cgraph-in.o, lto-function-in.o,
	lto-section-in.o): Rules moved from lto/Make-lang.in.
	
	
2008-05-25  Rafael Espindola  <espindola@google.com>

	Mainline merge @135852

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2008-05-20  Rafael Espindola  <espindola@google.com>

	* ../configure: Regenerate with the correct autoconf version: 2.59.

2008-05-16  Diego Novillo  <dnovillo@google.com>

	Mainline merge @135422

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2008-05-14  Rafael Espindola  <espindola@google.com>

	Mainline merge @135302

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2008-05-13  Diego Novillo  <dnovillo@google.com>

	Mainline merge @135270

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2008-05-12  Diego Novillo  <dnovillo@google.com>

	Mainline merge @135136

	* configure.ac (ACX_PKGVERSION): Update revision merge string.
	* configure: Regenerate.

2008-05-12  Diego Novillo  <dnovillo@google.com>

	* lto-tree-flags.def (STRUCT_FIELD_TAG): Remove.
	* treestruct.def (STRUCT_FIELD_TAG): Remove.
	Update all users.
	* lto-cgraph-out.c (output_node): Update references to
	inline summary fields.

2008-04-29  Ollie Wild  <aaw@google.com>

	* lto-tags.h (enum LTO_tags): Add LTO_namespace_decl.
	* lto-tree-tags.def (LTO_namespace_decl): New tag.
	* lto-section-out.c (lto_get_out_decl_state): Initialize
	out_state->namespace_decl_hash_table.
	(produce_asm_for_decls): Write assembly for namespace declarations.
	* lto-section-out.h (struct lto_out_decl_state): Add
	namespace_decl_hash_table, next_namespace_decl_index, and
	namespace_decls.
	* lto-section.h (struct lto_decl_header): Add num_namespace_decls.
	* lto-function-out.c (output_expr_operand): Add NAMESPACE_DECL case.
	(lto_static_init): Clear lto_flags_needed_for and lto_types_needed_for
	entries for NAMESPACE_DECL.
	(output_constructors_and_inits): Output initializer if
	DECL_CONTEXT (var) is not a FUNCTION_DECL.
	* dwarf2out.c (lto_namespacedecl_ref): New function.
	* dwarf2out.h (lto_namespacedecl_ref): New function.

2008-04-24  Kenneth Zadeck <zadeck@naturalbridge.com>

	Merge with mainline @134626.

2008-04-16  Ollie Wild  <aaw@google.com>

	* lto-function-out.c (output_type_ref): Updated function description.

2008-04-16  Ollie Wild  <aaw@google.com>

	* lto-function-out.c (output_type_ref_1): New function.
	(output_type_ref): Split into two functions.
	(output_function): Output an LTO_type record if DECL_CONTEXT (function)
	is a type.
	* lto-tags.h (LTO_tags): Add LTO_type enumerator.
	* lto-tree-tags.def (LTO_type): Add new name.

2008-03-25  Kenneth Zadeck <zadeck@naturalbridge.com>

	Merge with mainline @133491.

2008-03-05  Kenneth Zadeck <zadeck@naturalbridge.com>
	    Jan Hubicka  <jh@suse.cz>

	* cgraph.h (cgraph_local_info): Added lto_file_data.
	(cgraph_decide_is_function_needed): Made public.
	* tree-pass.h (pass_ipa_lto_cgraph_out): New lto pass.	
	* lto-function-out.c (LTO_tag_names): Renamed to LTO_tree_tag_names.
	(current_stmt_uid): Removed.
	(create_output_block): Moved call to lto_get_output_decl_state and set
	lto_debug_context.tag_names.
	(output_expr_operand, output_bb, output_constructors_and_inits): 
	Removed current_stmt_id.
	(lto_static_init): Renamed LTO_tag_names to LTO_tree_tag_names
	(output_function): Added debugging code.
	* cgraphunit.c (decide_is_function_needed): Renamed to
	cgraph_decide_is_function_needed and made public.
	(cgraph_analyze_functions): Only analyze unanalyzed functions.
	* lto-cgraph.h: New file.
	* lto-header.h (LTO_DEBUG_FN_NAME): New macro.
	(struct lto_debug_context.tag_names): New field.
	(lto_debug_fn_name): New function.
	* lto-tags.h (LTO_last_tag): Renamed to LTO_tree_last_tag.
	* lto-stream-debug.c (lto_debug_indent): Get tag from context.
	(lto_debug_fn_name): New function.
	* Makefile.in (lto-stream-debug.o, lto-cgraph-out.o, varpool.o):
	Fixed dependencies.
	* passes.c (init_optimization_passes): New
	pass_ipa_lto_cgraph_out.
	* lto-cgraph-out.c: New file.
	* varpool.c (decide_is_variable_needed): Check for in_lto_p.
		
2008-02-09  Kenneth Zadeck <zadeck@naturalbridge.com>

	* tree-pass.h: (pass_ipa_lto_out): Renamed to pass_ipa_lto_gimple_out.
	(pass_ipa_lto_finish_out): New pass.
	* lto-function-out.c (decl_slot, hash_decl_slot_node, eq_decl_slot_node, 
	hash_type_slot_node, eq_type_slot_node, output_decl_index): Moved to
	lto-section-out.c, made public and and renamed to have "lto_"
	prefix.
	(eq_label_slot_node, hash_label_slot_node): Uses lto_decl_slot rather than
	decl_slot.
	(output_block): Deleted these fields: field_decl_hash_table,
	next_field_decl_index, field_decls, fn_decl_hash_table,
	next_fn_decl_index, fn_decls, var_decl_hash_table,
	next_var_decl_index, var_decls, type_decl_hash_table,
	next_type_decl_index, type_decls, type_hash_table,
	next_type_index, types.
	Added cgraph_node and current_stmt_id.
	(create_output_block): Now takes lto_section_type.  Removed code 
	to init hash tables moved to lto_section_out.c.
	(destroy_output_block): Removed is_function parameter.
	Removed code to destroy tables moved to lto_section_out.c 
	(output_type_ref, output_local_decl_ref, output_label_ref, 
	output_expr_operand): Modified to call functions moved to lto_section_out.
	(output_bb): Properly set current_stmt_id.
	(write_references): Moved to lto_section_out.c.
	(produce_asm): tripped of all of the function that was moved
	to lto_section_out.c.
	(output_constructor_or_init): Renamed
	output_constructors_and_inits and writes all initializers in a
	single section rather than one per section.
	(lto_output): Moved loop over all constructors to
	output_constructors_and_inits.
	(gate_lto_out): Moved to lto-section-out.c. 
	* tree-ssa-sccvn.c (init_scc_vn): Removed unused bb var.
	* lto-header.h (lto_section_type): Changed prefix of all
	elements to "LTO_section".
	(lto_get_section_name): New function.
	(lto_get_section): Move from lto-section.h.
	(LTO_STREAM_DEBUGGING, LTO_DEBUG_INDENT, LTO_DEBUG_INDENT_TOKEN, 
	LTO_DEBUG_INTEGER, LTO_DEBUG_STRING, LTO_DEBUG_TOKEN, 
	LTO_DEBUG_TREE_FLAGS, LTO_DEBUG_UNDENT, LTO_DEBUG_WIDE,
	lto_debug_context, lto_debug_out): Moved from lto-tags.h.
	* lto-section.h: New file.
	* lto-tags.h (lto_function_header): Moved fields num_field_decls,
	num_fn_decls, num_var_decls, num_type_decls, num_types. to
	lto_decl_header in lto-section.h.
	(LTO_STREAM_DEBUGGING, LTO_DEBUG_INDENT, LTO_DEBUG_INDENT_TOKEN, 
	LTO_DEBUG_INTEGER, LTO_DEBUG_STRING, LTO_DEBUG_TOKEN, 
	LTO_DEBUG_TREE_FLAGS, LTO_DEBUG_UNDENT, LTO_DEBUG_WIDE,
	lto_debug_context, lto_debug_out): Moved to lto-tags.h.
	* lto-stream-debug.c: Include lto-header.h.
	* Makefile.in (LTO_TAGS_H, lto-stream-debug.o, lto-function-out.o,
	lto-section-out.o): Updated dependencies.
	(LTO_SECTION_H): New.
	* passes.c: (pass_ipa_lto_out): Renamed to pass_ipa_lto_gimple_out.
	(pass_ipa_lto_finish_out): New pass.
	* lto-section-out.c (lto_hash_decl_slot_node, lto_eq_decl_slot_node, 
	lto_hash_type_slot_node, lto_eq_type_slot_node,
	lto_output_decl_index): Moved from lto-function-out.c and
	renamed with "lto_" prefix.
	(lto_get_section_name, lto_get_out_decl_state, produce_asm_for_decls): New function.
	(write_references, gate_lto_out): Moved from lto-function-out.c.
	* lto-section-out.h (lto_out_decl_state): New structure.

2008-01-28  Kenneth Zadeck <zadeck@naturalbridge.com>
	* cgraph.h (cgraph_edge.lto_stmt_uid): New field.
	* lto-function-out.c (output_constructor, output_expr_operand,
	output_phi, output_bb, output_function): Removal of code to thread
	the stmt_number thru the code.
	(produce_asm): Moved code to create dwarf_sections to
	lto_section_out.c.  Encapsulated section type independent code
	into separate header structure.  Changed to use enum section_type.
	(output_function, output_constructor_or_init): Added call to
	renumber_gimple_stmt_uids and to pass section type to produce_asm.
	(lto_output): Pass cgraph node rather than decl to
	output_function.
	* tree-ssa-dse (max_stmt_uid): Removed.
	(get_stmt_uid, dse_possible_dead_store_p, dse_optimize_stmt, 
	tree_ssa_dse): Encapsulate all uses of stmt_ann->uid.
	* tree-ssa-sccvn.c (compare_ops, init_scc_vn): Ditto.
	* lto-header.h: New
	* function.h (cfun.last_stmt_uid): New field.
	* lto-tags.h (lto_header): Renamed to lto_function_header and
	moved shared fields to lto_header in lto-header.h.
	(LTO_SECTION_NAME_PREFIX): Moved to lto-header.h.
	* tree-flow-inline.h (set_gimple_stmt_uid, gimple_stmt_uid,
	gimple_stmt_max_uid, set_gimple_stmt_max_uid, 
	inc_gimple_stmt_max_uid): New functions.
	* tree-dfa.c (renumber_gimple_stmt_uids): New function.
	(create_stmt_ann): Initialize the ann->uid field.
	* tree-ssa-pre.c (compute_avail): Encapsulate the stmt_ann->uid
	with new calls.
	* tree-flow.h (renumber_gimple_stmt_uids): New function.
	* lto-section-out.c (lto_get_section): New function.
	* lto-section-out.h (lto_get_section): New function.
	
2008-01-14  Kenneth Zadeck <zadeck@naturalbridge.com>
	* lto-function-out (lto_debug_context, output_stream,
	LTO_SET_DEBUGGING_STREAM): Moved to lto_section_out.h.
	(debug_out_fun): Renamed lto_debug_out_fun and moved to
	lto_section_out.c.
	(write_stream): Renamed lto_write_stream and moved to
	lto_section_out.c.
	(output_1_stream): Renamed lto_output_1_stream and moved to
	lto_section_out.c.
	(output_uleb128_stream): Renamed lto_output_uleb128 and moved to
	lto_section_out.c.
	(output_widest_uint_uleb128_stream): Renamed
	lto_output_widest_uint_uleb128_stream and moved to
	lto_section_out.c.
	(output_sleb128_stream): Renamed lto_output_sleb128_stream and
	moved to lto_section_out.c.
	(output_string, output_decl_index, output_record_start,
	output_constructor, output_expr_operand, output_local_vars,
	output_local_vars_index, output_ssa_names, output_bb, produce_asm,
	output_function, output_constructor_or_init): Renamed all calls as above.
	(output_integer): Guts moved to lto_output_integer_stream.
	(output_expr_operand, output_local_var, output_cfg, output_phi,
	output_bb, output_function): 
	Added stmt_num parameter.
	* lto-tags.h (lto_debug_context): Added.
	* lto-section-out.c: New file that contains functions moved and
	renamed from lto-function-out.
	* lto-section-out.h: New file that contains declarations in
	lto-section-out.c. 
	* Makefile.in (lto-section-out.o): New rule.
	
2008-01-07  Diego Novillo  <dnovillo@google.com>

	http://gcc.gnu.org/ml/gcc-patches/2008-01/msg00263.html

	* dwarf2out.c (force_decl_die): Initialize SAVED_IGNORED_FLAG.
	* dwarf2.h (enum dwarf_type): Remove trailing comma.

2007-12-29  Nathan Froyd  <froydnj@codesourcery.com>

	* collect2.c (scan_prog_file): Read all the output when reading
	information for LTO.

2007-12-24  Nathan Froyd  <froydnj@codesourcery.com>

	* lto-function-out.c (output_local_vars): Output DECL_INITIAL
	regardless of whether we are outputting the function in which
	it was defined.

2007-12-22  Nathan Froyd  <froydnj@codesourcery.com>
	    Kenneth Zadeck <zadeck@naturalbridge.com>

	* dwarf2out.c (force_decl_die): Unset the DECL_IGNORED_P flag if
	we are called from LTO.  Remove the DW_AT_declaration flag if the
	decl has an initial value.
	* lto-function-out.c (output_expr_operand): Add explicit check
	for statics or externs rathen than use DECL_CONTEXT.
	(output_local_vars): Serialize the DECL_INITIAL field of local
	statics and add it the unexpanded_vars_list as necessary.

2007-12-19  Doug Kwan  <dougkwan@google.com>

	* dwarf2out.c (base_type_de): Use DW_ATE_GNU_complex_unsigned
	and DW_ATE_GNU_complex_signed as appropriate instead of using
	DW_ATE_lo_user.
	
	* dwarf2.h (DW_ATE_GNU_complex_signed, DW_ATE_GNU_complex_unsigned):
	New encoding formats.

2007-12-18  Doug Kwan  <dougkwan@google.com>

	* real.c (real_to_decimal, real_to_hexadecimal): Distinguish
	QNaN & SNaN.
	(real_from_string): Handle NaNs and Inf as approriate.

2007-12-17  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-function-out.c (output_block.unexpanded_local_decls_index): New vector.
	(destroy_output_block): Added missing ifdef.
	(output_decl_index): Added this_index to return added index.
	(output_type_ref): Added parameter to output_decl_index.
	(output_local_decl_ref): Added write parameter and code to initialize 
	unexpanded_local_decls_index.
	(output_expr_operand): Added extra operands to output_decl_index and
	output_local_decl_ref.
	(output_local_var): New function split out from output_local_vars.
	(output_local_vars): Added code to string unexpanded_var_list separately.
	(output_function): Added code to output decl_context for function.

2007-12-13  Nathan Froyd  <froydnj@codesourcery.com>

	* dwarf2out.c (mark_die_used): New function.
	(lto_init_ref): Call it.

2007-12-13  Nathan Froyd  <froydnj@codesourcery.com>

	* langhooks.h (struct lang_hooks) Add comment for
	reduce_bit_field_operations.

2007-12-12  Bill Maddox  <maddox@google.com>

	Revert
	2007-12-07  Bill Maddox  <maddox@google.com>

	* dwarf2out.c (AT_string_form): Remove code to suppress
	the use of the DWARF string table.

2007-12-07  Bill Maddox  <maddox@google.com>

	* dwarf2out.c (AT_string_form): Remove code to suppress
	the use of the DWARF string table.

2007-12-07  Nathan Froyd  <froydnj@codesourcery.com>

	* tree-flow.h (init_empty_tree_cfg_for_function): Declare.
	* tree-cfg.c (init_empty_tree_cfg_for_function): Define.
	(init_empty_tree_cfg): Call it.
	* lto_function-out.c (output_cfg): Write out the block chain.

2007-12-07  Nathan Froyd  <froydnj@codesourcery.com>

	* dwarf2out.c (containing_decl_for_block): New function.
	(force_block_die): Call it.
	(dwarf2out_finish): Call it if we have a BLOCK for our context.

2007-12-06  Nathan Froyd  <froydnj@codesourcery.com>

	* lto-function-out.c (write_references): New function.
	(produce_asm): Call it.

2007-12-03  Nathan Froyd  <froydnj@codesourcery.com>

	* tree-into-ssa.c (rebuild_ssa_for_lto): Remove.
	(pass_rebuild_ssa_for_lto): Remove.
	* tree-optimize.c (gate_early_lto_passes): Remove.
	(pass_early_lto_passes): Remove.
	* passes.c (init_optimization_passes): Remove pass_early_lto_passes
	and its sub-passes.
	* tree-pass.h (pass_early_lto_passes, pass_rebuild_ssa_for_lto):
	Remove.
	* lto-tree-flags.def (VAR_DECL): Add volatile_flag.

2007-11-30  Nathan Froyd  <froydnj@codesourcery.com>

	* lto-tree-flags.def (RESULT_DECL): Add gimple_reg_flag.

2007-11-29  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-function-out.c (output_expr_operand): Fix STRING_CST to
	always have type.

2007-11-21  Nathan Froyd  <froydnj@codesourcery.com>

	* dwarf2out.c (gen_subprogram_die): Inhibit generation of labels
	if we are being called for LTO's purposes.
	(gen_variable_die): Don't generate multiple DIEs for and equate
	the generated DIE with the decl for global variables.
	(force_decl_die): Don't play games with DECL_EXTERNAL if we are
	forcing a DIE for a global variable.
	(lto_typedecl_ref): Remove assert.

2007-11-16  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-function-out.c (output_expr_operand): Get types right 
	for COMPLEX_CST.

2007-11-16  Nathan Froyd  <froydnj@codesourcery.com>

	* c-common.c (c_build_bitfield_integer_type): Rename this...
	* stor-layout.c (make_bitfield_integer_type): ...to this.
	* c-decl.c (finish_struct): Use new name.
	* c-common.h (c_build_bitfield_integer_type): Move declaration...
	* tree.h (make_bitfield_integer_type): ...here.

2007-11-16  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-tree-flags.def (tcc_constant): Added static_flag.
	(tcc_vl_exp): Added asm_written_flag.
	* lto-function-out.c (output_local_vars): Output DECL_INITIAL
	for static local vars.
	(lto_types_needed_for): Added STRING_CST.
	* tree-cfg.c (dump_function_to_file): Add verbose dump for
	local vars and parms.

2007-11-15  Nathan Froyd  <froydnj@codesourcery.com>

	* tree.h (DECL_CONTEXT): Note that this applies to RESULT_DECLs too.

2007-11-15  Kenneth Zadeck <zadeck@naturalbridge.com>

	* tree-dump.c (dump_options): Removed verbose from -all option.
	* tree-pretty-print.c (dump_phi_nodes, dump_generic_bb_buff): 
	Fixed && vs & dyslexia.
	* lto-tree-flags.def (ADD_CLASS_FLAG) Renamed to ADD_CLASS_EXPR_FLAG.
	(ADD_CLASS_DECL_FLAG): New macro.
	(OMP_ATOMIC_LOAD, OMP_ATOMIC_STORE): New cases.
	* lto-function-out (output_tree_flags, lto_debug_tree_flags):
	Renamed to ADD_CLASS_EXPR_FLAG. ADD_CLASS_DECL_FLAG New Macro.
	(output_expr_operand): Added type for SWITCH_EXPR.
	* tree-cfg.c (dump_function_to_file): Fixed && vs & dyslexia.

2007-11-14  Diego Novillo  <dnovillo@google.com>

	Merge with mainline @130155.

	* configure.ac (ACX_PKGVERSION): Update revision merge
	string.
	* configure: Regenerate.

2007-11-13  Diego Novillo  <dnovillo@google.com>

	* lto-function-out.c (output_tree_flags): Declare local
	variable CURRENT_COL.  Fix existing misspellings of its
	name.
	* dwarf2out.c (lto_typedecl_ref): Remove unused variable.
	Reformat comments.

2007-11-13  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-tree-flags.def (PARM_DECL): Serialize the addressable_flag.
	(PHI_NODE): Serialize the asm_written_flag.

2007-11-13  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-function-out.c (output_expr_operand): Get the types
	correct for vector-cst.
	* tree-cfg.c (dump_function_to_file): Print the
	function_decl in verbose mode.

2007-11-13  Diego Novillo  <dnovillo@google.com>

	* lto-tags.h: Call #error if BITS_PER_LTO_FLAGS_TYPE is
	not wide enough.

2007-11-13  Doug Kwan  <dougkwan@google.com>

	* lto-function-out.c (output_widest_uint_uleb128_stream,
	output_widest_uint_uleb128): New functions. 
	(output_tree_flags): Use lto_flags_type instead of unsigned
	HOST_WIDE_INT.  Call output_widest_unint_uleb128 instead of
	output_uleb128.
	(lto_debug_tree_flags): Replace HOST_BITS_PER_WIDE_INT with
	BITS_PER_LTO_FLAGS_TYPE as appropriate.
	* lto-tags.h (lto_flags_type): New type.
	(BITS_PER_LTO_FLAGS_TYPES): New macro.
	(lto_debug_tree_flags): Change prototype to use
	lto_flags_type.

2007-11-13  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-function-out.c (output_constructor): Modified to output
	index field if it exists.
	(output_expr_operand): Removed incorrect assert about type names.
	Added RANGE_EXPR case.
	* lto-tree-flags.def (LTO_constructor_range): Removed.
	* lto-tags.h (LTO_constructor_range): Removed.
		
2007-11-11  Kenneth Zadeck <zadeck@naturalbridge.com>

	* doc/invoke.text (-fdump-tree-*-verbose): New option.
	* tree-dump.c (dump_options): New verbose option.
	* tree-pretty-print.c (dump_phi_nodes, dump_generic_bb_buff):
	Add verbose dump.
	* lto-tree-flags.def (tcc_expression, tcc_gimple_stmt,
	tcc_statement): Add asm_written flag to support undocumented use.
	(FUNCTION_DECL): Removed all flags since these are not serialized
	by lto-function-out.
	(VAR_DECL): Reorganized flags and added missing ones.
	* tree-pass.h (TDF_VERBOSE): New dump flag.
	* lto-function-out.c (output_tree_flags): Removed ADD_FUNCT_FLAG
	macro.  Added fixes to get line numbers correct.
	(pass_ipa_lto_out): Fixed dump options and name.
	* lto-flags.h (LTO_SOURCE_*): Removed conditional code
	USE_MAPPED_LOCATION.
	(LTO_SOURCE_HAS_LOC): New macro.
	* tree-dfa-c (pass_referenced_var): Added dump option.
	* print-tree.c (print_node): Added code to be able to print
	PHI_NODES.
	(tree-flow.h): Added include.
	Makefile.in (print-tree.o):  Added TREE_FLOW_H.
		
2007-11-09  Nathan Froyd  <froydnj@codesourcery.com>

	* dwarf2out.c (lto_var_ref): Don't remove DW_AT_declaration.

2007-11-09  Nathan Froyd  <froydnj@codesourcery.com>

	* dwarf2out.h (dwarf2_generate_frame_info_p): Rename this...
	(dwarf2_called_from_lto_p): ...to this.
	* dwarf2out.c (dwarf2_generate_frame_info): Rename this...
	(dwarf2_called_from_lto_p): ...to this.
	(gen_subprogram_die): Use dwarf2_called_from_lto_p and invert sense.
	(add_high_low_attributes): Disable generation of the attributes if
	we are generating information for LTO.
	* lto-function-out.c (output_function): Use push_cfun and pop_cfun.
	(lto_output): Use dwarf2_called_from_lto_p and invert sense.

2007-11-09  Nathan Froyd  <froydnj@codesourcery.com>

	* dwarf2out.c (lto_var_ref): Remove DW_AT_declaration if we are
	forcing an initialized global variable.

2007-11-08  Nathan Froyd  <froydnj@codesourcery.com>

	* c-decl.c (match_builtin_function_types): Move this...
	* tree.c (match_builtin_function_types): ...here.
	* tree.h (match_builtin_function_types): Declare it.

2007-11-08  Nathan Froyd  <froydnj@codesourcery.com>

	* gengtype.c (main): Add uint64_t as a typedef.

2007-11-07  Nathan Froyd  <froydnj@codesourcery.com>

	* doc/gty.texi (Source Files Containing Type Information): Note
	that headers should appear first in the gtfiles list.

2007-11-06  Doug Kwan  <dougkwan@google.com>

        * lto-function-out.c (output_record_start): Check for presence of
        type before calling output_type_ref.
		  
2007-11-06  Alon Dayan <alond@il.ibm.com>
	    Kenneth Zadeck <zadeck@naturalbridge.com>

     	* lto-function-out.c: (output_tree_flags): Use expanded location for exprs.
	(output_tree_flags, lto_debug_tree_flags): 
	Macro add flags of size>1.
     	* lto-tree-flags.def: Likewise.

2007-11-02  Nathan Froyd  <froydnj@codesourcery.com>

	* dwarf2out.c (force_block_die): Implement.  

2007-11-02  Nathan Froyd  <froydnj@codesourcery.com>

	* lto-function-out.c (output_expr_operand): Change the
	single-argument RETURN_EXPR case to check whether we are writing
	out DECL_RESULT.
	
2007-11-01  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-function-out.c (output_tree_list): Removed function.
	(output_expr_operand): Added case for TREE_LIST, and
	IDENTIFER_NODE and changed ASM_EXPRs to recursively call
	output_expr_operand.
	(output_local_vars): Changed some calls from output_uleb128 to
	output_zero and changed calls to output_tree_list to
	output_expr_operand.
	(output_ssa_names): Changed some calls from output_uleb128 to
	output_zero.
	(lto_static_init): Initialized IDENTIFIER_NODE and TREE_LIST
	cases.
	* lto-tree-tags.def: Ditto.
	* lto-tags.h: Ditto.
	
	
2007-10-31  Nathan Froyd  <froydnj@codesourcery.com>

	* lto-function.c (output_expr_operand): Assert that DECL_NAME of a
	TYPE_DECL is NULL, as it should be for function-local TYPE_DECLs.
	(lto_static_init): Reset the bit for TYPE_DECLs in
	lto_flags_needed_for and lto_types_needed_for.
	(generate_early_dwarf_information): Move the setting of
	dwarf2_generate_frame_info_p to...
	(lto_output): ...here.
	* dwarf2out.c (force_decl_die): Don't handle TYPE_DECL.
	(lto_typedecl_ref): Dump a reference to the decl's type instead of
	the decl itself.

2007-10-30  Nathan Froyd  <froydnj@codesourcery.com>

	* Makefile.in (lto/lto-stream-debug.o): Add dependency on $(TREE_H).

2007-10-29  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-tree-flags.def (VAR_DECL): Added seen_in_bind_expr flag.
	* lto-function-out.c (struct output_block): Added
	type_decl_hash_table, next_type_decl_index, type_decls,
	current_col. Changed last_file to current_file. Changed last_line
	to current_line.
	(clear_line_info): New function.
	(create_output_block): Added call to clear_line_info.  Added
	initialization of type_decl_hash_table.
	(destroy_output_block): Added destruction of type_decl_hash_table.
	(output_string): Fixed type snafu.
	(output_tree_flags): Added force_loc parameter and uses of it.
	Full rewrite of processing of line numbers.
	(output_expr_operand): Added TYPE_DECL case.
	(output_local_vars): Properly handle TREE_CHAIN and DECL_CONTEXT.
	(output_named_labels, output_constructor_or_init): Added call to
	clear_line_info.
	(output_ssa_names): Added parm to not process line numbers for ssa
	names.
	(produce_asm): Added code to output type_decls.
	(output_function): Added call to clear_line_info.  Moved
	production of labels to after local_vars to get processing of
	context correct.
	* lto-tree-tags.def (LTO_type_decl): New tag.
	* lto-tags.h (lto_header): Added num_type_decls.
	(LTO_type_decl): New tag.
	(LTO_SOURCE_FILE, LTO_SOURCE_LINE, LTO_SOURCE_LOC_BITS,
	LTO_SOURCE_COL): New macros.
	* tree-dfa.c (find_referenced_vars): Added code to walk phi
	operands.
	

2007-10-29  Nathan Froyd  <froydnj@codesourcery.com>

	* dwarf2out.h (lto_typedecl_ref): Declare.
	* dwarf2out.c (force_die_for_context): New function.
	(force_decl_die): Use it.  Handle TYPE_DECLs.
	(force_type_die): Use it.
	(force_block_die): New function.
	(lto_typedecl_ref): New function.

2007-10-22  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-function-out.c (output_tree_flags): Changed type of
	flags and enhanced stream debugging for flags.
	(output_local_vars): Added debugging for tree_chains.
	(lto_debug_tree_flags): New function.
	* lto-flags.h (lto_debug_tree_flags): New function.
	(LTO_flags_needed): New LTO_tags.
	(LTO_DEBUG_TREE_FLAGS): New macro.
	* Makefile.in (LTO_TAGS_H): Add tree.h dependency.


2007-10-19  Diego Novillo  <dnovillo@google.com>

	* gcc.c (cc1_options): Force -O2 if -flto is given.
	* collect2.c (maybe_run_lto_and_relink): Tidy formatting.
	Add -O2 when calling gcc to do an LTO link.
	(scan_prog_file): Send the error output of 'nm' to HOST_BIT_BUCKET.

2007-10-19  Nathan Froyd  <froydnj@codesourcery.com>

	* dwarf2out.c (gen_decl_die): Check cgraph_global_info_ready to determine
	whether we can output information for abstract instances.

2007-10-18  Kenneth Zadeck <zadeck@naturalbridge.com>

	* tree-into-ssa.c (get_default_def_for, rewrite_stmt,
	maybe_register_def): Add cfun parameter to make_ssa_name.
	* tree-ssa-loop-im.c (rewrite_reciprocal, rewrite_bittest): Ditto.
	* tree-complex.c (get_component_ssa_name): Ditto.
	* tree-ssa-loop-manip.c (create_iv, tree_transform_and_unroll_loop): Ditto.
	* tree-tailcall.c (adjust_accumulator_values,
	adjust_return_value, tree_optimize_tail_calls_1): Ditto.
	* tree.h (extern void phinodes_print_statistics): Ditto.
	* tree-phinodes.c (make_phi_node): Ditto.
	* omp-low.c (expand_parallel_call, expand_omp_parallel,
	expand_omp_for_static_chunk): Ditto.
	* tree-parloops.c (take_address_of, separate_decls_in_loop,
	transform_to_exit_first_loop, create_parallel_loop): Ditto.
	* matrix-reorg.c (transform_access_sites): Ditto.
	* tree-if-conv.c (ifc_temp_var): Ditto.
	* gimplify.c (gimplify_modify_expr): Ditto.
	* tree-ssa-phiopt.c (conditional_replacement, abs_replacement,
	cond_store_replacement): Ditto.
	* tree-ssa-pre.c (create_expression_by_pieces, insert_fake_stores): Ditto.
	* tree-predcom.c (initialize_root_vars,
	* initialize_root_vars_lm, execute_load_motion,
	reassociate_to_the_same_stmt): Ditto.
	* tree-ssa-forwprop.c (phiprop_insert_phi): Ditto.
	* tree-vect-patterns.c (vect_pattern_recog_1): Ditto.
	* lambda-code.c (lambda_loopnest_to_gcc_loopnest,
	replace_uses_equiv_to_x_with_y, perfect_nestify): Ditto.
	* tree-inline.c (remap_ssa_name): Ditto.
	* tree-vect-transform.c (vect_create_data_ref_ptr,
	bump_vector_ptr, vect_init_vector,
	get_initial_def_for_induction,
	get_initial_def_for_induction,
	vect_create_epilog_for_reduction, vect_finalize_reduction,
	vectorizable_reduction, vectorizable_call,
	vect_gen_widened_results_half, vectorizable_conversion,
	vectorizable_assignment, vectorizable_operation,
	vectorizable_type_demotion, vect_permute_store_chain,
	vect_setup_realignment, vect_permute_load_chain,
	vectorizable_load, vectorizable_condition,
	vect_create_cond_for_align_checks): Ditto.
	* tree-outof-ssa.c (insert_backedge_copies): Ditto.
	* tree-cfg.c (tree_make_forwarder_block, replace_ssa_name): Ditto.
	* tree-ssanames.c (duplicate_ssa_name): Ditto.
	(make_ssa_name): Use struct function parameter rather than cfun.
	* lto-function-out.c (output_local_vars): Add chaining for parm_decls.

2007-10-17  Nathan Froyd  <froydnj@codesourcery.com>

	* dwarf2out.c (gen_subprogram_die): Don't remove attributes and
	formal parameters if we are generating LTO objects, as the formal
	parameters likely have references to them from elsewhere.
	Instead, return early if we find a DIE for this decl.

2007-10-16  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-function-out.c (output_integer): Added casting.
	(output_tree_list): Remove the tag parameter and the record.
	(output_expr_operand): Make the asm operands use output_tree_list.
	(output_local_vars): Remove LTO_attribute_list.
        * lto-tree-tags.def (LTO_attribute_list): Removed.
	* lto-tags.h (LTO_attribute_list): Removed.

2007-10-16  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-function-out.c (struct string_slot): Added len.
	(eq_string_slot_node): Fixed to honor real length of strings with nulls.  
	(output_string): Set len and fix debugging.
	(output_expr_operand): Output CASE_HIGH and CASE_LOW properly.

2007-10-05  Nathan Froyd  <froydnj@codesourcery.com>

	* dwarf2out.h (dwarf_attr_name): Declare.
	* dwarf2out.c (dwarf_attr_name): Remove declaration and change
	definition accordingly.

2007-10-05  Diego Novillo  <dnovillo@google.com>

	* lto-function-out.c (output_constructor): Handle constructor elts
	with NULL indices.
	(output_expr_operand): Check whether the variable is in the
	global scope.
	(lto_output): Only handle statics that are in the global
	scope.
	* tree-nested.c (get_trampoline_type): Set DECL_CONTEXT for
	the new field.

	Backport

	2007-07-26  Doug Kwan  <dougkwan@google.com>

	* dwarf2out.c: (may_reference_to_unsued) : Renamed from
	reference_to_unsued as it is now more conservative than
	before. Replace unreachable assert into a return that tells
	caller that tree may reference an unused DECL.
	(rtl_for_decl_init): Rename callee to may_reference_to_usused.

2007-10-04  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-tree-flags.def (FIXED_CONVERT_EXPR, FIXED_CST, FIXED_POINT_TYPE,
	OMP_SECTIONS_SWITCH): Added new tree codes.
	* lto-function-out.c (lto_static_init): Added types for FIXED_CONVERT_EXPR,
	FIXED_CST.
	* lto-tree-tags.def (FIXED_CONVERT_EXPR, FIXED_CST): Added mappings.
	* lto-tags.h (LTO_fixed_convert_expr, LTO_fixed_cst): New codes.

2007-10-02  Kenneth Zadeck <zadeck@naturalbridge.com>

	* omp-low.c (expand_omp_parallel): Added struct function param
	to init_tree_ssa.
	* passes.c (dump_properties): Removed reference to PROP_pta.

2007-09-26  Nathan Froyd  <froydnj@codesourcery.com>

	* dwarf2out.h (dwarf2_generate_frame_info_p): Declare.
	* dwarf2out.c (dwarf2_generate_frame_info_p): Define it.
	(gen_subprogram_die): Consult it to determine whether to generate
	frame information.
	(lto_type_ref): Remove sorry call.
	* lto-function-out.c (generate_early_dwarf_information): New function.
	(output_function): Call it.  Set current_function_decl and cfun to
	facilitate DWARF generation.

2007-09-11  Bill Maddox  <maddox@google.com>

	Add `gcc' driver support for link-time code generation (LTO).

	* collect2.c (enum pass): Add new literal PASS_LTOINFO.
	(lto_flag, lto_objects, lto_o_file): New variables.
	(struct lto_object, struct lto_object_list): New structures.
	(collect_exit, handler): Remove LTO temporary output file on exit.
	(add_lto_object): New function.
	(maybe_run_lto_and_relink): New function. Perform link time code
	generation and relinking for object files containing LTO information.
	(main): Invoke maybe_run_lto_and_relink().
	(dump_argv): New function.  For debugging, currently disabled.
	(scan_prog_file): Add LTO information pass.
	* gcc.c (LINK_COMMAND_SPEC): Pass `-flto' switch to linker, i.e.,
	collect2.
	* toplev.c (compile_file): Emit assembler directive to create
	the `gnu_lto_v1' marker symbol when compiling with `-flto'.

2007-09-11  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-function-out.c (lto_static_init): Added type for STRING_CST.

2007-09-11  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-function-out.c (output_constructor): Allow anything in the tree.
	* lto-tree-tags.def (POINTER_PLUS_EXPR): New tree type.

2007-09-05  Jan Hubicka  <jh@suse.cz>

	* cgraphbuild.c (build_cgraph_edges): Export.
	* cgraph.h (build_cgraph_edges): Declare.
	* cgraphunit.c (cgraph_finalize_function): Rebuild cgraph edges.

2007-08-29  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-function-out.c (LTO_SET_DEBUGGING_STREAM): Now swallows
	semicolons.
	(LTO_CLEAR_DEBUGGING_STREAM): New macro.
	(create_output_block, destroy_output_block,
	output_constructor_or_init): New functions.
	(produce_asm, lto_output): Modified to produce both functions and
	constructors.
	(output_function): Much of the function that could be used to also
	handle constructors has been moved to create_output_block and
	destroy_output_block.
	* lto-tags.h (lto_function_header): Renamed to lto_header.
		
2007-08-28  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-function-out (output_expr_operand): Reorder the fields
	in the stream for CALL_EXPRs.
	(lto_static_init): Do not put out types for FUNCTION_DECLs.

2007-08-28  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-function-out.c (output_block): Added
	local_decl_index_stream, debug_decl_index_stream,
	local_decls_index and local_decls_index_d.
	(output_local_vars): Add code to write a seperate stream
	containing the index of each local var.
	(output_local_vars_index): New function.
	(produce_asm, output_function): Write new streams.
	(lto_static_init): Do not write flags or types for FIELD_DECLS.
	* lto-tags.h (lto_debug_context): Added decl_index_data.
	
2007-08-15  Jim Blandy  <jimb@codesourcery.com>

	* dwarf2out.c (lto_field_ref, force_field_die): New functions.
	* dwarf2out.h (lto_field_ref): New declaration.

2007-08-05  Mark Mitchell  <mark@codesourcery.com>

	* tree.h (FILE_SCOPE_P): New macro.
	(DECL_FILE_SCOPE_P): Use it.
	* dwarf2out.c (lto_type_ref): Use FILE_SCOPE_P to test whether
	an entity is at file scope.

2007-08-02  Kenneth Zadeck <zadeck@naturalbridge.com>
        * lto-tags.h (LTO_DEBUG_INDENT, LTO_DEBUG_INDENT_TOKEN,
	LTO_DEBUG_INTEGER, LTO_DEBUG_STRING, LTO_DEBUG_TOKEN,
	LTO_DEBUG_UNDENT, LTO_DEBUG_WIDE): Change "useless_function ()" to
	"(void)0"
	(useless_function): Removed.

	
2007-08-01  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-function-out.c (output_1_stream, output_zero,
	output_sleb128_stream, output_string, output_real, output_integer,
	output_tree_flags, output_type_ref, output_record_start,
	output_tree_list, output_eh_cleanup, output_eh_try,
	output_eh_catch, output_eh_allowed, output_eh_must_not_throw,
	output_eh_regions, output_constructor, output_expr_operand,
	output_local_vars, output_cfg, output_phi, output_bb,
	output_function): Added semicolons.
	* lto-tags.h (LTO_DEBUG_INDENT, LTO_DEBUG_INDENT_TOKEN,
	LTO_DEBUG_INTEGER, LTO_DEBUG_STRING, LTO_DEBUG_TOKEN, 
	LTO_DEBUG_UNDENT, LTO_DEBUG_WIDE): Changed to support semicolon
	after macro call.
	(useless_function): New function.
	

2007-07-31  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-function-out.c (produce_asm): Remove old debugging code.
	(output_function): Serialize DECL_ARGUMENTS.

2007-07-31  Kenneth Zadeck <zadeck@naturalbridge.com>

	* tree-into-ssa.c (rebuild_ssa_for_lto): New function.
	(pass_rebuild_ssa_for_lto): New pass.
	* cgraph_build.c (tree_opt_pass pass_rebuild_cgraph): Added some dumping.
	* lto-tree-flags.def (tcc_declaration): Added used_flag to serialized list.
	(SSA_NAME): Added nothrow_flag and volatile_flag to serialized list.
	* tree-pass.h (pass_early_lto_passes, pass_rebuild_ssa_for_lto): New passes.
	* lto-function-out.c (output_tree_flags): Added code to properly
	control writing of flags. Also added new parameter to pass in the
	tree code.
	(output_record_start, output_local_vars): Added param to
	output_tree_flags.
	(output_tree_list, output_eh_cleanup, output_eh_try,
	output_eh_catch, output_eh_allowed, output_eh_must_not_throw,
	output_eh_regions): Added missing debugging undent.
	(output_expr_operand): Added assert that there was no rtl and code
	to properly handle COND_EXPR.  Fixed the outputing of types and
	flags for many tree codes.
	(output_phi): Fixed the outputing of types and flags.  Generalized
	to handle parameters to phi that are not SSA_NAMES.
	(output_bb, LTO_SET_DEBUGGING_STREAM): Added assert to check for
	proper debug stream usage.
	(lto_static_init): Changed the outputting of flags and types for
	various tree codes.
	(pass_ipa_lto_out): Added dumping.
	* ipa-inline.c (pass_inline_parameters): Added dumping.
	* lto-tree-tags.def (COND_EXPR): Changed processing options.
	* lto-tags.h: Changed define into enum.
	* ipa.c (gate_ipa_fun_and_var_visibility): Always execute this
	pass.
	* tree.def (COND_EXEC): Properly documented this code.
	* tree-dfa.c (find_referenced_vars): Added code to walk phi
	functions.
	(pass_referenced_vars): Added name and dump flag.
	(find_vars_r): Now handles SSA_NAMES.
	* tree-optimize.c (gate_early_lto_passes): New function.
	(pass_early_lto_passes): New pass.
	* passes.c (pass_early_lto_passes): New pass.
	(dump_properties, debug_properties): New debugging function.
	* tree-ssanames.c (pass_release_ssa_names): Added dumping.
	
	
2007-07-19  Jan Hubicka  <jh@suse.cz>

	* cgraphunit.c (cgraph_finalize_function): Set properties of lowered
	body.

2007-07-13  Kenneth Zadeck <zadeck@naturalbridge.com>

	* flags.h (in_lto_p): New flag.
	* lto-tree_flags.def (CHANGE_DYNAMIC_TYPE_EXPR, POINTER_PLUS_EXPR): 
	New tree codes from merge.
	* tree.h (init_ssanames): Added cfun parameter.
	* lto-function-out.c: (ssa_names_stream, cfg_stream): New streams.
	(output_eh_regions): Renamed parameter cfun to fn.
	(output_expr_operand): Implemented SSA_NAME and GIMPLE_MODIFY_STMT
	cases.
	(output_local_vars): Set the local_vars stream locally.
	(output_ssa_names, output_cfg, output_phi): New function.
	(output_bb): Changed the cfun parameter to fn.  Do not put out cfg
	locally.  Output the phi_functions.
	(produce_asm): Add code to support ssa_names and cfg streams.
	(lto_static_init): Added GIMPLE_MODIFY_STMT.
	(LTO_SET_DEBUGGING_STREAM): New macro.
	(output_function): Add code to support ssa_names and cfg streams.
	* toplev.c (in_lto_p): Initialize.
	* ipa-inline.c (cgraph_gate_ipa_early_inlining): Added test for
	in_lto_p.
	* lto-tree-tags.def (GIMPLE_MODIFY_STMT, PHI_NODE): New tags.
	(LTO_change_dynamic_type_expr, LTO_gimple_modify_stmt,
	LTO_phi_node, LTO_pointer_plus_expr): New names.
	lto-tags.h (ssa_names_size, cfg_size, debug_ssa_names_size,
	debug_cfg_size): New fields in lto_function_header.
	(LTO_change_dynamic_type_expr, LTO_gimple_modify_stmt,
	LTO_phi_node, LTO_pointer_plus_expr): New fields and renumbered
	the rest.
	(ssa_names_data, cfg_data): New fields of lto_debug_context.
	* ipa.c (flags.h): New include.
	(gate_ipa_fun_and_var_visibility): New function for
	pass_ipa_function_and_variable_visibility.
	* tree-ssa.c (init_tree_ssa): Add fn parameter and replaced refs
	to cfun.
	* tree-inline.c (initialize_cfun): Ditto.
	* tree-optimize.c (gate_all_early_local_passes): Added ref to
	in_ltp_p.
	(execute_init_datastructures): Added cfun parameter to
	init_tree_ssa.
	* tree-flow.h (init_tree_ssa): Added struct function parameter.
	* Makefile.in (ipa.o): Added FLAGS_H dependency.
	* tree-ssanames.c (init_ssanames): Added two parameters.  Now
	takes struct function and default size.

	
2007-06-26  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-tree-flags.def (tcc_gimple_stmt): New TREE_CLASS.
	(GIMPLE_MODIFY_STMT, MEMORY_PARTITION_TAG, VEC_WIDEN_MULT_HI_EXPR,
	VEC_WIDEN_MULT_LO_EXPR, VEC_UNPACK_HI_EXPR,
	VEC_UNPACK_LO_EXPR, VEC_UNPACK_FLOAT_HI_EXPR,
	VEC_UNPACK_FLOAT_LO_EXPR, VEC_PACK_TRUNC_EXPR,
	VEC_PACK_SAT_EXPR, VEC_PACK_FIX_TRUNC_EXPR,
	VEC_EXTRACT_EVEN_EXPR, VEC_EXTRACT_ODD_EXPR,
	VEC_INTERLEAVE_HIGH_EXPR, VEC_INTERLEAVE_LOW_EXPR): New
	TREE_EXPRs.


2007-06-23  Mark Mitchell  <mark@codesourcery.com>
	
	* configure.ac: Use AC_CHECK_HEADERS to find libelf.h.
	* config.in: Regenerated.
	* configure: Likewise.

	* lto-tags.h (LTO_last_tag): Update.

2007-06-21  Kenneth Zadeck <zadeck@naturalbridge.com>

	* lto-tree-flags.def (FIX_CEIL_EXPR, FIX_FLOOR_EXPR,
	FIX_ROUND_EXPR, section_name, call_clobbered_flag): Removed dead
	cases.
	* lto-function-out.c (ADD_CLASS_FLAG, ADD_EXPR_FLAG): Changed
	expr->common to expr->base.
	* cfg.c (init_flow): Fixed ggc macro rot.
	* lto-tree-tags.def (FIX_CEIL_EXPR, FIX_FLOOR_EXPR,
	FIX_ROUND_EXPR): Removed dead tree types.
	

Local Variables:
change-log-default-name: "ChangeLog.lto"
End:
